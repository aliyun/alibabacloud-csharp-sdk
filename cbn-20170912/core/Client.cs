// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;

using Tea;
using Tea.Utils;

using AlibabaCloud.SDK.Cbn20170912.Models;

namespace AlibabaCloud.SDK.Cbn20170912
{
    public class Client : AlibabaCloud.OpenApiClient.Client
    {

        public Client(AlibabaCloud.OpenApiClient.Models.Config config): base(config)
        {
            this._endpointRule = "central";
            CheckConfig(config);
            this._endpoint = GetEndpoint("cbn", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
        }


        public string GetEndpoint(string productId, string regionId, string endpointRule, string network, string suffix, Dictionary<string, string> endpointMap, string endpoint)
        {
            if (!AlibabaCloud.TeaUtil.Common.Empty(endpoint))
            {
                return endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(endpointMap) && !AlibabaCloud.TeaUtil.Common.Empty(endpointMap.Get(regionId)))
            {
                return endpointMap.Get(regionId);
            }
            return AlibabaCloud.EndpointUtil.Common.GetEndpointRules(productId, regionId, endpointRule, network, suffix);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a flow log. After the flow log is enabled, the system collects traffic information about a specified resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  After you create a flow log, it is enabled by default. You can call this operation to enable a disabled flow log.</para>
        /// <list type="bullet">
        /// <item><description><c>ActiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being enabled. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is enabled.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ActiveFlowLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActiveFlowLogResponse
        /// </returns>
        public ActiveFlowLogResponse ActiveFlowLogWithOptions(ActiveFlowLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActiveFlowLog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActiveFlowLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a flow log. After the flow log is enabled, the system collects traffic information about a specified resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  After you create a flow log, it is enabled by default. You can call this operation to enable a disabled flow log.</para>
        /// <list type="bullet">
        /// <item><description><c>ActiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being enabled. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is enabled.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ActiveFlowLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActiveFlowLogResponse
        /// </returns>
        public async Task<ActiveFlowLogResponse> ActiveFlowLogWithOptionsAsync(ActiveFlowLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActiveFlowLog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActiveFlowLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a flow log. After the flow log is enabled, the system collects traffic information about a specified resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  After you create a flow log, it is enabled by default. You can call this operation to enable a disabled flow log.</para>
        /// <list type="bullet">
        /// <item><description><c>ActiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being enabled. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is enabled.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ActiveFlowLogRequest
        /// </param>
        /// 
        /// <returns>
        /// ActiveFlowLogResponse
        /// </returns>
        public ActiveFlowLogResponse ActiveFlowLog(ActiveFlowLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ActiveFlowLogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a flow log. After the flow log is enabled, the system collects traffic information about a specified resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  After you create a flow log, it is enabled by default. You can call this operation to enable a disabled flow log.</para>
        /// <list type="bullet">
        /// <item><description><c>ActiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being enabled. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is enabled.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ActiveFlowLogRequest
        /// </param>
        /// 
        /// <returns>
        /// ActiveFlowLogResponse
        /// </returns>
        public async Task<ActiveFlowLogResponse> ActiveFlowLogAsync(ActiveFlowLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ActiveFlowLogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>AddTrafficMatchRuleToTrafficMarkingPolicy</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.</para>
        /// <list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Creating</b> state, the traffic classification rule is being created. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule is in the <b>Active</b> state, the traffic classification rule is added to the traffic marking policy.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AddTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public AddTrafficMatchRuleToTrafficMarkingPolicyResponse AddTrafficMatchRuleToTrafficMarkingPolicyWithOptions(AddTrafficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTrafficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTrafficMatchRuleToTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>AddTrafficMatchRuleToTrafficMarkingPolicy</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.</para>
        /// <list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Creating</b> state, the traffic classification rule is being created. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule is in the <b>Active</b> state, the traffic classification rule is added to the traffic marking policy.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AddTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<AddTrafficMatchRuleToTrafficMarkingPolicyResponse> AddTrafficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(AddTrafficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTrafficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTrafficMatchRuleToTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>AddTrafficMatchRuleToTrafficMarkingPolicy</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.</para>
        /// <list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Creating</b> state, the traffic classification rule is being created. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule is in the <b>Active</b> state, the traffic classification rule is added to the traffic marking policy.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// AddTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public AddTrafficMatchRuleToTrafficMarkingPolicyResponse AddTrafficMatchRuleToTrafficMarkingPolicy(AddTrafficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddTrafficMatchRuleToTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>AddTrafficMatchRuleToTrafficMarkingPolicy</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.</para>
        /// <list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Creating</b> state, the traffic classification rule is being created. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule is in the <b>Active</b> state, the traffic classification rule is added to the traffic marking policy.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// AddTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<AddTrafficMatchRuleToTrafficMarkingPolicyResponse> AddTrafficMatchRuleToTrafficMarkingPolicyAsync(AddTrafficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddTrafficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3>Usage notes</h3>
        /// <para>The <b>AddTraficMatchRuleToTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. If you need to add a traffic classification rule to a traffic marking policy, call the <a href="https://help.aliyun.com/document_detail/427602.html">AddTrafficMatchRuleToTrafficMarkingPolicy</a> operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTraficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AddTraficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public AddTraficMatchRuleToTrafficMarkingPolicyResponse AddTraficMatchRuleToTrafficMarkingPolicyWithOptions(AddTraficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTraficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTraficMatchRuleToTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3>Usage notes</h3>
        /// <para>The <b>AddTraficMatchRuleToTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. If you need to add a traffic classification rule to a traffic marking policy, call the <a href="https://help.aliyun.com/document_detail/427602.html">AddTrafficMatchRuleToTrafficMarkingPolicy</a> operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTraficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AddTraficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public async Task<AddTraficMatchRuleToTrafficMarkingPolicyResponse> AddTraficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(AddTraficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTraficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTraficMatchRuleToTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3>Usage notes</h3>
        /// <para>The <b>AddTraficMatchRuleToTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. If you need to add a traffic classification rule to a traffic marking policy, call the <a href="https://help.aliyun.com/document_detail/427602.html">AddTrafficMatchRuleToTrafficMarkingPolicy</a> operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTraficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// AddTraficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public AddTraficMatchRuleToTrafficMarkingPolicyResponse AddTraficMatchRuleToTrafficMarkingPolicy(AddTraficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddTraficMatchRuleToTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a traffic classification rule to a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3>Usage notes</h3>
        /// <para>The <b>AddTraficMatchRuleToTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. If you need to add a traffic classification rule to a traffic marking policy, call the <a href="https://help.aliyun.com/document_detail/427602.html">AddTrafficMatchRuleToTrafficMarkingPolicy</a> operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AddTraficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// AddTraficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI AddTraficMatchRuleToTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public async Task<AddTraficMatchRuleToTrafficMarkingPolicyResponse> AddTraficMatchRuleToTrafficMarkingPolicyAsync(AddTraficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddTraficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a bandwidth plan with a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can associate multiple bandwidth plans with a CEN instance. However, the pair of areas connected by each bandwidth plan must be unique.
        /// For example, if a CEN instance is associated with a bandwidth plan that connects networks in the Chinese mainland, you cannot associate another bandwidth plan that also connects networks in the Chinese mainland with the CEN instance. However, you can associate a bandwidth plan that connects the Chinese mainland to North America with the CEN instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateCenBandwidthPackageResponse
        /// </returns>
        public AssociateCenBandwidthPackageResponse AssociateCenBandwidthPackageWithOptions(AssociateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateCenBandwidthPackageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a bandwidth plan with a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can associate multiple bandwidth plans with a CEN instance. However, the pair of areas connected by each bandwidth plan must be unique.
        /// For example, if a CEN instance is associated with a bandwidth plan that connects networks in the Chinese mainland, you cannot associate another bandwidth plan that also connects networks in the Chinese mainland with the CEN instance. However, you can associate a bandwidth plan that connects the Chinese mainland to North America with the CEN instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateCenBandwidthPackageResponse
        /// </returns>
        public async Task<AssociateCenBandwidthPackageResponse> AssociateCenBandwidthPackageWithOptionsAsync(AssociateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateCenBandwidthPackageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a bandwidth plan with a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can associate multiple bandwidth plans with a CEN instance. However, the pair of areas connected by each bandwidth plan must be unique.
        /// For example, if a CEN instance is associated with a bandwidth plan that connects networks in the Chinese mainland, you cannot associate another bandwidth plan that also connects networks in the Chinese mainland with the CEN instance. However, you can associate a bandwidth plan that connects the Chinese mainland to North America with the CEN instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateCenBandwidthPackageResponse
        /// </returns>
        public AssociateCenBandwidthPackageResponse AssociateCenBandwidthPackage(AssociateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AssociateCenBandwidthPackageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a bandwidth plan with a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can associate multiple bandwidth plans with a CEN instance. However, the pair of areas connected by each bandwidth plan must be unique.
        /// For example, if a CEN instance is associated with a bandwidth plan that connects networks in the Chinese mainland, you cannot associate another bandwidth plan that also connects networks in the Chinese mainland with the CEN instance. However, you can associate a bandwidth plan that connects the Chinese mainland to North America with the CEN instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateCenBandwidthPackageResponse
        /// </returns>
        public async Task<AssociateCenBandwidthPackageResponse> AssociateCenBandwidthPackageAsync(AssociateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AssociateCenBandwidthPackageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you create a network instance connection on a transit router, you can configure an associated forwarding correlation to associate the network instance connection with the route table of an Enterprise Edition transit router. The Enterprise Edition transit router forwards traffic for the network instance based on the routes in the route table. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Only route tables of Enterprise Edition transit routers support associated forwarding correlations. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description>Each network instance connection can have an associated forwarding correlation with only one route table of only one Enterprise Edition transit router.</description></item>
        /// <item><description><b>AssociateTransitRouterAttachmentWithRouteTable</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query the status of an associated forwarding correlation.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Associating</b> state, the associated forwarding correlation is being created. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation is in the <b>Active</b> state, the associated forwarding correlation is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterAttachmentWithRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterAttachmentWithRouteTableResponse
        /// </returns>
        public AssociateTransitRouterAttachmentWithRouteTableResponse AssociateTransitRouterAttachmentWithRouteTableWithOptions(AssociateTransitRouterAttachmentWithRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateTransitRouterAttachmentWithRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateTransitRouterAttachmentWithRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you create a network instance connection on a transit router, you can configure an associated forwarding correlation to associate the network instance connection with the route table of an Enterprise Edition transit router. The Enterprise Edition transit router forwards traffic for the network instance based on the routes in the route table. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Only route tables of Enterprise Edition transit routers support associated forwarding correlations. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description>Each network instance connection can have an associated forwarding correlation with only one route table of only one Enterprise Edition transit router.</description></item>
        /// <item><description><b>AssociateTransitRouterAttachmentWithRouteTable</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query the status of an associated forwarding correlation.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Associating</b> state, the associated forwarding correlation is being created. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation is in the <b>Active</b> state, the associated forwarding correlation is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterAttachmentWithRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterAttachmentWithRouteTableResponse
        /// </returns>
        public async Task<AssociateTransitRouterAttachmentWithRouteTableResponse> AssociateTransitRouterAttachmentWithRouteTableWithOptionsAsync(AssociateTransitRouterAttachmentWithRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateTransitRouterAttachmentWithRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateTransitRouterAttachmentWithRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you create a network instance connection on a transit router, you can configure an associated forwarding correlation to associate the network instance connection with the route table of an Enterprise Edition transit router. The Enterprise Edition transit router forwards traffic for the network instance based on the routes in the route table. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Only route tables of Enterprise Edition transit routers support associated forwarding correlations. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description>Each network instance connection can have an associated forwarding correlation with only one route table of only one Enterprise Edition transit router.</description></item>
        /// <item><description><b>AssociateTransitRouterAttachmentWithRouteTable</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query the status of an associated forwarding correlation.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Associating</b> state, the associated forwarding correlation is being created. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation is in the <b>Active</b> state, the associated forwarding correlation is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterAttachmentWithRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterAttachmentWithRouteTableResponse
        /// </returns>
        public AssociateTransitRouterAttachmentWithRouteTableResponse AssociateTransitRouterAttachmentWithRouteTable(AssociateTransitRouterAttachmentWithRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AssociateTransitRouterAttachmentWithRouteTableWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you create a network instance connection on a transit router, you can configure an associated forwarding correlation to associate the network instance connection with the route table of an Enterprise Edition transit router. The Enterprise Edition transit router forwards traffic for the network instance based on the routes in the route table. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Only route tables of Enterprise Edition transit routers support associated forwarding correlations. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description>Each network instance connection can have an associated forwarding correlation with only one route table of only one Enterprise Edition transit router.</description></item>
        /// <item><description><b>AssociateTransitRouterAttachmentWithRouteTable</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query the status of an associated forwarding correlation.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Associating</b> state, the associated forwarding correlation is being created. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation is in the <b>Active</b> state, the associated forwarding correlation is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterAttachmentWithRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterAttachmentWithRouteTableResponse
        /// </returns>
        public async Task<AssociateTransitRouterAttachmentWithRouteTableResponse> AssociateTransitRouterAttachmentWithRouteTableAsync(AssociateTransitRouterAttachmentWithRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AssociateTransitRouterAttachmentWithRouteTableWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the vSwitch of a virtual private cloud (VPC) with a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <list type="bullet">
        /// <item><description>A vSwitch can be associated with only one multicast domain. Make sure that the vSwitch is not associated with other multicast domains. For more information about how to disassociate a vSwitch from a multicast domain, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>AssociateTransitRouterMulticastDomain is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterMulticastDomainAssociations operation to query whether a vSwitch is associated with the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is Associating, it indicates that the vSwitch is being associated with the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the status is Associated, the vSwitch is associated with the specified multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The VPC of the vSwitch must be associated with an Enterprise Edition transit router. For more information about how to associate a VPC with an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterMulticastDomainResponse
        /// </returns>
        public AssociateTransitRouterMulticastDomainResponse AssociateTransitRouterMulticastDomainWithOptions(AssociateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateTransitRouterMulticastDomainResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the vSwitch of a virtual private cloud (VPC) with a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <list type="bullet">
        /// <item><description>A vSwitch can be associated with only one multicast domain. Make sure that the vSwitch is not associated with other multicast domains. For more information about how to disassociate a vSwitch from a multicast domain, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>AssociateTransitRouterMulticastDomain is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterMulticastDomainAssociations operation to query whether a vSwitch is associated with the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is Associating, it indicates that the vSwitch is being associated with the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the status is Associated, the vSwitch is associated with the specified multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The VPC of the vSwitch must be associated with an Enterprise Edition transit router. For more information about how to associate a VPC with an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<AssociateTransitRouterMulticastDomainResponse> AssociateTransitRouterMulticastDomainWithOptionsAsync(AssociateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AssociateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AssociateTransitRouterMulticastDomainResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the vSwitch of a virtual private cloud (VPC) with a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <list type="bullet">
        /// <item><description>A vSwitch can be associated with only one multicast domain. Make sure that the vSwitch is not associated with other multicast domains. For more information about how to disassociate a vSwitch from a multicast domain, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>AssociateTransitRouterMulticastDomain is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterMulticastDomainAssociations operation to query whether a vSwitch is associated with the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is Associating, it indicates that the vSwitch is being associated with the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the status is Associated, the vSwitch is associated with the specified multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The VPC of the vSwitch must be associated with an Enterprise Edition transit router. For more information about how to associate a VPC with an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterMulticastDomainResponse
        /// </returns>
        public AssociateTransitRouterMulticastDomainResponse AssociateTransitRouterMulticastDomain(AssociateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AssociateTransitRouterMulticastDomainWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the vSwitch of a virtual private cloud (VPC) with a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <list type="bullet">
        /// <item><description>A vSwitch can be associated with only one multicast domain. Make sure that the vSwitch is not associated with other multicast domains. For more information about how to disassociate a vSwitch from a multicast domain, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>AssociateTransitRouterMulticastDomain is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterMulticastDomainAssociations operation to query whether a vSwitch is associated with the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is Associating, it indicates that the vSwitch is being associated with the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the status is Associated, the vSwitch is associated with the specified multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The VPC of the vSwitch must be associated with an Enterprise Edition transit router. For more information about how to associate a VPC with an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AssociateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// AssociateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<AssociateTransitRouterMulticastDomainResponse> AssociateTransitRouterMulticastDomainAsync(AssociateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AssociateTransitRouterMulticastDomainWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches a network instance to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>CEN allows you to attach a network instance that belongs to another Alibaba Cloud account to your CEN instance. Before you attach the network instance, CEN must acquire permissions to access the network instance that belongs to another Alibaba Cloud account.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to grant CEN permissions on virtual private clouds (VPCs) that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>For more information about how to grant CEN permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a>.</description></item>
        /// <item><description>By default, you cannot grant permissions on virtual border routers (VBRs) that belong to another Alibaba Cloud account to a CEN instance. If you need to use this feature, contact your account manager.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AttachCenChildInstanceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AttachCenChildInstanceResponse
        /// </returns>
        public AttachCenChildInstanceResponse AttachCenChildInstanceWithOptions(AttachCenChildInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachCenChildInstance",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachCenChildInstanceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches a network instance to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>CEN allows you to attach a network instance that belongs to another Alibaba Cloud account to your CEN instance. Before you attach the network instance, CEN must acquire permissions to access the network instance that belongs to another Alibaba Cloud account.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to grant CEN permissions on virtual private clouds (VPCs) that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>For more information about how to grant CEN permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a>.</description></item>
        /// <item><description>By default, you cannot grant permissions on virtual border routers (VBRs) that belong to another Alibaba Cloud account to a CEN instance. If you need to use this feature, contact your account manager.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AttachCenChildInstanceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// AttachCenChildInstanceResponse
        /// </returns>
        public async Task<AttachCenChildInstanceResponse> AttachCenChildInstanceWithOptionsAsync(AttachCenChildInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachCenChildInstance",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachCenChildInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches a network instance to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>CEN allows you to attach a network instance that belongs to another Alibaba Cloud account to your CEN instance. Before you attach the network instance, CEN must acquire permissions to access the network instance that belongs to another Alibaba Cloud account.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to grant CEN permissions on virtual private clouds (VPCs) that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>For more information about how to grant CEN permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a>.</description></item>
        /// <item><description>By default, you cannot grant permissions on virtual border routers (VBRs) that belong to another Alibaba Cloud account to a CEN instance. If you need to use this feature, contact your account manager.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AttachCenChildInstanceRequest
        /// </param>
        /// 
        /// <returns>
        /// AttachCenChildInstanceResponse
        /// </returns>
        public AttachCenChildInstanceResponse AttachCenChildInstance(AttachCenChildInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AttachCenChildInstanceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches a network instance to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>CEN allows you to attach a network instance that belongs to another Alibaba Cloud account to your CEN instance. Before you attach the network instance, CEN must acquire permissions to access the network instance that belongs to another Alibaba Cloud account.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to grant CEN permissions on virtual private clouds (VPCs) that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>For more information about how to grant CEN permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, see <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a>.</description></item>
        /// <item><description>By default, you cannot grant permissions on virtual border routers (VBRs) that belong to another Alibaba Cloud account to a CEN instance. If you need to use this feature, contact your account manager.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// AttachCenChildInstanceRequest
        /// </param>
        /// 
        /// <returns>
        /// AttachCenChildInstanceResponse
        /// </returns>
        public async Task<AttachCenChildInstanceResponse> AttachCenChildInstanceAsync(AttachCenChildInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AttachCenChildInstanceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether your Alibaba Cloud account has the transit router feature activated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckTransitRouterServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckTransitRouterServiceResponse
        /// </returns>
        public CheckTransitRouterServiceResponse CheckTransitRouterServiceWithOptions(CheckTransitRouterServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckTransitRouterService",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckTransitRouterServiceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether your Alibaba Cloud account has the transit router feature activated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckTransitRouterServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckTransitRouterServiceResponse
        /// </returns>
        public async Task<CheckTransitRouterServiceResponse> CheckTransitRouterServiceWithOptionsAsync(CheckTransitRouterServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckTransitRouterService",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckTransitRouterServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether your Alibaba Cloud account has the transit router feature activated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckTransitRouterServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckTransitRouterServiceResponse
        /// </returns>
        public CheckTransitRouterServiceResponse CheckTransitRouterService(CheckTransitRouterServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckTransitRouterServiceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether your Alibaba Cloud account has the transit router feature activated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckTransitRouterServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckTransitRouterServiceResponse
        /// </returns>
        public async Task<CheckTransitRouterServiceResponse> CheckTransitRouterServiceAsync(CheckTransitRouterServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckTransitRouterServiceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) instances are basic network resources that are used to manage interconnected networks. You can use a CEN instance to manage a network that covers one or multiple regions. Before you can connect network instances, you must first call the CreateCen operation to create a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateCen</em>* is an asynchronous operation. After you a request is sent, the system returns a request ID and runs the task in the background. You can call <b>DescribeCens</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Creating</b> state, the CEN instance is being created. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenResponse
        /// </returns>
        public CreateCenResponse CreateCenWithOptions(CreateCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) instances are basic network resources that are used to manage interconnected networks. You can use a CEN instance to manage a network that covers one or multiple regions. Before you can connect network instances, you must first call the CreateCen operation to create a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateCen</em>* is an asynchronous operation. After you a request is sent, the system returns a request ID and runs the task in the background. You can call <b>DescribeCens</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Creating</b> state, the CEN instance is being created. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenResponse
        /// </returns>
        public async Task<CreateCenResponse> CreateCenWithOptionsAsync(CreateCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) instances are basic network resources that are used to manage interconnected networks. You can use a CEN instance to manage a network that covers one or multiple regions. Before you can connect network instances, you must first call the CreateCen operation to create a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateCen</em>* is an asynchronous operation. After you a request is sent, the system returns a request ID and runs the task in the background. You can call <b>DescribeCens</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Creating</b> state, the CEN instance is being created. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenResponse
        /// </returns>
        public CreateCenResponse CreateCen(CreateCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) instances are basic network resources that are used to manage interconnected networks. You can use a CEN instance to manage a network that covers one or multiple regions. Before you can connect network instances, you must first call the CreateCen operation to create a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateCen</em>* is an asynchronous operation. After you a request is sent, the system returns a request ID and runs the task in the background. You can call <b>DescribeCens</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Creating</b> state, the CEN instance is being created. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenResponse
        /// </returns>
        public async Task<CreateCenResponse> CreateCenAsync(CreateCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must specify the areas to be connected when you create a bandwidth plan. An area contains one or more Alibaba Cloud regions. When you select areas for a bandwidth plan, make sure that the areas contain the regions that you want to connect. For more information about the supported areas and regions, see <a href="https://help.aliyun.com/document_detail/181560.html">Purchase a bandwidth plan</a>.</para>
        /// <list type="bullet">
        /// <item><description>For more information about the billing rules, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// <item><description><b>CreateCenBandwidthPackage</b> is an asynchronous operation. After you send a request, the system returns a bandwidth plan instance ID and runs the task in the background. You can call the <b>DescribeCenBandwidthPackages</b> operation to query the status of a bandwidth plan. If a bandwidth plan is in the <b>Idle</b> or <b>InUse</b> state, the bandwidth plan is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenBandwidthPackageResponse
        /// </returns>
        public CreateCenBandwidthPackageResponse CreateCenBandwidthPackageWithOptions(CreateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenewDuration))
            {
                query["AutoRenewDuration"] = request.AutoRenewDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthPackageChargeType))
            {
                query["BandwidthPackageChargeType"] = request.BandwidthPackageChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionAId))
            {
                query["GeographicRegionAId"] = request.GeographicRegionAId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionBId))
            {
                query["GeographicRegionBId"] = request.GeographicRegionBId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PricingCycle))
            {
                query["PricingCycle"] = request.PricingCycle;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenBandwidthPackageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must specify the areas to be connected when you create a bandwidth plan. An area contains one or more Alibaba Cloud regions. When you select areas for a bandwidth plan, make sure that the areas contain the regions that you want to connect. For more information about the supported areas and regions, see <a href="https://help.aliyun.com/document_detail/181560.html">Purchase a bandwidth plan</a>.</para>
        /// <list type="bullet">
        /// <item><description>For more information about the billing rules, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// <item><description><b>CreateCenBandwidthPackage</b> is an asynchronous operation. After you send a request, the system returns a bandwidth plan instance ID and runs the task in the background. You can call the <b>DescribeCenBandwidthPackages</b> operation to query the status of a bandwidth plan. If a bandwidth plan is in the <b>Idle</b> or <b>InUse</b> state, the bandwidth plan is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenBandwidthPackageResponse
        /// </returns>
        public async Task<CreateCenBandwidthPackageResponse> CreateCenBandwidthPackageWithOptionsAsync(CreateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenewDuration))
            {
                query["AutoRenewDuration"] = request.AutoRenewDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthPackageChargeType))
            {
                query["BandwidthPackageChargeType"] = request.BandwidthPackageChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionAId))
            {
                query["GeographicRegionAId"] = request.GeographicRegionAId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionBId))
            {
                query["GeographicRegionBId"] = request.GeographicRegionBId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PricingCycle))
            {
                query["PricingCycle"] = request.PricingCycle;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenBandwidthPackageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must specify the areas to be connected when you create a bandwidth plan. An area contains one or more Alibaba Cloud regions. When you select areas for a bandwidth plan, make sure that the areas contain the regions that you want to connect. For more information about the supported areas and regions, see <a href="https://help.aliyun.com/document_detail/181560.html">Purchase a bandwidth plan</a>.</para>
        /// <list type="bullet">
        /// <item><description>For more information about the billing rules, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// <item><description><b>CreateCenBandwidthPackage</b> is an asynchronous operation. After you send a request, the system returns a bandwidth plan instance ID and runs the task in the background. You can call the <b>DescribeCenBandwidthPackages</b> operation to query the status of a bandwidth plan. If a bandwidth plan is in the <b>Idle</b> or <b>InUse</b> state, the bandwidth plan is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenBandwidthPackageResponse
        /// </returns>
        public CreateCenBandwidthPackageResponse CreateCenBandwidthPackage(CreateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenBandwidthPackageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must specify the areas to be connected when you create a bandwidth plan. An area contains one or more Alibaba Cloud regions. When you select areas for a bandwidth plan, make sure that the areas contain the regions that you want to connect. For more information about the supported areas and regions, see <a href="https://help.aliyun.com/document_detail/181560.html">Purchase a bandwidth plan</a>.</para>
        /// <list type="bullet">
        /// <item><description>For more information about the billing rules, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// <item><description><b>CreateCenBandwidthPackage</b> is an asynchronous operation. After you send a request, the system returns a bandwidth plan instance ID and runs the task in the background. You can call the <b>DescribeCenBandwidthPackages</b> operation to query the status of a bandwidth plan. If a bandwidth plan is in the <b>Idle</b> or <b>InUse</b> state, the bandwidth plan is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenBandwidthPackageResponse
        /// </returns>
        public async Task<CreateCenBandwidthPackageResponse> CreateCenBandwidthPackageAsync(CreateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenBandwidthPackageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route entry to a network instance and sets the next hop of the destination CIDR block to the transit router in the current region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can add routes only to virtual private clouds (VPCs) or virtual border routers (VBRs) that are connected to an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description>By default, the next hop of the routes is the <b>transit router connection</b>, which is the connection between the VBR and the Enterprise Edition transit router. You cannot modify the next hop.</description></item>
        /// <item><description><b>CreateCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Pending</b> state, the route is being created. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Available</b> state, the route is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public CreateCenChildInstanceRouteEntryToAttachmentResponse CreateCenChildInstanceRouteEntryToAttachmentWithOptions(CreateCenChildInstanceRouteEntryToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenChildInstanceRouteEntryToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenChildInstanceRouteEntryToAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route entry to a network instance and sets the next hop of the destination CIDR block to the transit router in the current region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can add routes only to virtual private clouds (VPCs) or virtual border routers (VBRs) that are connected to an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description>By default, the next hop of the routes is the <b>transit router connection</b>, which is the connection between the VBR and the Enterprise Edition transit router. You cannot modify the next hop.</description></item>
        /// <item><description><b>CreateCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Pending</b> state, the route is being created. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Available</b> state, the route is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public async Task<CreateCenChildInstanceRouteEntryToAttachmentResponse> CreateCenChildInstanceRouteEntryToAttachmentWithOptionsAsync(CreateCenChildInstanceRouteEntryToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenChildInstanceRouteEntryToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenChildInstanceRouteEntryToAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route entry to a network instance and sets the next hop of the destination CIDR block to the transit router in the current region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can add routes only to virtual private clouds (VPCs) or virtual border routers (VBRs) that are connected to an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description>By default, the next hop of the routes is the <b>transit router connection</b>, which is the connection between the VBR and the Enterprise Edition transit router. You cannot modify the next hop.</description></item>
        /// <item><description><b>CreateCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Pending</b> state, the route is being created. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Available</b> state, the route is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public CreateCenChildInstanceRouteEntryToAttachmentResponse CreateCenChildInstanceRouteEntryToAttachment(CreateCenChildInstanceRouteEntryToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenChildInstanceRouteEntryToAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route entry to a network instance and sets the next hop of the destination CIDR block to the transit router in the current region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can add routes only to virtual private clouds (VPCs) or virtual border routers (VBRs) that are connected to an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description>By default, the next hop of the routes is the <b>transit router connection</b>, which is the connection between the VBR and the Enterprise Edition transit router. You cannot modify the next hop.</description></item>
        /// <item><description><b>CreateCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Pending</b> state, the route is being created. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Available</b> state, the route is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public async Task<CreateCenChildInstanceRouteEntryToAttachmentResponse> CreateCenChildInstanceRouteEntryToAttachmentAsync(CreateCenChildInstanceRouteEntryToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenChildInstanceRouteEntryToAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds routes to a network instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the CreateCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation,<a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot add a route entry to an Enterprise Edition transit router by calling the CreateCenChildInstanceRouteEntryToCen operation.</description></item>
        /// <item><description>By default, the next hop of the route entry is the regional gateway of the Cloud Enterprise Network (CEN) instance. You cannot modify the next hop.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public CreateCenChildInstanceRouteEntryToCenResponse CreateCenChildInstanceRouteEntryToCenWithOptions(CreateCenChildInstanceRouteEntryToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceAliUid))
            {
                query["ChildInstanceAliUid"] = request.ChildInstanceAliUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenChildInstanceRouteEntryToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenChildInstanceRouteEntryToCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds routes to a network instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the CreateCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation,<a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot add a route entry to an Enterprise Edition transit router by calling the CreateCenChildInstanceRouteEntryToCen operation.</description></item>
        /// <item><description>By default, the next hop of the route entry is the regional gateway of the Cloud Enterprise Network (CEN) instance. You cannot modify the next hop.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public async Task<CreateCenChildInstanceRouteEntryToCenResponse> CreateCenChildInstanceRouteEntryToCenWithOptionsAsync(CreateCenChildInstanceRouteEntryToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceAliUid))
            {
                query["ChildInstanceAliUid"] = request.ChildInstanceAliUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenChildInstanceRouteEntryToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenChildInstanceRouteEntryToCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds routes to a network instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the CreateCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation,<a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot add a route entry to an Enterprise Edition transit router by calling the CreateCenChildInstanceRouteEntryToCen operation.</description></item>
        /// <item><description>By default, the next hop of the route entry is the regional gateway of the Cloud Enterprise Network (CEN) instance. You cannot modify the next hop.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public CreateCenChildInstanceRouteEntryToCenResponse CreateCenChildInstanceRouteEntryToCen(CreateCenChildInstanceRouteEntryToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenChildInstanceRouteEntryToCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds routes to a network instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the CreateCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation,<a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot add a route entry to an Enterprise Edition transit router by calling the CreateCenChildInstanceRouteEntryToCen operation.</description></item>
        /// <item><description>By default, the next hop of the route entry is the regional gateway of the Cloud Enterprise Network (CEN) instance. You cannot modify the next hop.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public async Task<CreateCenChildInstanceRouteEntryToCenResponse> CreateCenChildInstanceRouteEntryToCenAsync(CreateCenChildInstanceRouteEntryToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenChildInstanceRouteEntryToCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a quality of service (QoS) policy for an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only inter-region connections created on Enterprise Edition transit routers support QoS policies.</para>
        /// <list type="bullet">
        /// <item><description>Traffic scheduling applies only to outbound traffic on Enterprise Edition transit routers.
        /// For example, you create an inter-region connection between the China (Hangzhou) and China (Qingdao) regions, and create a QoS policy for the transit router in the China (Hangzhou) region. In this case, the QoS policy can ensure bandwidth for network traffic from the China (Hangzhou) region to the China (Qingdao) region. However, the QoS policy does not apply to network traffic from the China (Qingdao) region to the China (Hangzhou) region.</description></item>
        /// <item><description><b>CreateCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of the task.<list type="bullet">
        /// <item><description>If the QoS policy is in the <b>Creating</b> state, the QoS policy is being created. You can query the QoS policy but cannot perform other operations on the QoS policy.</description></item>
        /// <item><description>If the QoS policy is in the <b>Active</b> state, the QoS policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h2><a href="#"></a>Prerequisite</h2>
        /// <para>Before you call the <b>CreateCenInterRegionTrafficQosPolicy</b> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>An inter-region connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.</description></item>
        /// <item><description>A traffic marking policy is created. For more information, see <a href="https://help.aliyun.com/document_detail/419025.html">CreateTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public CreateCenInterRegionTrafficQosPolicyResponse CreateCenInterRegionTrafficQosPolicyWithOptions(CreateCenInterRegionTrafficQosPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthGuaranteeMode))
            {
                query["BandwidthGuaranteeMode"] = request.BandwidthGuaranteeMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueues))
            {
                query["TrafficQosQueues"] = request.TrafficQosQueues;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenInterRegionTrafficQosPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenInterRegionTrafficQosPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a quality of service (QoS) policy for an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only inter-region connections created on Enterprise Edition transit routers support QoS policies.</para>
        /// <list type="bullet">
        /// <item><description>Traffic scheduling applies only to outbound traffic on Enterprise Edition transit routers.
        /// For example, you create an inter-region connection between the China (Hangzhou) and China (Qingdao) regions, and create a QoS policy for the transit router in the China (Hangzhou) region. In this case, the QoS policy can ensure bandwidth for network traffic from the China (Hangzhou) region to the China (Qingdao) region. However, the QoS policy does not apply to network traffic from the China (Qingdao) region to the China (Hangzhou) region.</description></item>
        /// <item><description><b>CreateCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of the task.<list type="bullet">
        /// <item><description>If the QoS policy is in the <b>Creating</b> state, the QoS policy is being created. You can query the QoS policy but cannot perform other operations on the QoS policy.</description></item>
        /// <item><description>If the QoS policy is in the <b>Active</b> state, the QoS policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h2><a href="#"></a>Prerequisite</h2>
        /// <para>Before you call the <b>CreateCenInterRegionTrafficQosPolicy</b> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>An inter-region connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.</description></item>
        /// <item><description>A traffic marking policy is created. For more information, see <a href="https://help.aliyun.com/document_detail/419025.html">CreateTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public async Task<CreateCenInterRegionTrafficQosPolicyResponse> CreateCenInterRegionTrafficQosPolicyWithOptionsAsync(CreateCenInterRegionTrafficQosPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthGuaranteeMode))
            {
                query["BandwidthGuaranteeMode"] = request.BandwidthGuaranteeMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueues))
            {
                query["TrafficQosQueues"] = request.TrafficQosQueues;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenInterRegionTrafficQosPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenInterRegionTrafficQosPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a quality of service (QoS) policy for an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only inter-region connections created on Enterprise Edition transit routers support QoS policies.</para>
        /// <list type="bullet">
        /// <item><description>Traffic scheduling applies only to outbound traffic on Enterprise Edition transit routers.
        /// For example, you create an inter-region connection between the China (Hangzhou) and China (Qingdao) regions, and create a QoS policy for the transit router in the China (Hangzhou) region. In this case, the QoS policy can ensure bandwidth for network traffic from the China (Hangzhou) region to the China (Qingdao) region. However, the QoS policy does not apply to network traffic from the China (Qingdao) region to the China (Hangzhou) region.</description></item>
        /// <item><description><b>CreateCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of the task.<list type="bullet">
        /// <item><description>If the QoS policy is in the <b>Creating</b> state, the QoS policy is being created. You can query the QoS policy but cannot perform other operations on the QoS policy.</description></item>
        /// <item><description>If the QoS policy is in the <b>Active</b> state, the QoS policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h2><a href="#"></a>Prerequisite</h2>
        /// <para>Before you call the <b>CreateCenInterRegionTrafficQosPolicy</b> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>An inter-region connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.</description></item>
        /// <item><description>A traffic marking policy is created. For more information, see <a href="https://help.aliyun.com/document_detail/419025.html">CreateTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public CreateCenInterRegionTrafficQosPolicyResponse CreateCenInterRegionTrafficQosPolicy(CreateCenInterRegionTrafficQosPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenInterRegionTrafficQosPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a quality of service (QoS) policy for an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only inter-region connections created on Enterprise Edition transit routers support QoS policies.</para>
        /// <list type="bullet">
        /// <item><description>Traffic scheduling applies only to outbound traffic on Enterprise Edition transit routers.
        /// For example, you create an inter-region connection between the China (Hangzhou) and China (Qingdao) regions, and create a QoS policy for the transit router in the China (Hangzhou) region. In this case, the QoS policy can ensure bandwidth for network traffic from the China (Hangzhou) region to the China (Qingdao) region. However, the QoS policy does not apply to network traffic from the China (Qingdao) region to the China (Hangzhou) region.</description></item>
        /// <item><description><b>CreateCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of the task.<list type="bullet">
        /// <item><description>If the QoS policy is in the <b>Creating</b> state, the QoS policy is being created. You can query the QoS policy but cannot perform other operations on the QoS policy.</description></item>
        /// <item><description>If the QoS policy is in the <b>Active</b> state, the QoS policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h2><a href="#"></a>Prerequisite</h2>
        /// <para>Before you call the <b>CreateCenInterRegionTrafficQosPolicy</b> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>An inter-region connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.</description></item>
        /// <item><description>A traffic marking policy is created. For more information, see <a href="https://help.aliyun.com/document_detail/419025.html">CreateTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public async Task<CreateCenInterRegionTrafficQosPolicyResponse> CreateCenInterRegionTrafficQosPolicyAsync(CreateCenInterRegionTrafficQosPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenInterRegionTrafficQosPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the queue.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The ID of the request.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public CreateCenInterRegionTrafficQosQueueResponse CreateCenInterRegionTrafficQosQueueWithOptions(CreateCenInterRegionTrafficQosQueueRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dscps))
            {
                query["Dscps"] = request.Dscps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueDescription))
            {
                query["QosQueueDescription"] = request.QosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueName))
            {
                query["QosQueueName"] = request.QosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemainBandwidthPercent))
            {
                query["RemainBandwidthPercent"] = request.RemainBandwidthPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenInterRegionTrafficQosQueue",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenInterRegionTrafficQosQueueResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the queue.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The ID of the request.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public async Task<CreateCenInterRegionTrafficQosQueueResponse> CreateCenInterRegionTrafficQosQueueWithOptionsAsync(CreateCenInterRegionTrafficQosQueueRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dscps))
            {
                query["Dscps"] = request.Dscps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueDescription))
            {
                query["QosQueueDescription"] = request.QosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueName))
            {
                query["QosQueueName"] = request.QosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemainBandwidthPercent))
            {
                query["RemainBandwidthPercent"] = request.RemainBandwidthPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenInterRegionTrafficQosQueue",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenInterRegionTrafficQosQueueResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the queue.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The ID of the request.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public CreateCenInterRegionTrafficQosQueueResponse CreateCenInterRegionTrafficQosQueue(CreateCenInterRegionTrafficQosQueueRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenInterRegionTrafficQosQueueWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the queue.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The ID of the request.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public async Task<CreateCenInterRegionTrafficQosQueueResponse> CreateCenInterRegionTrafficQosQueueAsync(CreateCenInterRegionTrafficQosQueueRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenInterRegionTrafficQosQueueWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routing policy. A routing policy filters routing information and facilitates network management.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Routing policies are sorted by priority. A smaller value indicates a higher priority. Each routing policy is a collection of conditional statements and execution statements. Starting from the routing policy with the highest priority, the system matches routes against the match conditions specified by routing policies. If a route meets all the match conditions of a routing policy, the system permits or denies the route based on the action specified in the routing policy. You can also modify the attributes of permitted routes. By default, the system permits routes that meet none of the match conditions. For more information, see <a href="https://help.aliyun.com/document_detail/124157.html">Routing policy overview</a>.
        /// <c>CreateCenRouteMap</c> is an asynchronous operation. After you send a request, the routing policy ID is returned but the operation is still being performed in the system background. You can call <c>DescribeCenRouteMaps</c> to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Creating</b> state, the routing policy is being created. In this case, you can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy is in the <b>Active</b> state, the routing policy is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenRouteMapResponse
        /// </returns>
        public CreateCenRouteMapResponse CreateCenRouteMapWithOptions(CreateCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AsPathMatchMode))
            {
                query["AsPathMatchMode"] = request.AsPathMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrMatchMode))
            {
                query["CidrMatchMode"] = request.CidrMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityMatchMode))
            {
                query["CommunityMatchMode"] = request.CommunityMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityOperateMode))
            {
                query["CommunityOperateMode"] = request.CommunityOperateMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationChildInstanceTypes))
            {
                query["DestinationChildInstanceTypes"] = request.DestinationChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlocks))
            {
                query["DestinationCidrBlocks"] = request.DestinationCidrBlocks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIds))
            {
                query["DestinationInstanceIds"] = request.DestinationInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIdsReverseMatch))
            {
                query["DestinationInstanceIdsReverseMatch"] = request.DestinationInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRegionIds))
            {
                query["DestinationRegionIds"] = request.DestinationRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRouteTableIds))
            {
                query["DestinationRouteTableIds"] = request.DestinationRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapResult))
            {
                query["MapResult"] = request.MapResult;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAddressType))
            {
                query["MatchAddressType"] = request.MatchAddressType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAsns))
            {
                query["MatchAsns"] = request.MatchAsns;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchCommunitySet))
            {
                query["MatchCommunitySet"] = request.MatchCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPriority))
            {
                query["NextPriority"] = request.NextPriority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCommunitySet))
            {
                query["OperateCommunitySet"] = request.OperateCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Preference))
            {
                query["Preference"] = request.Preference;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrependAsPath))
            {
                query["PrependAsPath"] = request.PrependAsPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTypes))
            {
                query["RouteTypes"] = request.RouteTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceChildInstanceTypes))
            {
                query["SourceChildInstanceTypes"] = request.SourceChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIds))
            {
                query["SourceInstanceIds"] = request.SourceInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIdsReverseMatch))
            {
                query["SourceInstanceIdsReverseMatch"] = request.SourceInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRegionIds))
            {
                query["SourceRegionIds"] = request.SourceRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRouteTableIds))
            {
                query["SourceRouteTableIds"] = request.SourceRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransmitDirection))
            {
                query["TransmitDirection"] = request.TransmitDirection;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenRouteMapResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routing policy. A routing policy filters routing information and facilitates network management.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Routing policies are sorted by priority. A smaller value indicates a higher priority. Each routing policy is a collection of conditional statements and execution statements. Starting from the routing policy with the highest priority, the system matches routes against the match conditions specified by routing policies. If a route meets all the match conditions of a routing policy, the system permits or denies the route based on the action specified in the routing policy. You can also modify the attributes of permitted routes. By default, the system permits routes that meet none of the match conditions. For more information, see <a href="https://help.aliyun.com/document_detail/124157.html">Routing policy overview</a>.
        /// <c>CreateCenRouteMap</c> is an asynchronous operation. After you send a request, the routing policy ID is returned but the operation is still being performed in the system background. You can call <c>DescribeCenRouteMaps</c> to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Creating</b> state, the routing policy is being created. In this case, you can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy is in the <b>Active</b> state, the routing policy is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCenRouteMapResponse
        /// </returns>
        public async Task<CreateCenRouteMapResponse> CreateCenRouteMapWithOptionsAsync(CreateCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AsPathMatchMode))
            {
                query["AsPathMatchMode"] = request.AsPathMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrMatchMode))
            {
                query["CidrMatchMode"] = request.CidrMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityMatchMode))
            {
                query["CommunityMatchMode"] = request.CommunityMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityOperateMode))
            {
                query["CommunityOperateMode"] = request.CommunityOperateMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationChildInstanceTypes))
            {
                query["DestinationChildInstanceTypes"] = request.DestinationChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlocks))
            {
                query["DestinationCidrBlocks"] = request.DestinationCidrBlocks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIds))
            {
                query["DestinationInstanceIds"] = request.DestinationInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIdsReverseMatch))
            {
                query["DestinationInstanceIdsReverseMatch"] = request.DestinationInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRegionIds))
            {
                query["DestinationRegionIds"] = request.DestinationRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRouteTableIds))
            {
                query["DestinationRouteTableIds"] = request.DestinationRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapResult))
            {
                query["MapResult"] = request.MapResult;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAddressType))
            {
                query["MatchAddressType"] = request.MatchAddressType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAsns))
            {
                query["MatchAsns"] = request.MatchAsns;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchCommunitySet))
            {
                query["MatchCommunitySet"] = request.MatchCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPriority))
            {
                query["NextPriority"] = request.NextPriority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCommunitySet))
            {
                query["OperateCommunitySet"] = request.OperateCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Preference))
            {
                query["Preference"] = request.Preference;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrependAsPath))
            {
                query["PrependAsPath"] = request.PrependAsPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTypes))
            {
                query["RouteTypes"] = request.RouteTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceChildInstanceTypes))
            {
                query["SourceChildInstanceTypes"] = request.SourceChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIds))
            {
                query["SourceInstanceIds"] = request.SourceInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIdsReverseMatch))
            {
                query["SourceInstanceIdsReverseMatch"] = request.SourceInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRegionIds))
            {
                query["SourceRegionIds"] = request.SourceRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRouteTableIds))
            {
                query["SourceRouteTableIds"] = request.SourceRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransmitDirection))
            {
                query["TransmitDirection"] = request.TransmitDirection;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCenRouteMapResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routing policy. A routing policy filters routing information and facilitates network management.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Routing policies are sorted by priority. A smaller value indicates a higher priority. Each routing policy is a collection of conditional statements and execution statements. Starting from the routing policy with the highest priority, the system matches routes against the match conditions specified by routing policies. If a route meets all the match conditions of a routing policy, the system permits or denies the route based on the action specified in the routing policy. You can also modify the attributes of permitted routes. By default, the system permits routes that meet none of the match conditions. For more information, see <a href="https://help.aliyun.com/document_detail/124157.html">Routing policy overview</a>.
        /// <c>CreateCenRouteMap</c> is an asynchronous operation. After you send a request, the routing policy ID is returned but the operation is still being performed in the system background. You can call <c>DescribeCenRouteMaps</c> to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Creating</b> state, the routing policy is being created. In this case, you can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy is in the <b>Active</b> state, the routing policy is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenRouteMapResponse
        /// </returns>
        public CreateCenRouteMapResponse CreateCenRouteMap(CreateCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCenRouteMapWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routing policy. A routing policy filters routing information and facilitates network management.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Routing policies are sorted by priority. A smaller value indicates a higher priority. Each routing policy is a collection of conditional statements and execution statements. Starting from the routing policy with the highest priority, the system matches routes against the match conditions specified by routing policies. If a route meets all the match conditions of a routing policy, the system permits or denies the route based on the action specified in the routing policy. You can also modify the attributes of permitted routes. By default, the system permits routes that meet none of the match conditions. For more information, see <a href="https://help.aliyun.com/document_detail/124157.html">Routing policy overview</a>.
        /// <c>CreateCenRouteMap</c> is an asynchronous operation. After you send a request, the routing policy ID is returned but the operation is still being performed in the system background. You can call <c>DescribeCenRouteMaps</c> to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Creating</b> state, the routing policy is being created. In this case, you can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy is in the <b>Active</b> state, the routing policy is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCenRouteMapResponse
        /// </returns>
        public async Task<CreateCenRouteMapResponse> CreateCenRouteMapAsync(CreateCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCenRouteMapWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Flow logs are used to capture the information about network traffic between transit routers and between virtual border routers (VBRs). Before you create a flow log, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>Flow logs are supported only by Enterprise Edition transit routers.</description></item>
        /// <item><description>Only flow logs in some regions can capture the information about network traffic over VBR connections. For more information, see <a href="https://help.aliyun.com/document_detail/339822.html">Limits</a>.</description></item>
        /// <item><description>Flow logs are used to capture the information about outbound traffic on transit routers. Information about inbound traffic on transit routers is not captured.
        /// For example, an Elastic Compute Service (ECS) instance in the US (Silicon Valley) region accesses an ECS instance in the US (Virginia) region through CEN. After you enable the flow log feature for the transit router in the US (Virginia) region, you can check the log entries about packets sent from the ECS instance in the US (Virginia) region to the ECS instance in the US (Silicon Valley) region. However, packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region are not recorded. If you want to record the packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region, you must also enable the flow log feature on the transit router that is in the US (Silicon Valley) region.</description></item>
        /// <item><description><c>CreateFlowLog</c> is an asynchronous operation. After you send a request, the system returns a flow log ID and runs the task in the background. You can call the <c>DescribeFlowLogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Creating</b> state, the flow log is being created. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h1>Prerequisites</h1>
        /// <para>An inter-region connection or a VBR connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a> or <a href="https://help.aliyun.com/document_detail/261361.html">CreateTransitRouterVbrAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateFlowlogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateFlowlogResponse
        /// </returns>
        public CreateFlowlogResponse CreateFlowlogWithOptions(CreateFlowlogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStoreName))
            {
                query["LogStoreName"] = request.LogStoreName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectName))
            {
                query["ProjectName"] = request.ProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFlowlog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFlowlogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Flow logs are used to capture the information about network traffic between transit routers and between virtual border routers (VBRs). Before you create a flow log, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>Flow logs are supported only by Enterprise Edition transit routers.</description></item>
        /// <item><description>Only flow logs in some regions can capture the information about network traffic over VBR connections. For more information, see <a href="https://help.aliyun.com/document_detail/339822.html">Limits</a>.</description></item>
        /// <item><description>Flow logs are used to capture the information about outbound traffic on transit routers. Information about inbound traffic on transit routers is not captured.
        /// For example, an Elastic Compute Service (ECS) instance in the US (Silicon Valley) region accesses an ECS instance in the US (Virginia) region through CEN. After you enable the flow log feature for the transit router in the US (Virginia) region, you can check the log entries about packets sent from the ECS instance in the US (Virginia) region to the ECS instance in the US (Silicon Valley) region. However, packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region are not recorded. If you want to record the packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region, you must also enable the flow log feature on the transit router that is in the US (Silicon Valley) region.</description></item>
        /// <item><description><c>CreateFlowLog</c> is an asynchronous operation. After you send a request, the system returns a flow log ID and runs the task in the background. You can call the <c>DescribeFlowLogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Creating</b> state, the flow log is being created. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h1>Prerequisites</h1>
        /// <para>An inter-region connection or a VBR connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a> or <a href="https://help.aliyun.com/document_detail/261361.html">CreateTransitRouterVbrAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateFlowlogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateFlowlogResponse
        /// </returns>
        public async Task<CreateFlowlogResponse> CreateFlowlogWithOptionsAsync(CreateFlowlogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStoreName))
            {
                query["LogStoreName"] = request.LogStoreName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectName))
            {
                query["ProjectName"] = request.ProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFlowlog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFlowlogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Flow logs are used to capture the information about network traffic between transit routers and between virtual border routers (VBRs). Before you create a flow log, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>Flow logs are supported only by Enterprise Edition transit routers.</description></item>
        /// <item><description>Only flow logs in some regions can capture the information about network traffic over VBR connections. For more information, see <a href="https://help.aliyun.com/document_detail/339822.html">Limits</a>.</description></item>
        /// <item><description>Flow logs are used to capture the information about outbound traffic on transit routers. Information about inbound traffic on transit routers is not captured.
        /// For example, an Elastic Compute Service (ECS) instance in the US (Silicon Valley) region accesses an ECS instance in the US (Virginia) region through CEN. After you enable the flow log feature for the transit router in the US (Virginia) region, you can check the log entries about packets sent from the ECS instance in the US (Virginia) region to the ECS instance in the US (Silicon Valley) region. However, packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region are not recorded. If you want to record the packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region, you must also enable the flow log feature on the transit router that is in the US (Silicon Valley) region.</description></item>
        /// <item><description><c>CreateFlowLog</c> is an asynchronous operation. After you send a request, the system returns a flow log ID and runs the task in the background. You can call the <c>DescribeFlowLogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Creating</b> state, the flow log is being created. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h1>Prerequisites</h1>
        /// <para>An inter-region connection or a VBR connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a> or <a href="https://help.aliyun.com/document_detail/261361.html">CreateTransitRouterVbrAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateFlowlogRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateFlowlogResponse
        /// </returns>
        public CreateFlowlogResponse CreateFlowlog(CreateFlowlogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateFlowlogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Flow logs are used to capture the information about network traffic between transit routers and between virtual border routers (VBRs). Before you create a flow log, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>Flow logs are supported only by Enterprise Edition transit routers.</description></item>
        /// <item><description>Only flow logs in some regions can capture the information about network traffic over VBR connections. For more information, see <a href="https://help.aliyun.com/document_detail/339822.html">Limits</a>.</description></item>
        /// <item><description>Flow logs are used to capture the information about outbound traffic on transit routers. Information about inbound traffic on transit routers is not captured.
        /// For example, an Elastic Compute Service (ECS) instance in the US (Silicon Valley) region accesses an ECS instance in the US (Virginia) region through CEN. After you enable the flow log feature for the transit router in the US (Virginia) region, you can check the log entries about packets sent from the ECS instance in the US (Virginia) region to the ECS instance in the US (Silicon Valley) region. However, packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region are not recorded. If you want to record the packets sent from the ECS instance in the US (Silicon Valley) region to the ECS instance in the US (Virginia) region, you must also enable the flow log feature on the transit router that is in the US (Silicon Valley) region.</description></item>
        /// <item><description><c>CreateFlowLog</c> is an asynchronous operation. After you send a request, the system returns a flow log ID and runs the task in the background. You can call the <c>DescribeFlowLogs</c> operation to query the status of a flow log.<list type="bullet">
        /// <item><description>If a flow log is in the <b>Creating</b> state, the flow log is being created. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h1>Prerequisites</h1>
        /// <para>An inter-region connection or a VBR connection is created. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a> or <a href="https://help.aliyun.com/document_detail/261361.html">CreateTransitRouterVbrAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateFlowlogRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateFlowlogResponse
        /// </returns>
        public async Task<CreateFlowlogResponse> CreateFlowlogAsync(CreateFlowlogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateFlowlogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a traffic marking policy. A traffic marking policy captures network traffic based on traffic classification rules and marks the traffic with the Differentiated Services Code Point (DSCP) values that you specify.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support traffic marking policies.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a traffic marking policy ID and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.<list type="bullet">
        /// <item><description>If a traffic marking policy is in the <b>Creating</b> state, the traffic marking policy is being created. You can query the traffic marking policy but cannot perform other operations.</description></item>
        /// <item><description>If a traffic marking policy is in the <b>Active</b> state, the traffic marking policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTrafficMarkingPolicyResponse
        /// </returns>
        public CreateTrafficMarkingPolicyResponse CreateTrafficMarkingPolicyWithOptions(CreateTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkingDscp))
            {
                query["MarkingDscp"] = request.MarkingDscp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a traffic marking policy. A traffic marking policy captures network traffic based on traffic classification rules and marks the traffic with the Differentiated Services Code Point (DSCP) values that you specify.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support traffic marking policies.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a traffic marking policy ID and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.<list type="bullet">
        /// <item><description>If a traffic marking policy is in the <b>Creating</b> state, the traffic marking policy is being created. You can query the traffic marking policy but cannot perform other operations.</description></item>
        /// <item><description>If a traffic marking policy is in the <b>Active</b> state, the traffic marking policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<CreateTrafficMarkingPolicyResponse> CreateTrafficMarkingPolicyWithOptionsAsync(CreateTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkingDscp))
            {
                query["MarkingDscp"] = request.MarkingDscp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRules))
            {
                query["TrafficMatchRules"] = request.TrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a traffic marking policy. A traffic marking policy captures network traffic based on traffic classification rules and marks the traffic with the Differentiated Services Code Point (DSCP) values that you specify.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support traffic marking policies.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a traffic marking policy ID and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.<list type="bullet">
        /// <item><description>If a traffic marking policy is in the <b>Creating</b> state, the traffic marking policy is being created. You can query the traffic marking policy but cannot perform other operations.</description></item>
        /// <item><description>If a traffic marking policy is in the <b>Active</b> state, the traffic marking policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTrafficMarkingPolicyResponse
        /// </returns>
        public CreateTrafficMarkingPolicyResponse CreateTrafficMarkingPolicy(CreateTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a traffic marking policy. A traffic marking policy captures network traffic based on traffic classification rules and marks the traffic with the Differentiated Services Code Point (DSCP) values that you specify.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support traffic marking policies.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a traffic marking policy ID and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.<list type="bullet">
        /// <item><description>If a traffic marking policy is in the <b>Creating</b> state, the traffic marking policy is being created. You can query the traffic marking policy but cannot perform other operations.</description></item>
        /// <item><description>If a traffic marking policy is in the <b>Active</b> state, the traffic marking policy is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<CreateTrafficMarkingPolicyResponse> CreateTrafficMarkingPolicyAsync(CreateTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you add an aggregate route to a route table of an Enterprise Edition transit router, the Enterprise Edition transit router advertises its routes only to route tables of virtual private clouds (VPCs) that are associated with a route table of the Enterprise Edition transit router and have route synchronization enabled.
        /// Perform the following operations before you create an aggregate route. Otherwise, the Enterprise Edition transit router does not advertise routes to VPC route tables:</para>
        /// <list type="bullet">
        /// <item><description>Associated forwarding is enabled between the VPCs and the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261242.html">AssociateTransitRouterAttachmentWithRouteTable</a>.</description></item>
        /// <item><description>Route synchronization is enabled for the VPCs. For more information, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouteTableAggregationResponse
        /// </returns>
        public CreateTransitRouteTableAggregationResponse CreateTransitRouteTableAggregationWithOptions(CreateTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationDescription))
            {
                query["TransitRouteTableAggregationDescription"] = request.TransitRouteTableAggregationDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationName))
            {
                query["TransitRouteTableAggregationName"] = request.TransitRouteTableAggregationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationScope))
            {
                query["TransitRouteTableAggregationScope"] = request.TransitRouteTableAggregationScope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouteTableAggregationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you add an aggregate route to a route table of an Enterprise Edition transit router, the Enterprise Edition transit router advertises its routes only to route tables of virtual private clouds (VPCs) that are associated with a route table of the Enterprise Edition transit router and have route synchronization enabled.
        /// Perform the following operations before you create an aggregate route. Otherwise, the Enterprise Edition transit router does not advertise routes to VPC route tables:</para>
        /// <list type="bullet">
        /// <item><description>Associated forwarding is enabled between the VPCs and the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261242.html">AssociateTransitRouterAttachmentWithRouteTable</a>.</description></item>
        /// <item><description>Route synchronization is enabled for the VPCs. For more information, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<CreateTransitRouteTableAggregationResponse> CreateTransitRouteTableAggregationWithOptionsAsync(CreateTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationDescription))
            {
                query["TransitRouteTableAggregationDescription"] = request.TransitRouteTableAggregationDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationName))
            {
                query["TransitRouteTableAggregationName"] = request.TransitRouteTableAggregationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationScope))
            {
                query["TransitRouteTableAggregationScope"] = request.TransitRouteTableAggregationScope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouteTableAggregationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you add an aggregate route to a route table of an Enterprise Edition transit router, the Enterprise Edition transit router advertises its routes only to route tables of virtual private clouds (VPCs) that are associated with a route table of the Enterprise Edition transit router and have route synchronization enabled.
        /// Perform the following operations before you create an aggregate route. Otherwise, the Enterprise Edition transit router does not advertise routes to VPC route tables:</para>
        /// <list type="bullet">
        /// <item><description>Associated forwarding is enabled between the VPCs and the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261242.html">AssociateTransitRouterAttachmentWithRouteTable</a>.</description></item>
        /// <item><description>Route synchronization is enabled for the VPCs. For more information, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouteTableAggregationResponse
        /// </returns>
        public CreateTransitRouteTableAggregationResponse CreateTransitRouteTableAggregation(CreateTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouteTableAggregationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you add an aggregate route to a route table of an Enterprise Edition transit router, the Enterprise Edition transit router advertises its routes only to route tables of virtual private clouds (VPCs) that are associated with a route table of the Enterprise Edition transit router and have route synchronization enabled.
        /// Perform the following operations before you create an aggregate route. Otherwise, the Enterprise Edition transit router does not advertise routes to VPC route tables:</para>
        /// <list type="bullet">
        /// <item><description>Associated forwarding is enabled between the VPCs and the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261242.html">AssociateTransitRouterAttachmentWithRouteTable</a>.</description></item>
        /// <item><description>Route synchronization is enabled for the VPCs. For more information, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<CreateTransitRouteTableAggregationResponse> CreateTransitRouteTableAggregationAsync(CreateTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouteTableAggregationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call <b>CreateTransitRouter</b> to create an Enterprise Edition transit router. For more information about the regions that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouter</b> is an asynchronous operation. After you send a request, the transit router ID is returned but the operation is still being performed in the system background. You can call <a href="https://help.aliyun.com/document_detail/261219.html">ListTransitRouters</a> to query the status of an Enterprise Edition transit router.<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is in the <b>Creating</b> state, the Enterprise Edition transit router is being created. In this case, you can query the Enterprise Edition transit router but cannot perform other operations.</description></item>
        /// <item><description>If an Enterprise Edition transit router is in the <b>Active</b> state, the Enterprise Edition transit router is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterResponse
        /// </returns>
        public CreateTransitRouterResponse CreateTransitRouterWithOptions(CreateTransitRouterRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTransitRouterShrinkRequest request = new CreateTransitRouterShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterCidrList))
            {
                request.TransitRouterCidrListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterCidrList, "TransitRouterCidrList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportMulticast))
            {
                query["SupportMulticast"] = request.SupportMulticast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrListShrink))
            {
                query["TransitRouterCidrList"] = request.TransitRouterCidrListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterDescription))
            {
                query["TransitRouterDescription"] = request.TransitRouterDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call <b>CreateTransitRouter</b> to create an Enterprise Edition transit router. For more information about the regions that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouter</b> is an asynchronous operation. After you send a request, the transit router ID is returned but the operation is still being performed in the system background. You can call <a href="https://help.aliyun.com/document_detail/261219.html">ListTransitRouters</a> to query the status of an Enterprise Edition transit router.<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is in the <b>Creating</b> state, the Enterprise Edition transit router is being created. In this case, you can query the Enterprise Edition transit router but cannot perform other operations.</description></item>
        /// <item><description>If an Enterprise Edition transit router is in the <b>Active</b> state, the Enterprise Edition transit router is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterResponse
        /// </returns>
        public async Task<CreateTransitRouterResponse> CreateTransitRouterWithOptionsAsync(CreateTransitRouterRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTransitRouterShrinkRequest request = new CreateTransitRouterShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterCidrList))
            {
                request.TransitRouterCidrListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterCidrList, "TransitRouterCidrList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportMulticast))
            {
                query["SupportMulticast"] = request.SupportMulticast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrListShrink))
            {
                query["TransitRouterCidrList"] = request.TransitRouterCidrListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterDescription))
            {
                query["TransitRouterDescription"] = request.TransitRouterDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call <b>CreateTransitRouter</b> to create an Enterprise Edition transit router. For more information about the regions that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouter</b> is an asynchronous operation. After you send a request, the transit router ID is returned but the operation is still being performed in the system background. You can call <a href="https://help.aliyun.com/document_detail/261219.html">ListTransitRouters</a> to query the status of an Enterprise Edition transit router.<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is in the <b>Creating</b> state, the Enterprise Edition transit router is being created. In this case, you can query the Enterprise Edition transit router but cannot perform other operations.</description></item>
        /// <item><description>If an Enterprise Edition transit router is in the <b>Active</b> state, the Enterprise Edition transit router is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterResponse
        /// </returns>
        public CreateTransitRouterResponse CreateTransitRouter(CreateTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call <b>CreateTransitRouter</b> to create an Enterprise Edition transit router. For more information about the regions that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouter</b> is an asynchronous operation. After you send a request, the transit router ID is returned but the operation is still being performed in the system background. You can call <a href="https://help.aliyun.com/document_detail/261219.html">ListTransitRouters</a> to query the status of an Enterprise Edition transit router.<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is in the <b>Creating</b> state, the Enterprise Edition transit router is being created. In this case, you can query the Enterprise Edition transit router but cannot perform other operations.</description></item>
        /// <item><description>If an Enterprise Edition transit router is in the <b>Active</b> state, the Enterprise Edition transit router is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterResponse
        /// </returns>
        public async Task<CreateTransitRouterResponse> CreateTransitRouterAsync(CreateTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom CIDR block for a transit router. Custom CIDR blocks of a transit router are similar to the CIDR blocks of the loopback interface of a router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can specify a CIDR block for a transit router. The CIDR block works in a similar way as the CIDR block of the loopback interface on a router. IP addresses within the CIDR block can be assigned to IPsec-VPN connections. For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Transit router CIDR blocks</a>.
        /// The <b>CreateTransitRouterCidr</b> operation can be used to create a CIDR block only after you create a transit router.
        /// The CIDR block must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>Only Enterprise Edition transit routers support custom CIDR blocks.</description></item>
        /// <item><description>For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Limits in transit router CIDR blocks</a>.</description></item>
        /// <item><description>Each transit router supports at most five CIDR blocks. The subnet mask of a CIDR block must be 16 bits to 24 bits in length.</description></item>
        /// <item><description>The following CIDR blocks and their subnets are not supported: 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, and 169.254.0.0/16.</description></item>
        /// <item><description>The CIDR block cannot overlap with the CIDR blocks of the network instances that communicate with each other by using the CEN instance.</description></item>
        /// <item><description>On the same CEN instance, each transit router CIDR block must be unique.</description></item>
        /// <item><description>When you create the first VPN connection after you add a CIDR block for a transit router, three CIDR blocks within the CIDR block are reserved. An IP address is allocated from the remaining CIDR blocks to the IPsec-VPN connection.
        /// You can call the <a href="https://help.aliyun.com/document_detail/464173.html">ListTransitRouterCidrAllocation</a> operation to query reserved CIDR blocks and IP addresses allocated to network connections.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterCidrResponse
        /// </returns>
        public CreateTransitRouterCidrResponse CreateTransitRouterCidrWithOptions(CreateTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishCidrRoute))
            {
                query["PublishCidrRoute"] = request.PublishCidrRoute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterCidrResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom CIDR block for a transit router. Custom CIDR blocks of a transit router are similar to the CIDR blocks of the loopback interface of a router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can specify a CIDR block for a transit router. The CIDR block works in a similar way as the CIDR block of the loopback interface on a router. IP addresses within the CIDR block can be assigned to IPsec-VPN connections. For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Transit router CIDR blocks</a>.
        /// The <b>CreateTransitRouterCidr</b> operation can be used to create a CIDR block only after you create a transit router.
        /// The CIDR block must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>Only Enterprise Edition transit routers support custom CIDR blocks.</description></item>
        /// <item><description>For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Limits in transit router CIDR blocks</a>.</description></item>
        /// <item><description>Each transit router supports at most five CIDR blocks. The subnet mask of a CIDR block must be 16 bits to 24 bits in length.</description></item>
        /// <item><description>The following CIDR blocks and their subnets are not supported: 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, and 169.254.0.0/16.</description></item>
        /// <item><description>The CIDR block cannot overlap with the CIDR blocks of the network instances that communicate with each other by using the CEN instance.</description></item>
        /// <item><description>On the same CEN instance, each transit router CIDR block must be unique.</description></item>
        /// <item><description>When you create the first VPN connection after you add a CIDR block for a transit router, three CIDR blocks within the CIDR block are reserved. An IP address is allocated from the remaining CIDR blocks to the IPsec-VPN connection.
        /// You can call the <a href="https://help.aliyun.com/document_detail/464173.html">ListTransitRouterCidrAllocation</a> operation to query reserved CIDR blocks and IP addresses allocated to network connections.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterCidrResponse
        /// </returns>
        public async Task<CreateTransitRouterCidrResponse> CreateTransitRouterCidrWithOptionsAsync(CreateTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishCidrRoute))
            {
                query["PublishCidrRoute"] = request.PublishCidrRoute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterCidrResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom CIDR block for a transit router. Custom CIDR blocks of a transit router are similar to the CIDR blocks of the loopback interface of a router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can specify a CIDR block for a transit router. The CIDR block works in a similar way as the CIDR block of the loopback interface on a router. IP addresses within the CIDR block can be assigned to IPsec-VPN connections. For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Transit router CIDR blocks</a>.
        /// The <b>CreateTransitRouterCidr</b> operation can be used to create a CIDR block only after you create a transit router.
        /// The CIDR block must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>Only Enterprise Edition transit routers support custom CIDR blocks.</description></item>
        /// <item><description>For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Limits in transit router CIDR blocks</a>.</description></item>
        /// <item><description>Each transit router supports at most five CIDR blocks. The subnet mask of a CIDR block must be 16 bits to 24 bits in length.</description></item>
        /// <item><description>The following CIDR blocks and their subnets are not supported: 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, and 169.254.0.0/16.</description></item>
        /// <item><description>The CIDR block cannot overlap with the CIDR blocks of the network instances that communicate with each other by using the CEN instance.</description></item>
        /// <item><description>On the same CEN instance, each transit router CIDR block must be unique.</description></item>
        /// <item><description>When you create the first VPN connection after you add a CIDR block for a transit router, three CIDR blocks within the CIDR block are reserved. An IP address is allocated from the remaining CIDR blocks to the IPsec-VPN connection.
        /// You can call the <a href="https://help.aliyun.com/document_detail/464173.html">ListTransitRouterCidrAllocation</a> operation to query reserved CIDR blocks and IP addresses allocated to network connections.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterCidrResponse
        /// </returns>
        public CreateTransitRouterCidrResponse CreateTransitRouterCidr(CreateTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterCidrWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom CIDR block for a transit router. Custom CIDR blocks of a transit router are similar to the CIDR blocks of the loopback interface of a router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can specify a CIDR block for a transit router. The CIDR block works in a similar way as the CIDR block of the loopback interface on a router. IP addresses within the CIDR block can be assigned to IPsec-VPN connections. For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Transit router CIDR blocks</a>.
        /// The <b>CreateTransitRouterCidr</b> operation can be used to create a CIDR block only after you create a transit router.
        /// The CIDR block must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>Only Enterprise Edition transit routers support custom CIDR blocks.</description></item>
        /// <item><description>For more information, see <a href="https://help.aliyun.com/document_detail/462635.html">Limits in transit router CIDR blocks</a>.</description></item>
        /// <item><description>Each transit router supports at most five CIDR blocks. The subnet mask of a CIDR block must be 16 bits to 24 bits in length.</description></item>
        /// <item><description>The following CIDR blocks and their subnets are not supported: 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, and 169.254.0.0/16.</description></item>
        /// <item><description>The CIDR block cannot overlap with the CIDR blocks of the network instances that communicate with each other by using the CEN instance.</description></item>
        /// <item><description>On the same CEN instance, each transit router CIDR block must be unique.</description></item>
        /// <item><description>When you create the first VPN connection after you add a CIDR block for a transit router, three CIDR blocks within the CIDR block are reserved. An IP address is allocated from the remaining CIDR blocks to the IPsec-VPN connection.
        /// You can call the <a href="https://help.aliyun.com/document_detail/464173.html">ListTransitRouterCidrAllocation</a> operation to query reserved CIDR blocks and IP addresses allocated to network connections.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterCidrResponse
        /// </returns>
        public async Task<CreateTransitRouterCidrResponse> CreateTransitRouterCidrAsync(CreateTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterCidrWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an Express Connect Router (ECR) connection to the transit router in the same region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support ECR connections.</para>
        /// <list type="bullet">
        /// <item><description>The following methods describe how to attach an ECR connection to an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters.</description></item>
        /// <item><description>If no Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters. An Enterprise Edition transit router is automatically created when you create an ECR connection.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>CreateTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterEcrAttachments</b> operation to query the status of an ECR connection.<list type="bullet">
        /// <item><description>If the ECR connection is in the <b>Attaching</b> state, the ECR connection is being created. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection.</description></item>
        /// <item><description>If the ECR connection is in the <b>Attached</b> state, the ECR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>After you create an ECR connection, the ECR connection is not in route learning or associated forwarding relationships with Enterprise Edition transit routers.
        /// After you enable <a href="https://help.aliyun.com/document_detail/468300.html">route learning</a> between the ECR connection and an Enterprise Edition transit router, the routes of the ECR are automatically advertised to the route tables of the Enterprise Edition transit router.</description></item>
        /// <item><description>After you create an ECR connection, the routes in the route tables of the Enterprise Edition transit router to which the ECR connection is attached are automatically advertised to the route table of the ECR.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisite</h3>
        /// <list type="bullet">
        /// <item><description>The Alibaba Cloud account of the Enterprise Edition transit router and the Alibaba Cloud account of the ECR belong to the same enterprise.</description></item>
        /// <item><description>The Enterprise Edition transit router and ECR can belong to the same Alibaba Cloud account or different Alibaba Cloud accounts. If the Enterprise Edition transit router and ECR belong to different Alibaba Cloud accounts, grant the transit router permissions on the ECR before you can attach the ECR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description><b>Before you call this operation to attach an ECR connection to an Enterprise Edition transit router, you must call the <a href="https://help.aliyun.com/document_detail/2712082.html">CreateExpressConnectRouterAssociation</a> operation to create an association between the ECR and transit router.</b>
        /// <b>If you call the DeleteTransitRouterEcrAttachment operation to forcefully delete an ECR connection, the association between the ECR connection and Enterprise Edition transit router is deleted.</b></description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterEcrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterEcrAttachmentResponse
        /// </returns>
        public CreateTransitRouterEcrAttachmentResponse CreateTransitRouterEcrAttachmentWithOptions(CreateTransitRouterEcrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcrId))
            {
                query["EcrId"] = request.EcrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcrOwnerId))
            {
                query["EcrOwnerId"] = request.EcrOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterEcrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterEcrAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an Express Connect Router (ECR) connection to the transit router in the same region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support ECR connections.</para>
        /// <list type="bullet">
        /// <item><description>The following methods describe how to attach an ECR connection to an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters.</description></item>
        /// <item><description>If no Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters. An Enterprise Edition transit router is automatically created when you create an ECR connection.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>CreateTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterEcrAttachments</b> operation to query the status of an ECR connection.<list type="bullet">
        /// <item><description>If the ECR connection is in the <b>Attaching</b> state, the ECR connection is being created. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection.</description></item>
        /// <item><description>If the ECR connection is in the <b>Attached</b> state, the ECR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>After you create an ECR connection, the ECR connection is not in route learning or associated forwarding relationships with Enterprise Edition transit routers.
        /// After you enable <a href="https://help.aliyun.com/document_detail/468300.html">route learning</a> between the ECR connection and an Enterprise Edition transit router, the routes of the ECR are automatically advertised to the route tables of the Enterprise Edition transit router.</description></item>
        /// <item><description>After you create an ECR connection, the routes in the route tables of the Enterprise Edition transit router to which the ECR connection is attached are automatically advertised to the route table of the ECR.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisite</h3>
        /// <list type="bullet">
        /// <item><description>The Alibaba Cloud account of the Enterprise Edition transit router and the Alibaba Cloud account of the ECR belong to the same enterprise.</description></item>
        /// <item><description>The Enterprise Edition transit router and ECR can belong to the same Alibaba Cloud account or different Alibaba Cloud accounts. If the Enterprise Edition transit router and ECR belong to different Alibaba Cloud accounts, grant the transit router permissions on the ECR before you can attach the ECR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description><b>Before you call this operation to attach an ECR connection to an Enterprise Edition transit router, you must call the <a href="https://help.aliyun.com/document_detail/2712082.html">CreateExpressConnectRouterAssociation</a> operation to create an association between the ECR and transit router.</b>
        /// <b>If you call the DeleteTransitRouterEcrAttachment operation to forcefully delete an ECR connection, the association between the ECR connection and Enterprise Edition transit router is deleted.</b></description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterEcrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterEcrAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterEcrAttachmentResponse> CreateTransitRouterEcrAttachmentWithOptionsAsync(CreateTransitRouterEcrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcrId))
            {
                query["EcrId"] = request.EcrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcrOwnerId))
            {
                query["EcrOwnerId"] = request.EcrOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterEcrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterEcrAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an Express Connect Router (ECR) connection to the transit router in the same region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support ECR connections.</para>
        /// <list type="bullet">
        /// <item><description>The following methods describe how to attach an ECR connection to an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters.</description></item>
        /// <item><description>If no Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters. An Enterprise Edition transit router is automatically created when you create an ECR connection.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>CreateTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterEcrAttachments</b> operation to query the status of an ECR connection.<list type="bullet">
        /// <item><description>If the ECR connection is in the <b>Attaching</b> state, the ECR connection is being created. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection.</description></item>
        /// <item><description>If the ECR connection is in the <b>Attached</b> state, the ECR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>After you create an ECR connection, the ECR connection is not in route learning or associated forwarding relationships with Enterprise Edition transit routers.
        /// After you enable <a href="https://help.aliyun.com/document_detail/468300.html">route learning</a> between the ECR connection and an Enterprise Edition transit router, the routes of the ECR are automatically advertised to the route tables of the Enterprise Edition transit router.</description></item>
        /// <item><description>After you create an ECR connection, the routes in the route tables of the Enterprise Edition transit router to which the ECR connection is attached are automatically advertised to the route table of the ECR.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisite</h3>
        /// <list type="bullet">
        /// <item><description>The Alibaba Cloud account of the Enterprise Edition transit router and the Alibaba Cloud account of the ECR belong to the same enterprise.</description></item>
        /// <item><description>The Enterprise Edition transit router and ECR can belong to the same Alibaba Cloud account or different Alibaba Cloud accounts. If the Enterprise Edition transit router and ECR belong to different Alibaba Cloud accounts, grant the transit router permissions on the ECR before you can attach the ECR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description><b>Before you call this operation to attach an ECR connection to an Enterprise Edition transit router, you must call the <a href="https://help.aliyun.com/document_detail/2712082.html">CreateExpressConnectRouterAssociation</a> operation to create an association between the ECR and transit router.</b>
        /// <b>If you call the DeleteTransitRouterEcrAttachment operation to forcefully delete an ECR connection, the association between the ECR connection and Enterprise Edition transit router is deleted.</b></description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterEcrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterEcrAttachmentResponse
        /// </returns>
        public CreateTransitRouterEcrAttachmentResponse CreateTransitRouterEcrAttachment(CreateTransitRouterEcrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterEcrAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an Express Connect Router (ECR) connection to the transit router in the same region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support ECR connections.</para>
        /// <list type="bullet">
        /// <item><description>The following methods describe how to attach an ECR connection to an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters.</description></item>
        /// <item><description>If no Enterprise Edition transit router is created in the region, specify the <b>EcrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters. An Enterprise Edition transit router is automatically created when you create an ECR connection.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>CreateTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterEcrAttachments</b> operation to query the status of an ECR connection.<list type="bullet">
        /// <item><description>If the ECR connection is in the <b>Attaching</b> state, the ECR connection is being created. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection.</description></item>
        /// <item><description>If the ECR connection is in the <b>Attached</b> state, the ECR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>After you create an ECR connection, the ECR connection is not in route learning or associated forwarding relationships with Enterprise Edition transit routers.
        /// After you enable <a href="https://help.aliyun.com/document_detail/468300.html">route learning</a> between the ECR connection and an Enterprise Edition transit router, the routes of the ECR are automatically advertised to the route tables of the Enterprise Edition transit router.</description></item>
        /// <item><description>After you create an ECR connection, the routes in the route tables of the Enterprise Edition transit router to which the ECR connection is attached are automatically advertised to the route table of the ECR.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisite</h3>
        /// <list type="bullet">
        /// <item><description>The Alibaba Cloud account of the Enterprise Edition transit router and the Alibaba Cloud account of the ECR belong to the same enterprise.</description></item>
        /// <item><description>The Enterprise Edition transit router and ECR can belong to the same Alibaba Cloud account or different Alibaba Cloud accounts. If the Enterprise Edition transit router and ECR belong to different Alibaba Cloud accounts, grant the transit router permissions on the ECR before you can attach the ECR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description><b>Before you call this operation to attach an ECR connection to an Enterprise Edition transit router, you must call the <a href="https://help.aliyun.com/document_detail/2712082.html">CreateExpressConnectRouterAssociation</a> operation to create an association between the ECR and transit router.</b>
        /// <b>If you call the DeleteTransitRouterEcrAttachment operation to forcefully delete an ECR connection, the association between the ECR connection and Enterprise Edition transit router is deleted.</b></description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterEcrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterEcrAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterEcrAttachmentResponse> CreateTransitRouterEcrAttachmentAsync(CreateTransitRouterEcrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterEcrAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast domain. A multicast domain is a multicast network in a region. Only resources in the same multicast domain can transmit and receive multicast packets.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, read the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Make sure that an Enterprise Edition transit router is deployed in the region where you want to create the multicast domain, and the multicast feature is enabled for the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261169.html">CreateTransitRouter</a>.
        /// If an Enterprise Edition transit router was created before you apply for multicast resources, the transit router does not support multicast. You can delete the transit router and create a new one. For more information about how to delete an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261218.html">DeleteTransitRouter</a>.</description></item>
        /// <item><description>When you call <b>CreateTransitRouterMulticastDomain</b>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b>, you do not need to set <b>CenId</b> or <b>RegionId</b>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterMulticastDomainResponse
        /// </returns>
        public CreateTransitRouterMulticastDomainResponse CreateTransitRouterMulticastDomainWithOptions(CreateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainDescription))
            {
                query["TransitRouterMulticastDomainDescription"] = request.TransitRouterMulticastDomainDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainName))
            {
                query["TransitRouterMulticastDomainName"] = request.TransitRouterMulticastDomainName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterMulticastDomainResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast domain. A multicast domain is a multicast network in a region. Only resources in the same multicast domain can transmit and receive multicast packets.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, read the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Make sure that an Enterprise Edition transit router is deployed in the region where you want to create the multicast domain, and the multicast feature is enabled for the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261169.html">CreateTransitRouter</a>.
        /// If an Enterprise Edition transit router was created before you apply for multicast resources, the transit router does not support multicast. You can delete the transit router and create a new one. For more information about how to delete an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261218.html">DeleteTransitRouter</a>.</description></item>
        /// <item><description>When you call <b>CreateTransitRouterMulticastDomain</b>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b>, you do not need to set <b>CenId</b> or <b>RegionId</b>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<CreateTransitRouterMulticastDomainResponse> CreateTransitRouterMulticastDomainWithOptionsAsync(CreateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainDescription))
            {
                query["TransitRouterMulticastDomainDescription"] = request.TransitRouterMulticastDomainDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainName))
            {
                query["TransitRouterMulticastDomainName"] = request.TransitRouterMulticastDomainName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterMulticastDomainResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast domain. A multicast domain is a multicast network in a region. Only resources in the same multicast domain can transmit and receive multicast packets.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, read the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Make sure that an Enterprise Edition transit router is deployed in the region where you want to create the multicast domain, and the multicast feature is enabled for the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261169.html">CreateTransitRouter</a>.
        /// If an Enterprise Edition transit router was created before you apply for multicast resources, the transit router does not support multicast. You can delete the transit router and create a new one. For more information about how to delete an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261218.html">DeleteTransitRouter</a>.</description></item>
        /// <item><description>When you call <b>CreateTransitRouterMulticastDomain</b>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b>, you do not need to set <b>CenId</b> or <b>RegionId</b>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterMulticastDomainResponse
        /// </returns>
        public CreateTransitRouterMulticastDomainResponse CreateTransitRouterMulticastDomain(CreateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterMulticastDomainWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast domain. A multicast domain is a multicast network in a region. Only resources in the same multicast domain can transmit and receive multicast packets.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, read the following rules:</para>
        /// <list type="bullet">
        /// <item><description>Make sure that an Enterprise Edition transit router is deployed in the region where you want to create the multicast domain, and the multicast feature is enabled for the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/261169.html">CreateTransitRouter</a>.
        /// If an Enterprise Edition transit router was created before you apply for multicast resources, the transit router does not support multicast. You can delete the transit router and create a new one. For more information about how to delete an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261218.html">DeleteTransitRouter</a>.</description></item>
        /// <item><description>When you call <b>CreateTransitRouterMulticastDomain</b>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b>, you do not need to set <b>CenId</b> or <b>RegionId</b>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<CreateTransitRouterMulticastDomainResponse> CreateTransitRouterMulticastDomainAsync(CreateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterMulticastDomainWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>To connect network instances across regions, such as virtual private clouds (VPCs), virtual border routers (VBRs), and IPsec-VPN connections that are connected to transit routers, you must create an inter-region connection between the network instances that you want to connect. You can call the CreateTransitRouterPeerAttachment operation to create an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Enterprise Edition transit routers allow you to allocate bandwidth resources to inter-region connections by using the following methods:
        ///     *   <b>Allocate bandwidth resources from a bandwidth plan</b>:
        ///         You must purchase a bandwidth plan, and then allocate bandwidth resources from the bandwidth plan to inter-region connections. For more information about how to purchase a bandwidth plan, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a>.
        ///     *   <b>Use pay-by-data-transfer bandwidth resources</b>:
        ///         You can set a maximum bandwidth value for an inter-region connection. Then, you are charged for the amount of data transfer over the connection. For more information, see <a href="https://help.aliyun.com/document_detail/337827.html">Inter-region data transfer</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterPeerAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.<list type="bullet">
        /// <item><description>If the inter-region connection is in the <b>Attaching</b> state, the inter-region connection is being created. In this case, you can query the connection but cannot perform other operations on the connection.</description></item>
        /// <item><description>If the inter-region connection is in the <b>Attached</b> state, the inter-region connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPeerAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPeerAttachmentResponse
        /// </returns>
        public CreateTransitRouterPeerAttachmentResponse CreateTransitRouterPeerAttachmentWithOptions(CreateTransitRouterPeerAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultLinkType))
            {
                query["DefaultLinkType"] = request.DefaultLinkType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterId))
            {
                query["PeerTransitRouterId"] = request.PeerTransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterRegionId))
            {
                query["PeerTransitRouterRegionId"] = request.PeerTransitRouterRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterPeerAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterPeerAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>To connect network instances across regions, such as virtual private clouds (VPCs), virtual border routers (VBRs), and IPsec-VPN connections that are connected to transit routers, you must create an inter-region connection between the network instances that you want to connect. You can call the CreateTransitRouterPeerAttachment operation to create an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Enterprise Edition transit routers allow you to allocate bandwidth resources to inter-region connections by using the following methods:
        ///     *   <b>Allocate bandwidth resources from a bandwidth plan</b>:
        ///         You must purchase a bandwidth plan, and then allocate bandwidth resources from the bandwidth plan to inter-region connections. For more information about how to purchase a bandwidth plan, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a>.
        ///     *   <b>Use pay-by-data-transfer bandwidth resources</b>:
        ///         You can set a maximum bandwidth value for an inter-region connection. Then, you are charged for the amount of data transfer over the connection. For more information, see <a href="https://help.aliyun.com/document_detail/337827.html">Inter-region data transfer</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterPeerAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.<list type="bullet">
        /// <item><description>If the inter-region connection is in the <b>Attaching</b> state, the inter-region connection is being created. In this case, you can query the connection but cannot perform other operations on the connection.</description></item>
        /// <item><description>If the inter-region connection is in the <b>Attached</b> state, the inter-region connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPeerAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPeerAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterPeerAttachmentResponse> CreateTransitRouterPeerAttachmentWithOptionsAsync(CreateTransitRouterPeerAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultLinkType))
            {
                query["DefaultLinkType"] = request.DefaultLinkType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterId))
            {
                query["PeerTransitRouterId"] = request.PeerTransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterRegionId))
            {
                query["PeerTransitRouterRegionId"] = request.PeerTransitRouterRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterPeerAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterPeerAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>To connect network instances across regions, such as virtual private clouds (VPCs), virtual border routers (VBRs), and IPsec-VPN connections that are connected to transit routers, you must create an inter-region connection between the network instances that you want to connect. You can call the CreateTransitRouterPeerAttachment operation to create an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Enterprise Edition transit routers allow you to allocate bandwidth resources to inter-region connections by using the following methods:
        ///     *   <b>Allocate bandwidth resources from a bandwidth plan</b>:
        ///         You must purchase a bandwidth plan, and then allocate bandwidth resources from the bandwidth plan to inter-region connections. For more information about how to purchase a bandwidth plan, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a>.
        ///     *   <b>Use pay-by-data-transfer bandwidth resources</b>:
        ///         You can set a maximum bandwidth value for an inter-region connection. Then, you are charged for the amount of data transfer over the connection. For more information, see <a href="https://help.aliyun.com/document_detail/337827.html">Inter-region data transfer</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterPeerAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.<list type="bullet">
        /// <item><description>If the inter-region connection is in the <b>Attaching</b> state, the inter-region connection is being created. In this case, you can query the connection but cannot perform other operations on the connection.</description></item>
        /// <item><description>If the inter-region connection is in the <b>Attached</b> state, the inter-region connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPeerAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPeerAttachmentResponse
        /// </returns>
        public CreateTransitRouterPeerAttachmentResponse CreateTransitRouterPeerAttachment(CreateTransitRouterPeerAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterPeerAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>To connect network instances across regions, such as virtual private clouds (VPCs), virtual border routers (VBRs), and IPsec-VPN connections that are connected to transit routers, you must create an inter-region connection between the network instances that you want to connect. You can call the CreateTransitRouterPeerAttachment operation to create an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Enterprise Edition transit routers allow you to allocate bandwidth resources to inter-region connections by using the following methods:
        ///     *   <b>Allocate bandwidth resources from a bandwidth plan</b>:
        ///         You must purchase a bandwidth plan, and then allocate bandwidth resources from the bandwidth plan to inter-region connections. For more information about how to purchase a bandwidth plan, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a>.
        ///     *   <b>Use pay-by-data-transfer bandwidth resources</b>:
        ///         You can set a maximum bandwidth value for an inter-region connection. Then, you are charged for the amount of data transfer over the connection. For more information, see <a href="https://help.aliyun.com/document_detail/337827.html">Inter-region data transfer</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterPeerAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.<list type="bullet">
        /// <item><description>If the inter-region connection is in the <b>Attaching</b> state, the inter-region connection is being created. In this case, you can query the connection but cannot perform other operations on the connection.</description></item>
        /// <item><description>If the inter-region connection is in the <b>Attached</b> state, the inter-region connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPeerAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPeerAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterPeerAttachmentResponse> CreateTransitRouterPeerAttachmentAsync(CreateTransitRouterPeerAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterPeerAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the route table of an Enterprise Edition transit router with a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To associate an Enterprise Edition transit router with a route prefix, you must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>You are familiar with the limits and route compatibility notes of prefix lists. For more information, see <a href="https://help.aliyun.com/document_detail/445605.html">Prefix lists</a>.</description></item>
        /// <item><description>A prefix list is created. For more information, see <a href="https://help.aliyun.com/document_detail/437367.html">CreateVpcPrefixList</a>.</description></item>
        /// <item><description>If the prefix list and the Enterprise Edition transit router belong to different Alibaba Cloud accounts, the prefix list is shared with the Alibaba Cloud account that owns the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/160622.html">Resource sharing</a> and <a href="https://help.aliyun.com/document_detail/193445.html">API references for resource sharing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPrefixListAssociationResponse
        /// </returns>
        public CreateTransitRouterPrefixListAssociationResponse CreateTransitRouterPrefixListAssociationWithOptions(CreateTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerUid))
            {
                query["OwnerUid"] = request.OwnerUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterPrefixListAssociationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the route table of an Enterprise Edition transit router with a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To associate an Enterprise Edition transit router with a route prefix, you must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>You are familiar with the limits and route compatibility notes of prefix lists. For more information, see <a href="https://help.aliyun.com/document_detail/445605.html">Prefix lists</a>.</description></item>
        /// <item><description>A prefix list is created. For more information, see <a href="https://help.aliyun.com/document_detail/437367.html">CreateVpcPrefixList</a>.</description></item>
        /// <item><description>If the prefix list and the Enterprise Edition transit router belong to different Alibaba Cloud accounts, the prefix list is shared with the Alibaba Cloud account that owns the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/160622.html">Resource sharing</a> and <a href="https://help.aliyun.com/document_detail/193445.html">API references for resource sharing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<CreateTransitRouterPrefixListAssociationResponse> CreateTransitRouterPrefixListAssociationWithOptionsAsync(CreateTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerUid))
            {
                query["OwnerUid"] = request.OwnerUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterPrefixListAssociationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the route table of an Enterprise Edition transit router with a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To associate an Enterprise Edition transit router with a route prefix, you must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>You are familiar with the limits and route compatibility notes of prefix lists. For more information, see <a href="https://help.aliyun.com/document_detail/445605.html">Prefix lists</a>.</description></item>
        /// <item><description>A prefix list is created. For more information, see <a href="https://help.aliyun.com/document_detail/437367.html">CreateVpcPrefixList</a>.</description></item>
        /// <item><description>If the prefix list and the Enterprise Edition transit router belong to different Alibaba Cloud accounts, the prefix list is shared with the Alibaba Cloud account that owns the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/160622.html">Resource sharing</a> and <a href="https://help.aliyun.com/document_detail/193445.html">API references for resource sharing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPrefixListAssociationResponse
        /// </returns>
        public CreateTransitRouterPrefixListAssociationResponse CreateTransitRouterPrefixListAssociation(CreateTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterPrefixListAssociationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates the route table of an Enterprise Edition transit router with a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To associate an Enterprise Edition transit router with a route prefix, you must meet the following requirements:</para>
        /// <list type="bullet">
        /// <item><description>You are familiar with the limits and route compatibility notes of prefix lists. For more information, see <a href="https://help.aliyun.com/document_detail/445605.html">Prefix lists</a>.</description></item>
        /// <item><description>A prefix list is created. For more information, see <a href="https://help.aliyun.com/document_detail/437367.html">CreateVpcPrefixList</a>.</description></item>
        /// <item><description>If the prefix list and the Enterprise Edition transit router belong to different Alibaba Cloud accounts, the prefix list is shared with the Alibaba Cloud account that owns the Enterprise Edition transit router. For more information, see <a href="https://help.aliyun.com/document_detail/160622.html">Resource sharing</a> and <a href="https://help.aliyun.com/document_detail/193445.html">API references for resource sharing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<CreateTransitRouterPrefixListAssociationResponse> CreateTransitRouterPrefixListAssociationAsync(CreateTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterPrefixListAssociationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route to a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateTransitRouterRouteEntry</em>* is an asynchronous operation. After you send a request, the route ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteEntries</b> to query the status of a route.</para>
        /// <list type="bullet">
        /// <item><description>If a route is in the <b>Creating</b> state, the route is being created. In this case, you can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Active</b> state, the route is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteEntryResponse
        /// </returns>
        public CreateTransitRouterRouteEntryResponse CreateTransitRouterRouteEntryWithOptions(CreateTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDescription))
            {
                query["TransitRouterRouteEntryDescription"] = request.TransitRouterRouteEntryDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryName))
            {
                query["TransitRouterRouteEntryName"] = request.TransitRouterRouteEntryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterRouteEntryResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route to a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateTransitRouterRouteEntry</em>* is an asynchronous operation. After you send a request, the route ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteEntries</b> to query the status of a route.</para>
        /// <list type="bullet">
        /// <item><description>If a route is in the <b>Creating</b> state, the route is being created. In this case, you can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Active</b> state, the route is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<CreateTransitRouterRouteEntryResponse> CreateTransitRouterRouteEntryWithOptionsAsync(CreateTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDescription))
            {
                query["TransitRouterRouteEntryDescription"] = request.TransitRouterRouteEntryDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryName))
            {
                query["TransitRouterRouteEntryName"] = request.TransitRouterRouteEntryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterRouteEntryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route to a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateTransitRouterRouteEntry</em>* is an asynchronous operation. After you send a request, the route ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteEntries</b> to query the status of a route.</para>
        /// <list type="bullet">
        /// <item><description>If a route is in the <b>Creating</b> state, the route is being created. In this case, you can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Active</b> state, the route is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteEntryResponse
        /// </returns>
        public CreateTransitRouterRouteEntryResponse CreateTransitRouterRouteEntry(CreateTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterRouteEntryWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a route to a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>CreateTransitRouterRouteEntry</em>* is an asynchronous operation. After you send a request, the route ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteEntries</b> to query the status of a route.</para>
        /// <list type="bullet">
        /// <item><description>If a route is in the <b>Creating</b> state, the route is being created. In this case, you can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route is in the <b>Active</b> state, the route is created.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<CreateTransitRouterRouteEntryResponse> CreateTransitRouterRouteEntryAsync(CreateTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterRouteEntryWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom route table for an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support custom route tables. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the route table ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteTables</b> to query the status of a route table.<list type="bullet">
        /// <item><description>If a route table is in the <b>Creating</b> state, the route table is being created. In this case, you can query the route table but cannot perform other operations.</description></item>
        /// <item><description>If a route table is in the <b>Active</b> state, the route table is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteTableResponse
        /// </returns>
        public CreateTransitRouterRouteTableResponse CreateTransitRouterRouteTableWithOptions(CreateTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableDescription))
            {
                query["TransitRouterRouteTableDescription"] = request.TransitRouterRouteTableDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableName))
            {
                query["TransitRouterRouteTableName"] = request.TransitRouterRouteTableName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom route table for an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support custom route tables. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the route table ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteTables</b> to query the status of a route table.<list type="bullet">
        /// <item><description>If a route table is in the <b>Creating</b> state, the route table is being created. In this case, you can query the route table but cannot perform other operations.</description></item>
        /// <item><description>If a route table is in the <b>Active</b> state, the route table is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteTableResponse
        /// </returns>
        public async Task<CreateTransitRouterRouteTableResponse> CreateTransitRouterRouteTableWithOptionsAsync(CreateTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableDescription))
            {
                query["TransitRouterRouteTableDescription"] = request.TransitRouterRouteTableDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableName))
            {
                query["TransitRouterRouteTableName"] = request.TransitRouterRouteTableName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom route table for an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support custom route tables. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the route table ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteTables</b> to query the status of a route table.<list type="bullet">
        /// <item><description>If a route table is in the <b>Creating</b> state, the route table is being created. In this case, you can query the route table but cannot perform other operations.</description></item>
        /// <item><description>If a route table is in the <b>Active</b> state, the route table is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteTableResponse
        /// </returns>
        public CreateTransitRouterRouteTableResponse CreateTransitRouterRouteTable(CreateTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterRouteTableWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom route table for an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Only Enterprise Edition transit routers support custom route tables. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the route table ID is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterRouteTables</b> to query the status of a route table.<list type="bullet">
        /// <item><description>If a route table is in the <b>Creating</b> state, the route table is being created. In this case, you can query the route table but cannot perform other operations.</description></item>
        /// <item><description>If a route table is in the <b>Active</b> state, the route table is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterRouteTableResponse
        /// </returns>
        public async Task<CreateTransitRouterRouteTableResponse> CreateTransitRouterRouteTableAsync(CreateTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterRouteTableWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects the virtual border routers (VBRs) among which you want to establish network communication to the transit router in the region. Then, the transit router can exchange data between the VBR and CEN instance over private connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description>You can use the following methods to create a VBR connection on an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters to create a VBR connection.</description></item>
        /// <item><description>If no Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters to create a VBR connection. When you create a VBR connection, the system automatically creates an Enterprise Edition transit router in the specified region.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>CreateTransitRouterVbrAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call <b>ListTransitRouterVbrAttachments</b> to query the status of a VBR connection.<list type="bullet">
        /// <item><description>If the VBR connection is in the <b>Attaching</b> state, the VBR connection is being created. In this case, you can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The transit router and the VBR must belong to the same Alibaba Cloud account.</description></item>
        /// <item><description>Transit routers can connect to VBRs that belong to the same or a different Alibaba Cloud account. To connect a transit router to a VBR that belongs to a different Alibaba Cloud account, grant permissions on the VBR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Grant a transit router permissions on a network instance that belongs to another Alibaba Cloud account</a>.</description></item>
        /// <item><description>After you create a VBR connection, it is not in route learning or associated forwarding relationship with transit router route tables by default.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVbrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVbrAttachmentResponse
        /// </returns>
        public CreateTransitRouterVbrAttachmentResponse CreateTransitRouterVbrAttachmentWithOptions(CreateTransitRouterVbrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrId))
            {
                query["VbrId"] = request.VbrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrOwnerId))
            {
                query["VbrOwnerId"] = request.VbrOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVbrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVbrAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects the virtual border routers (VBRs) among which you want to establish network communication to the transit router in the region. Then, the transit router can exchange data between the VBR and CEN instance over private connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description>You can use the following methods to create a VBR connection on an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters to create a VBR connection.</description></item>
        /// <item><description>If no Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters to create a VBR connection. When you create a VBR connection, the system automatically creates an Enterprise Edition transit router in the specified region.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>CreateTransitRouterVbrAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call <b>ListTransitRouterVbrAttachments</b> to query the status of a VBR connection.<list type="bullet">
        /// <item><description>If the VBR connection is in the <b>Attaching</b> state, the VBR connection is being created. In this case, you can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The transit router and the VBR must belong to the same Alibaba Cloud account.</description></item>
        /// <item><description>Transit routers can connect to VBRs that belong to the same or a different Alibaba Cloud account. To connect a transit router to a VBR that belongs to a different Alibaba Cloud account, grant permissions on the VBR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Grant a transit router permissions on a network instance that belongs to another Alibaba Cloud account</a>.</description></item>
        /// <item><description>After you create a VBR connection, it is not in route learning or associated forwarding relationship with transit router route tables by default.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVbrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVbrAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVbrAttachmentResponse> CreateTransitRouterVbrAttachmentWithOptionsAsync(CreateTransitRouterVbrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrId))
            {
                query["VbrId"] = request.VbrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrOwnerId))
            {
                query["VbrOwnerId"] = request.VbrOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVbrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVbrAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects the virtual border routers (VBRs) among which you want to establish network communication to the transit router in the region. Then, the transit router can exchange data between the VBR and CEN instance over private connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description>You can use the following methods to create a VBR connection on an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters to create a VBR connection.</description></item>
        /// <item><description>If no Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters to create a VBR connection. When you create a VBR connection, the system automatically creates an Enterprise Edition transit router in the specified region.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>CreateTransitRouterVbrAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call <b>ListTransitRouterVbrAttachments</b> to query the status of a VBR connection.<list type="bullet">
        /// <item><description>If the VBR connection is in the <b>Attaching</b> state, the VBR connection is being created. In this case, you can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The transit router and the VBR must belong to the same Alibaba Cloud account.</description></item>
        /// <item><description>Transit routers can connect to VBRs that belong to the same or a different Alibaba Cloud account. To connect a transit router to a VBR that belongs to a different Alibaba Cloud account, grant permissions on the VBR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Grant a transit router permissions on a network instance that belongs to another Alibaba Cloud account</a>.</description></item>
        /// <item><description>After you create a VBR connection, it is not in route learning or associated forwarding relationship with transit router route tables by default.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVbrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVbrAttachmentResponse
        /// </returns>
        public CreateTransitRouterVbrAttachmentResponse CreateTransitRouterVbrAttachment(CreateTransitRouterVbrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterVbrAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects the virtual border routers (VBRs) among which you want to establish network communication to the transit router in the region. Then, the transit router can exchange data between the VBR and CEN instance over private connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></para>
        /// <list type="bullet">
        /// <item><description>You can use the following methods to create a VBR connection on an Enterprise Edition transit router:<list type="bullet">
        /// <item><description>If an Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>RegionId</b>, and <b>TransitRouterId</b> parameters to create a VBR connection.</description></item>
        /// <item><description>If no Enterprise Edition transit router is already created in the region, specify the <b>VbrId</b>, <b>CenId</b>, and <b>RegionId</b> parameters to create a VBR connection. When you create a VBR connection, the system automatically creates an Enterprise Edition transit router in the specified region.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>CreateTransitRouterVbrAttachment</b> is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call <b>ListTransitRouterVbrAttachments</b> to query the status of a VBR connection.<list type="bullet">
        /// <item><description>If the VBR connection is in the <b>Attaching</b> state, the VBR connection is being created. In this case, you can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>The transit router and the VBR must belong to the same Alibaba Cloud account.</description></item>
        /// <item><description>Transit routers can connect to VBRs that belong to the same or a different Alibaba Cloud account. To connect a transit router to a VBR that belongs to a different Alibaba Cloud account, grant permissions on the VBR to the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Grant a transit router permissions on a network instance that belongs to another Alibaba Cloud account</a>.</description></item>
        /// <item><description>After you create a VBR connection, it is not in route learning or associated forwarding relationship with transit router route tables by default.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVbrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVbrAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVbrAttachmentResponse> CreateTransitRouterVbrAttachmentAsync(CreateTransitRouterVbrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterVbrAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches virtual private clouds (VPCs) that you want to connect to a transit router. After you attach the VPCs to the same transit router, the VPCs can communicate with each other.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can use the following methods to attach a VPC to an Enterprise Edition transit router:
        ///     *   If an Enterprise Edition transit router is already created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, and <b>TransitRouterId</b>.
        ///     *   If no Enterprise Edition transit router is created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, <b>CenId</b>, and <b>RegionId</b>. When you create a VPC connection, the system automatically creates an Enterprise Edition transit router in the specified region.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterVpcAttachment</b> is an asynchronous operation. After you send a request, the VPC connection ID is returned but the operation is still being performed in the system background. You can call the <a href="https://help.aliyun.com/document_detail/261222.html">ListTransitRouterVpcAttachments</a> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Attaching</b> state, the VPC connection is being created. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>By default, route learning and associated forwarding are disabled between transit router route tables and VPC connections.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you call this operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>At least one vSwitch is deployed for the VPC in the zones supported by Enterprise Edition transit routers. Each vSwitch must have at least one idle IP address. For more information, see <a href="https://help.aliyun.com/document_detail/181681.html">Regions and zones supported by Enterprise Edition transit routers</a>.</description></item>
        /// <item><description>To connect to a network instance that belongs to another Alibaba Cloud account, you must first acquire the required permissions from the account. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>VPC connections incur fees. Take note of the billing rules of VPC connections before you create a VPC connection. For more information, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateTransitRouterVpcAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpcAttachmentResponse
        /// </returns>
        public CreateTransitRouterVpcAttachmentResponse CreateTransitRouterVpcAttachmentWithOptions(CreateTransitRouterVpcAttachmentRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTransitRouterVpcAttachmentShrinkRequest request = new CreateTransitRouterVpcAttachmentShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterVPCAttachmentOptions))
            {
                request.TransitRouterVPCAttachmentOptionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterVPCAttachmentOptions, "TransitRouterVPCAttachmentOptions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterVPCAttachmentOptionsShrink))
            {
                query["TransitRouterVPCAttachmentOptions"] = request.TransitRouterVPCAttachmentOptionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcOwnerId))
            {
                query["VpcOwnerId"] = request.VpcOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ZoneMappings))
            {
                query["ZoneMappings"] = request.ZoneMappings;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVpcAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVpcAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches virtual private clouds (VPCs) that you want to connect to a transit router. After you attach the VPCs to the same transit router, the VPCs can communicate with each other.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can use the following methods to attach a VPC to an Enterprise Edition transit router:
        ///     *   If an Enterprise Edition transit router is already created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, and <b>TransitRouterId</b>.
        ///     *   If no Enterprise Edition transit router is created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, <b>CenId</b>, and <b>RegionId</b>. When you create a VPC connection, the system automatically creates an Enterprise Edition transit router in the specified region.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterVpcAttachment</b> is an asynchronous operation. After you send a request, the VPC connection ID is returned but the operation is still being performed in the system background. You can call the <a href="https://help.aliyun.com/document_detail/261222.html">ListTransitRouterVpcAttachments</a> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Attaching</b> state, the VPC connection is being created. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>By default, route learning and associated forwarding are disabled between transit router route tables and VPC connections.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you call this operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>At least one vSwitch is deployed for the VPC in the zones supported by Enterprise Edition transit routers. Each vSwitch must have at least one idle IP address. For more information, see <a href="https://help.aliyun.com/document_detail/181681.html">Regions and zones supported by Enterprise Edition transit routers</a>.</description></item>
        /// <item><description>To connect to a network instance that belongs to another Alibaba Cloud account, you must first acquire the required permissions from the account. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>VPC connections incur fees. Take note of the billing rules of VPC connections before you create a VPC connection. For more information, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateTransitRouterVpcAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpcAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVpcAttachmentResponse> CreateTransitRouterVpcAttachmentWithOptionsAsync(CreateTransitRouterVpcAttachmentRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTransitRouterVpcAttachmentShrinkRequest request = new CreateTransitRouterVpcAttachmentShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterVPCAttachmentOptions))
            {
                request.TransitRouterVPCAttachmentOptionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterVPCAttachmentOptions, "TransitRouterVPCAttachmentOptions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterVPCAttachmentOptionsShrink))
            {
                query["TransitRouterVPCAttachmentOptions"] = request.TransitRouterVPCAttachmentOptionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcOwnerId))
            {
                query["VpcOwnerId"] = request.VpcOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ZoneMappings))
            {
                query["ZoneMappings"] = request.ZoneMappings;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVpcAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVpcAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches virtual private clouds (VPCs) that you want to connect to a transit router. After you attach the VPCs to the same transit router, the VPCs can communicate with each other.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can use the following methods to attach a VPC to an Enterprise Edition transit router:
        ///     *   If an Enterprise Edition transit router is already created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, and <b>TransitRouterId</b>.
        ///     *   If no Enterprise Edition transit router is created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, <b>CenId</b>, and <b>RegionId</b>. When you create a VPC connection, the system automatically creates an Enterprise Edition transit router in the specified region.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterVpcAttachment</b> is an asynchronous operation. After you send a request, the VPC connection ID is returned but the operation is still being performed in the system background. You can call the <a href="https://help.aliyun.com/document_detail/261222.html">ListTransitRouterVpcAttachments</a> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Attaching</b> state, the VPC connection is being created. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>By default, route learning and associated forwarding are disabled between transit router route tables and VPC connections.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you call this operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>At least one vSwitch is deployed for the VPC in the zones supported by Enterprise Edition transit routers. Each vSwitch must have at least one idle IP address. For more information, see <a href="https://help.aliyun.com/document_detail/181681.html">Regions and zones supported by Enterprise Edition transit routers</a>.</description></item>
        /// <item><description>To connect to a network instance that belongs to another Alibaba Cloud account, you must first acquire the required permissions from the account. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>VPC connections incur fees. Take note of the billing rules of VPC connections before you create a VPC connection. For more information, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpcAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpcAttachmentResponse
        /// </returns>
        public CreateTransitRouterVpcAttachmentResponse CreateTransitRouterVpcAttachment(CreateTransitRouterVpcAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterVpcAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches virtual private clouds (VPCs) that you want to connect to a transit router. After you attach the VPCs to the same transit router, the VPCs can communicate with each other.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can use the following methods to attach a VPC to an Enterprise Edition transit router:
        ///     *   If an Enterprise Edition transit router is already created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, and <b>TransitRouterId</b>.
        ///     *   If no Enterprise Edition transit router is created in the region where you want to create a VPC connection, set <b>VpcId</b>, <b>ZoneMappings.N.VSwitchId</b>, <b>ZoneMappings.N.ZoneId</b>, <b>CenId</b>, and <b>RegionId</b>. When you create a VPC connection, the system automatically creates an Enterprise Edition transit router in the specified region.</para>
        /// <list type="bullet">
        /// <item><description><b>CreateTransitRouterVpcAttachment</b> is an asynchronous operation. After you send a request, the VPC connection ID is returned but the operation is still being performed in the system background. You can call the <a href="https://help.aliyun.com/document_detail/261222.html">ListTransitRouterVpcAttachments</a> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Attaching</b> state, the VPC connection is being created. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is created.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description>By default, route learning and associated forwarding are disabled between transit router route tables and VPC connections.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you call this operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>At least one vSwitch is deployed for the VPC in the zones supported by Enterprise Edition transit routers. Each vSwitch must have at least one idle IP address. For more information, see <a href="https://help.aliyun.com/document_detail/181681.html">Regions and zones supported by Enterprise Edition transit routers</a>.</description></item>
        /// <item><description>To connect to a network instance that belongs to another Alibaba Cloud account, you must first acquire the required permissions from the account. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>VPC connections incur fees. Take note of the billing rules of VPC connections before you create a VPC connection. For more information, see <a href="https://help.aliyun.com/document_detail/189836.html">Billing</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpcAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpcAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVpcAttachmentResponse> CreateTransitRouterVpcAttachmentAsync(CreateTransitRouterVpcAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterVpcAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an IPsec-VPN connection to a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  By default, route learning and associated forwarding are disabled between transit router route tables and IPsec-VPN attachments.</para>
        /// <list type="bullet">
        /// <item><description>When you call <c>CreateTransitRouterVpnAttachment</c>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b> and <b>RegionId</b>, you do not need to set <b>CenId</b>.</description></item>
        /// </list>
        /// <h3>Prerequisites</h3>
        /// <list type="bullet">
        /// <item><description>Before you attach an IPsec-VPN connection to a transit router, make sure that at least one IPsec-VPN connection is created in the region where the transit router is deployed. Make sure the IPsec-VPN connection is not associated with a resource. For more information, see <a href="https://help.aliyun.com/document_detail/442455.html">CreateVpnAttachment</a>.</description></item>
        /// <item><description>If the IPsec-VPN connection to be attached to the transit router belongs to a different Alibaba Cloud account, make sure that the transit router has obtained the required permissions from the IPsec-VPN connection. For more information, see <a href="https://help.aliyun.com/document_detail/417520.html">GrantInstanceToTransitRouter</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpnAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpnAttachmentResponse
        /// </returns>
        public CreateTransitRouterVpnAttachmentResponse CreateTransitRouterVpnAttachmentWithOptions(CreateTransitRouterVpnAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpnId))
            {
                query["VpnId"] = request.VpnId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpnOwnerId))
            {
                query["VpnOwnerId"] = request.VpnOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zone))
            {
                query["Zone"] = request.Zone;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVpnAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVpnAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an IPsec-VPN connection to a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  By default, route learning and associated forwarding are disabled between transit router route tables and IPsec-VPN attachments.</para>
        /// <list type="bullet">
        /// <item><description>When you call <c>CreateTransitRouterVpnAttachment</c>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b> and <b>RegionId</b>, you do not need to set <b>CenId</b>.</description></item>
        /// </list>
        /// <h3>Prerequisites</h3>
        /// <list type="bullet">
        /// <item><description>Before you attach an IPsec-VPN connection to a transit router, make sure that at least one IPsec-VPN connection is created in the region where the transit router is deployed. Make sure the IPsec-VPN connection is not associated with a resource. For more information, see <a href="https://help.aliyun.com/document_detail/442455.html">CreateVpnAttachment</a>.</description></item>
        /// <item><description>If the IPsec-VPN connection to be attached to the transit router belongs to a different Alibaba Cloud account, make sure that the transit router has obtained the required permissions from the IPsec-VPN connection. For more information, see <a href="https://help.aliyun.com/document_detail/417520.html">GrantInstanceToTransitRouter</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpnAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpnAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVpnAttachmentResponse> CreateTransitRouterVpnAttachmentWithOptionsAsync(CreateTransitRouterVpnAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpnId))
            {
                query["VpnId"] = request.VpnId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpnOwnerId))
            {
                query["VpnOwnerId"] = request.VpnOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zone))
            {
                query["Zone"] = request.Zone;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTransitRouterVpnAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTransitRouterVpnAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an IPsec-VPN connection to a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  By default, route learning and associated forwarding are disabled between transit router route tables and IPsec-VPN attachments.</para>
        /// <list type="bullet">
        /// <item><description>When you call <c>CreateTransitRouterVpnAttachment</c>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b> and <b>RegionId</b>, you do not need to set <b>CenId</b>.</description></item>
        /// </list>
        /// <h3>Prerequisites</h3>
        /// <list type="bullet">
        /// <item><description>Before you attach an IPsec-VPN connection to a transit router, make sure that at least one IPsec-VPN connection is created in the region where the transit router is deployed. Make sure the IPsec-VPN connection is not associated with a resource. For more information, see <a href="https://help.aliyun.com/document_detail/442455.html">CreateVpnAttachment</a>.</description></item>
        /// <item><description>If the IPsec-VPN connection to be attached to the transit router belongs to a different Alibaba Cloud account, make sure that the transit router has obtained the required permissions from the IPsec-VPN connection. For more information, see <a href="https://help.aliyun.com/document_detail/417520.html">GrantInstanceToTransitRouter</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpnAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpnAttachmentResponse
        /// </returns>
        public CreateTransitRouterVpnAttachmentResponse CreateTransitRouterVpnAttachment(CreateTransitRouterVpnAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTransitRouterVpnAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Attaches an IPsec-VPN connection to a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  By default, route learning and associated forwarding are disabled between transit router route tables and IPsec-VPN attachments.</para>
        /// <list type="bullet">
        /// <item><description>When you call <c>CreateTransitRouterVpnAttachment</c>, if you set <b>CenId</b> and <b>RegionId</b>, you do not need to set <b>TransitRouterId</b>. If you set <b>TransitRouterId</b> and <b>RegionId</b>, you do not need to set <b>CenId</b>.</description></item>
        /// </list>
        /// <h3>Prerequisites</h3>
        /// <list type="bullet">
        /// <item><description>Before you attach an IPsec-VPN connection to a transit router, make sure that at least one IPsec-VPN connection is created in the region where the transit router is deployed. Make sure the IPsec-VPN connection is not associated with a resource. For more information, see <a href="https://help.aliyun.com/document_detail/442455.html">CreateVpnAttachment</a>.</description></item>
        /// <item><description>If the IPsec-VPN connection to be attached to the transit router belongs to a different Alibaba Cloud account, make sure that the transit router has obtained the required permissions from the IPsec-VPN connection. For more information, see <a href="https://help.aliyun.com/document_detail/417520.html">GrantInstanceToTransitRouter</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateTransitRouterVpnAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateTransitRouterVpnAttachmentResponse
        /// </returns>
        public async Task<CreateTransitRouterVpnAttachmentResponse> CreateTransitRouterVpnAttachmentAsync(CreateTransitRouterVpnAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTransitRouterVpnAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a flow log. A disabled flow log no longer captures information about network traffic.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeactiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being disabled. You can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Inactive</b> state, the flow log is disabled.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactiveFlowLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeactiveFlowLogResponse
        /// </returns>
        public DeactiveFlowLogResponse DeactiveFlowLogWithOptions(DeactiveFlowLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeactiveFlowLog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeactiveFlowLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a flow log. A disabled flow log no longer captures information about network traffic.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeactiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being disabled. You can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Inactive</b> state, the flow log is disabled.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactiveFlowLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeactiveFlowLogResponse
        /// </returns>
        public async Task<DeactiveFlowLogResponse> DeactiveFlowLogWithOptionsAsync(DeactiveFlowLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeactiveFlowLog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeactiveFlowLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a flow log. A disabled flow log no longer captures information about network traffic.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeactiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being disabled. You can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Inactive</b> state, the flow log is disabled.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactiveFlowLogRequest
        /// </param>
        /// 
        /// <returns>
        /// DeactiveFlowLogResponse
        /// </returns>
        public DeactiveFlowLogResponse DeactiveFlowLog(DeactiveFlowLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeactiveFlowLogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a flow log. A disabled flow log no longer captures information about network traffic.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeactiveFlowLog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being disabled. You can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Inactive</b> state, the flow log is disabled.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactiveFlowLogRequest
        /// </param>
        /// 
        /// <returns>
        /// DeactiveFlowLogResponse
        /// </returns>
        public async Task<DeactiveFlowLogResponse> DeactiveFlowLogAsync(DeactiveFlowLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeactiveFlowLogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If the CEN instance is in the <b>Deleting</b> state, the CEN instance is being deleted. In this case, you can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If the CEN instance cannot be found, the CEN instance is deleted.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The CEN instance that you want to delete is not associated with a bandwidth plan, and the transit router associated with the CEN instance does not have a network instance connection or a custom route table.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach a network instance, see the following topics:<list type="bullet">
        /// <item><description><a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a><remarks>
        /// <para>For more information about how to detach network instances from a Basic Edition transit router, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</para>
        /// </remarks>
        /// </description></item>
        /// </list>
        /// </description></item>
        /// <item><description>For more information about how to delete custom route tables from an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</description></item>
        /// <item><description>For more information about how to disassociate a bandwidth plan from a CEN instance, see <a href="https://help.aliyun.com/document_detail/65935.html">UnassociateCenBandwidthPackage</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenResponse
        /// </returns>
        public DeleteCenResponse DeleteCenWithOptions(DeleteCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If the CEN instance is in the <b>Deleting</b> state, the CEN instance is being deleted. In this case, you can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If the CEN instance cannot be found, the CEN instance is deleted.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The CEN instance that you want to delete is not associated with a bandwidth plan, and the transit router associated with the CEN instance does not have a network instance connection or a custom route table.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach a network instance, see the following topics:<list type="bullet">
        /// <item><description><a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a><remarks>
        /// <para>For more information about how to detach network instances from a Basic Edition transit router, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</para>
        /// </remarks>
        /// </description></item>
        /// </list>
        /// </description></item>
        /// <item><description>For more information about how to delete custom route tables from an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</description></item>
        /// <item><description>For more information about how to disassociate a bandwidth plan from a CEN instance, see <a href="https://help.aliyun.com/document_detail/65935.html">UnassociateCenBandwidthPackage</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenResponse
        /// </returns>
        public async Task<DeleteCenResponse> DeleteCenWithOptionsAsync(DeleteCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If the CEN instance is in the <b>Deleting</b> state, the CEN instance is being deleted. In this case, you can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If the CEN instance cannot be found, the CEN instance is deleted.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The CEN instance that you want to delete is not associated with a bandwidth plan, and the transit router associated with the CEN instance does not have a network instance connection or a custom route table.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach a network instance, see the following topics:<list type="bullet">
        /// <item><description><a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a><remarks>
        /// <para>For more information about how to detach network instances from a Basic Edition transit router, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</para>
        /// </remarks>
        /// </description></item>
        /// </list>
        /// </description></item>
        /// <item><description>For more information about how to delete custom route tables from an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</description></item>
        /// <item><description>For more information about how to disassociate a bandwidth plan from a CEN instance, see <a href="https://help.aliyun.com/document_detail/65935.html">UnassociateCenBandwidthPackage</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenResponse
        /// </returns>
        public DeleteCenResponse DeleteCen(DeleteCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If the CEN instance is in the <b>Deleting</b> state, the CEN instance is being deleted. In this case, you can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If the CEN instance cannot be found, the CEN instance is deleted.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The CEN instance that you want to delete is not associated with a bandwidth plan, and the transit router associated with the CEN instance does not have a network instance connection or a custom route table.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach a network instance, see the following topics:<list type="bullet">
        /// <item><description><a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a></description></item>
        /// <item><description><a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a><remarks>
        /// <para>For more information about how to detach network instances from a Basic Edition transit router, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</para>
        /// </remarks>
        /// </description></item>
        /// </list>
        /// </description></item>
        /// <item><description>For more information about how to delete custom route tables from an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</description></item>
        /// <item><description>For more information about how to disassociate a bandwidth plan from a CEN instance, see <a href="https://help.aliyun.com/document_detail/65935.html">UnassociateCenBandwidthPackage</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenResponse
        /// </returns>
        public async Task<DeleteCenResponse> DeleteCenAsync(DeleteCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenWithOptionsAsync(request, runtime);
        }

        /// <param name="request">
        /// DeleteCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenBandwidthPackageResponse
        /// </returns>
        public DeleteCenBandwidthPackageResponse DeleteCenBandwidthPackageWithOptions(DeleteCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenBandwidthPackageResponse>(CallApi(params_, req, runtime));
        }

        /// <param name="request">
        /// DeleteCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenBandwidthPackageResponse
        /// </returns>
        public async Task<DeleteCenBandwidthPackageResponse> DeleteCenBandwidthPackageWithOptionsAsync(DeleteCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenBandwidthPackageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <param name="request">
        /// DeleteCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenBandwidthPackageResponse
        /// </returns>
        public DeleteCenBandwidthPackageResponse DeleteCenBandwidthPackage(DeleteCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenBandwidthPackageWithOptions(request, runtime);
        }

        /// <param name="request">
        /// DeleteCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenBandwidthPackageResponse
        /// </returns>
        public async Task<DeleteCenBandwidthPackageResponse> DeleteCenBandwidthPackageAsync(DeleteCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenBandwidthPackageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route of a network instance from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can delete routes only from virtual private clouds (VPCs) and virtual border routers (VBRs) whose next hop is an <b>Enterprise Edition transit router connection</b>, which is the connection to the network instance.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Deleting</b> state, the route is being deleted. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route cannot be found, the route is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public DeleteCenChildInstanceRouteEntryToAttachmentResponse DeleteCenChildInstanceRouteEntryToAttachmentWithOptions(DeleteCenChildInstanceRouteEntryToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenChildInstanceRouteEntryToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenChildInstanceRouteEntryToAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route of a network instance from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can delete routes only from virtual private clouds (VPCs) and virtual border routers (VBRs) whose next hop is an <b>Enterprise Edition transit router connection</b>, which is the connection to the network instance.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Deleting</b> state, the route is being deleted. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route cannot be found, the route is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public async Task<DeleteCenChildInstanceRouteEntryToAttachmentResponse> DeleteCenChildInstanceRouteEntryToAttachmentWithOptionsAsync(DeleteCenChildInstanceRouteEntryToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenChildInstanceRouteEntryToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenChildInstanceRouteEntryToAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route of a network instance from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can delete routes only from virtual private clouds (VPCs) and virtual border routers (VBRs) whose next hop is an <b>Enterprise Edition transit router connection</b>, which is the connection to the network instance.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Deleting</b> state, the route is being deleted. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route cannot be found, the route is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public DeleteCenChildInstanceRouteEntryToAttachmentResponse DeleteCenChildInstanceRouteEntryToAttachment(DeleteCenChildInstanceRouteEntryToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenChildInstanceRouteEntryToAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route of a network instance from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can delete routes only from virtual private clouds (VPCs) and virtual border routers (VBRs) whose next hop is an <b>Enterprise Edition transit router connection</b>, which is the connection to the network instance.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenChildInstanceRouteEntryToAttachment</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeRouteEntryList</b> operation to query the status of a route.<list type="bullet">
        /// <item><description>If a route is in the <b>Deleting</b> state, the route is being deleted. You can query the route but cannot perform other operations.</description></item>
        /// <item><description>If a route cannot be found, the route is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToAttachmentResponse
        /// </returns>
        public async Task<DeleteCenChildInstanceRouteEntryToAttachmentResponse> DeleteCenChildInstanceRouteEntryToAttachmentAsync(DeleteCenChildInstanceRouteEntryToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenChildInstanceRouteEntryToAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route from a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the DeleteCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation, <a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot delete a route entry from an Enterprise Edition transit router by calling the DeleteCenChildInstanceRouteEntryToCen operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public DeleteCenChildInstanceRouteEntryToCenResponse DeleteCenChildInstanceRouteEntryToCenWithOptions(DeleteCenChildInstanceRouteEntryToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceAliUid))
            {
                query["ChildInstanceAliUid"] = request.ChildInstanceAliUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenChildInstanceRouteEntryToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenChildInstanceRouteEntryToCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route from a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the DeleteCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation, <a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot delete a route entry from an Enterprise Edition transit router by calling the DeleteCenChildInstanceRouteEntryToCen operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public async Task<DeleteCenChildInstanceRouteEntryToCenResponse> DeleteCenChildInstanceRouteEntryToCenWithOptionsAsync(DeleteCenChildInstanceRouteEntryToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceAliUid))
            {
                query["ChildInstanceAliUid"] = request.ChildInstanceAliUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableId))
            {
                query["RouteTableId"] = request.RouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenChildInstanceRouteEntryToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenChildInstanceRouteEntryToCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route from a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the DeleteCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation, <a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot delete a route entry from an Enterprise Edition transit router by calling the DeleteCenChildInstanceRouteEntryToCen operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public DeleteCenChildInstanceRouteEntryToCenResponse DeleteCenChildInstanceRouteEntryToCen(DeleteCenChildInstanceRouteEntryToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenChildInstanceRouteEntryToCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route from a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2>Limits</h2>
        /// <list type="bullet">
        /// <item><description>By default, the DeleteCenChildInstanceRouteEntryToCen operation is unavailable. To call this operation, <a href="https://workorder-intl.console.aliyun.com/#/ticket/createIndex">submit a ticket</a>.</description></item>
        /// <item><description>You cannot delete a route entry from an Enterprise Edition transit router by calling the DeleteCenChildInstanceRouteEntryToCen operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenChildInstanceRouteEntryToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenChildInstanceRouteEntryToCenResponse
        /// </returns>
        public async Task<DeleteCenChildInstanceRouteEntryToCenResponse> DeleteCenChildInstanceRouteEntryToCenAsync(DeleteCenChildInstanceRouteEntryToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenChildInstanceRouteEntryToCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a QoS policy, you must delete all queues in the QoS policy except the default queue. For more information, see <a href="https://help.aliyun.com/document_detail/419062.html">DeleteCenInterRegionTrafficQosQueue</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a QoS policy.<list type="bullet">
        /// <item><description>If a QoS policy is in the <b>Deleting</b> state, the QoS policy is being deleted. You can query the QoS policy but cannot perform other operations.</description></item>
        /// <item><description>If a QoS policy cannot be found, the QoS policy is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public DeleteCenInterRegionTrafficQosPolicyResponse DeleteCenInterRegionTrafficQosPolicyWithOptions(DeleteCenInterRegionTrafficQosPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenInterRegionTrafficQosPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenInterRegionTrafficQosPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a QoS policy, you must delete all queues in the QoS policy except the default queue. For more information, see <a href="https://help.aliyun.com/document_detail/419062.html">DeleteCenInterRegionTrafficQosQueue</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a QoS policy.<list type="bullet">
        /// <item><description>If a QoS policy is in the <b>Deleting</b> state, the QoS policy is being deleted. You can query the QoS policy but cannot perform other operations.</description></item>
        /// <item><description>If a QoS policy cannot be found, the QoS policy is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public async Task<DeleteCenInterRegionTrafficQosPolicyResponse> DeleteCenInterRegionTrafficQosPolicyWithOptionsAsync(DeleteCenInterRegionTrafficQosPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenInterRegionTrafficQosPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenInterRegionTrafficQosPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a QoS policy, you must delete all queues in the QoS policy except the default queue. For more information, see <a href="https://help.aliyun.com/document_detail/419062.html">DeleteCenInterRegionTrafficQosQueue</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a QoS policy.<list type="bullet">
        /// <item><description>If a QoS policy is in the <b>Deleting</b> state, the QoS policy is being deleted. You can query the QoS policy but cannot perform other operations.</description></item>
        /// <item><description>If a QoS policy cannot be found, the QoS policy is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public DeleteCenInterRegionTrafficQosPolicyResponse DeleteCenInterRegionTrafficQosPolicy(DeleteCenInterRegionTrafficQosPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenInterRegionTrafficQosPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a QoS policy, you must delete all queues in the QoS policy except the default queue. For more information, see <a href="https://help.aliyun.com/document_detail/419062.html">DeleteCenInterRegionTrafficQosQueue</a>.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a QoS policy.<list type="bullet">
        /// <item><description>If a QoS policy is in the <b>Deleting</b> state, the QoS policy is being deleted. You can query the QoS policy but cannot perform other operations.</description></item>
        /// <item><description>If a QoS policy cannot be found, the QoS policy is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosPolicyResponse
        /// </returns>
        public async Task<DeleteCenInterRegionTrafficQosPolicyResponse> DeleteCenInterRegionTrafficQosPolicyAsync(DeleteCenInterRegionTrafficQosPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenInterRegionTrafficQosPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a queue from a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default queue.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosQueue</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a queue. If a queue cannot be found, the queue is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public DeleteCenInterRegionTrafficQosQueueResponse DeleteCenInterRegionTrafficQosQueueWithOptions(DeleteCenInterRegionTrafficQosQueueRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueId))
            {
                query["QosQueueId"] = request.QosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenInterRegionTrafficQosQueue",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenInterRegionTrafficQosQueueResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a queue from a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default queue.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosQueue</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a queue. If a queue cannot be found, the queue is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public async Task<DeleteCenInterRegionTrafficQosQueueResponse> DeleteCenInterRegionTrafficQosQueueWithOptionsAsync(DeleteCenInterRegionTrafficQosQueueRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueId))
            {
                query["QosQueueId"] = request.QosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenInterRegionTrafficQosQueue",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenInterRegionTrafficQosQueueResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a queue from a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default queue.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosQueue</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a queue. If a queue cannot be found, the queue is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public DeleteCenInterRegionTrafficQosQueueResponse DeleteCenInterRegionTrafficQosQueue(DeleteCenInterRegionTrafficQosQueueRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenInterRegionTrafficQosQueueWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a queue from a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default queue.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteCenInterRegionTrafficQosQueue</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListCenInterRegionTrafficQosPolicies</b> operation to query the status of a queue. If a queue cannot be found, the queue is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenInterRegionTrafficQosQueueRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenInterRegionTrafficQosQueueResponse
        /// </returns>
        public async Task<DeleteCenInterRegionTrafficQosQueueResponse> DeleteCenInterRegionTrafficQosQueueAsync(DeleteCenInterRegionTrafficQosQueueRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenInterRegionTrafficQosQueueWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routing policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Deleting</b> state, the routing policy is being deleted. You can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenRouteMapResponse
        /// </returns>
        public DeleteCenRouteMapResponse DeleteCenRouteMapWithOptions(DeleteCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenRouteMapResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routing policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Deleting</b> state, the routing policy is being deleted. You can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenRouteMapResponse
        /// </returns>
        public async Task<DeleteCenRouteMapResponse> DeleteCenRouteMapWithOptionsAsync(DeleteCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCenRouteMapResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routing policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Deleting</b> state, the routing policy is being deleted. You can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenRouteMapResponse
        /// </returns>
        public DeleteCenRouteMapResponse DeleteCenRouteMap(DeleteCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCenRouteMapWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routing policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description>If a routing policy is in the <b>Deleting</b> state, the routing policy is being deleted. You can query the routing policy but cannot perform other operations.</description></item>
        /// <item><description>If a routing policy cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCenRouteMapResponse
        /// </returns>
        public async Task<DeleteCenRouteMapResponse> DeleteCenRouteMapAsync(DeleteCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCenRouteMapWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteFlowlog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Deleting</b> state, the flow log is being deleted. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log cannot be found, the flow log is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteFlowlogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteFlowlogResponse
        /// </returns>
        public DeleteFlowlogResponse DeleteFlowlogWithOptions(DeleteFlowlogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteFlowlog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteFlowlogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteFlowlog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Deleting</b> state, the flow log is being deleted. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log cannot be found, the flow log is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteFlowlogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteFlowlogResponse
        /// </returns>
        public async Task<DeleteFlowlogResponse> DeleteFlowlogWithOptionsAsync(DeleteFlowlogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteFlowlog",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteFlowlogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteFlowlog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Deleting</b> state, the flow log is being deleted. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log cannot be found, the flow log is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteFlowlogRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteFlowlogResponse
        /// </returns>
        public DeleteFlowlogResponse DeleteFlowlog(DeleteFlowlogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteFlowlogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeleteFlowlog</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Deleting</b> state, the flow log is being deleted. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log cannot be found, the flow log is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteFlowlogRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteFlowlogResponse
        /// </returns>
        public async Task<DeleteFlowlogResponse> DeleteFlowlogAsync(DeleteFlowlogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteFlowlogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of a cloud service connected to a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteRouteServiceInCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. If the request parameters are invalid, the system returns a request ID, but the cloud service configuration is not deleted. You can call <b>DescribeRouteServicesInCen</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a cloud service is in the <b>Deleting</b> state, the cloud service configuration is being deleted. In this case, you can only query the cloud service configuration and cannot perform other operations.</description></item>
        /// <item><description>If the specified cloud service configuration cannot be found, the cloud service configuration is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteRouteServiceInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRouteServiceInCenResponse
        /// </returns>
        public DeleteRouteServiceInCenResponse DeleteRouteServiceInCenWithOptions(DeleteRouteServiceInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRouteServiceInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRouteServiceInCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of a cloud service connected to a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteRouteServiceInCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. If the request parameters are invalid, the system returns a request ID, but the cloud service configuration is not deleted. You can call <b>DescribeRouteServicesInCen</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a cloud service is in the <b>Deleting</b> state, the cloud service configuration is being deleted. In this case, you can only query the cloud service configuration and cannot perform other operations.</description></item>
        /// <item><description>If the specified cloud service configuration cannot be found, the cloud service configuration is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteRouteServiceInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRouteServiceInCenResponse
        /// </returns>
        public async Task<DeleteRouteServiceInCenResponse> DeleteRouteServiceInCenWithOptionsAsync(DeleteRouteServiceInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRouteServiceInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRouteServiceInCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of a cloud service connected to a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteRouteServiceInCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. If the request parameters are invalid, the system returns a request ID, but the cloud service configuration is not deleted. You can call <b>DescribeRouteServicesInCen</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a cloud service is in the <b>Deleting</b> state, the cloud service configuration is being deleted. In this case, you can only query the cloud service configuration and cannot perform other operations.</description></item>
        /// <item><description>If the specified cloud service configuration cannot be found, the cloud service configuration is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteRouteServiceInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRouteServiceInCenResponse
        /// </returns>
        public DeleteRouteServiceInCenResponse DeleteRouteServiceInCen(DeleteRouteServiceInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRouteServiceInCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of a cloud service connected to a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteRouteServiceInCen</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. If the request parameters are invalid, the system returns a request ID, but the cloud service configuration is not deleted. You can call <b>DescribeRouteServicesInCen</b> to query the status of the task.</para>
        /// <list type="bullet">
        /// <item><description>If a cloud service is in the <b>Deleting</b> state, the cloud service configuration is being deleted. In this case, you can only query the cloud service configuration and cannot perform other operations.</description></item>
        /// <item><description>If the specified cloud service configuration cannot be found, the cloud service configuration is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteRouteServiceInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRouteServiceInCenResponse
        /// </returns>
        public async Task<DeleteRouteServiceInCenResponse> DeleteRouteServiceInCenAsync(DeleteRouteServiceInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRouteServiceInCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>DeleteTrafficMarkingPolicy</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.
        ///     *   If a traffic marking policy is in the <b>Deleting</b> state, the traffic marking policy is being deleted. You can query the traffic marking policy but cannot perform other operations.
        ///     *   If a traffic marking policy cannot be found, the traffic marking policy is deleted.</para>
        /// <list type="bullet">
        /// <item><description>Before you delete a traffic marking policy, you must delete all traffic classification rules from the policy. For more information, see <a href="https://help.aliyun.com/document_detail/468330.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTrafficMarkingPolicyResponse
        /// </returns>
        public DeleteTrafficMarkingPolicyResponse DeleteTrafficMarkingPolicyWithOptions(DeleteTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>DeleteTrafficMarkingPolicy</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.
        ///     *   If a traffic marking policy is in the <b>Deleting</b> state, the traffic marking policy is being deleted. You can query the traffic marking policy but cannot perform other operations.
        ///     *   If a traffic marking policy cannot be found, the traffic marking policy is deleted.</para>
        /// <list type="bullet">
        /// <item><description>Before you delete a traffic marking policy, you must delete all traffic classification rules from the policy. For more information, see <a href="https://help.aliyun.com/document_detail/468330.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<DeleteTrafficMarkingPolicyResponse> DeleteTrafficMarkingPolicyWithOptionsAsync(DeleteTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>DeleteTrafficMarkingPolicy</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.
        ///     *   If a traffic marking policy is in the <b>Deleting</b> state, the traffic marking policy is being deleted. You can query the traffic marking policy but cannot perform other operations.
        ///     *   If a traffic marking policy cannot be found, the traffic marking policy is deleted.</para>
        /// <list type="bullet">
        /// <item><description>Before you delete a traffic marking policy, you must delete all traffic classification rules from the policy. For more information, see <a href="https://help.aliyun.com/document_detail/468330.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTrafficMarkingPolicyResponse
        /// </returns>
        public DeleteTrafficMarkingPolicyResponse DeleteTrafficMarkingPolicy(DeleteTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>DeleteTrafficMarkingPolicy</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic marking policy.
        ///     *   If a traffic marking policy is in the <b>Deleting</b> state, the traffic marking policy is being deleted. You can query the traffic marking policy but cannot perform other operations.
        ///     *   If a traffic marking policy cannot be found, the traffic marking policy is deleted.</para>
        /// <list type="bullet">
        /// <item><description>Before you delete a traffic marking policy, you must delete all traffic classification rules from the policy. For more information, see <a href="https://help.aliyun.com/document_detail/468330.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<DeleteTrafficMarkingPolicyResponse> DeleteTrafficMarkingPolicyAsync(DeleteTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete an aggregate route, make sure that your network has a redundant route to prevent service interruptions.</para>
        /// <list type="bullet">
        /// <item><description>After an aggregate route is deleted, the aggregate route is automatically withdrawn from virtual private clouds (VPCs). Specific routes that fall within the aggregate route are advertised to the VPCs.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouteTableAggregationResponse
        /// </returns>
        public DeleteTransitRouteTableAggregationResponse DeleteTransitRouteTableAggregationWithOptions(DeleteTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouteTableAggregationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete an aggregate route, make sure that your network has a redundant route to prevent service interruptions.</para>
        /// <list type="bullet">
        /// <item><description>After an aggregate route is deleted, the aggregate route is automatically withdrawn from virtual private clouds (VPCs). Specific routes that fall within the aggregate route are advertised to the VPCs.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<DeleteTransitRouteTableAggregationResponse> DeleteTransitRouteTableAggregationWithOptionsAsync(DeleteTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouteTableAggregationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete an aggregate route, make sure that your network has a redundant route to prevent service interruptions.</para>
        /// <list type="bullet">
        /// <item><description>After an aggregate route is deleted, the aggregate route is automatically withdrawn from virtual private clouds (VPCs). Specific routes that fall within the aggregate route are advertised to the VPCs.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouteTableAggregationResponse
        /// </returns>
        public DeleteTransitRouteTableAggregationResponse DeleteTransitRouteTableAggregation(DeleteTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouteTableAggregationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an aggregate route.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete an aggregate route, make sure that your network has a redundant route to prevent service interruptions.</para>
        /// <list type="bullet">
        /// <item><description>After an aggregate route is deleted, the aggregate route is automatically withdrawn from virtual private clouds (VPCs). Specific routes that fall within the aggregate route are advertised to the VPCs.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<DeleteTransitRouteTableAggregationResponse> DeleteTransitRouteTableAggregationAsync(DeleteTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouteTableAggregationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouter</em>* is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouters</b> to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Deleting</b> state, the transit router is being deleted. In this case, you can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router cannot be found, the transit router is deleted.</description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you delete a transit router, make sure that the following prerequisites are met:</para>
        /// <list type="bullet">
        /// <item><description><para>No network instance connections are created on the transit router. </para>
        /// <list type="bullet">
        /// <item><description>For more information about how to delete a virtual private cloud (VPC) connection, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a virtual border router (VBR) connection, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a Cloud Connect Network (CCN) connection, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>. </description></item>
        /// <item><description>For more information about how to delete a VPN connection, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to delete an inter-region connection, see <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><para>No custom route tables are created on the transit router. For more information about how to delete a custom route table, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</para>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterResponse
        /// </returns>
        public DeleteTransitRouterResponse DeleteTransitRouterWithOptions(DeleteTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouter</em>* is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouters</b> to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Deleting</b> state, the transit router is being deleted. In this case, you can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router cannot be found, the transit router is deleted.</description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you delete a transit router, make sure that the following prerequisites are met:</para>
        /// <list type="bullet">
        /// <item><description><para>No network instance connections are created on the transit router. </para>
        /// <list type="bullet">
        /// <item><description>For more information about how to delete a virtual private cloud (VPC) connection, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a virtual border router (VBR) connection, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a Cloud Connect Network (CCN) connection, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>. </description></item>
        /// <item><description>For more information about how to delete a VPN connection, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to delete an inter-region connection, see <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><para>No custom route tables are created on the transit router. For more information about how to delete a custom route table, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</para>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterResponse
        /// </returns>
        public async Task<DeleteTransitRouterResponse> DeleteTransitRouterWithOptionsAsync(DeleteTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouter</em>* is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouters</b> to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Deleting</b> state, the transit router is being deleted. In this case, you can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router cannot be found, the transit router is deleted.</description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you delete a transit router, make sure that the following prerequisites are met:</para>
        /// <list type="bullet">
        /// <item><description><para>No network instance connections are created on the transit router. </para>
        /// <list type="bullet">
        /// <item><description>For more information about how to delete a virtual private cloud (VPC) connection, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a virtual border router (VBR) connection, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a Cloud Connect Network (CCN) connection, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>. </description></item>
        /// <item><description>For more information about how to delete a VPN connection, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to delete an inter-region connection, see <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><para>No custom route tables are created on the transit router. For more information about how to delete a custom route table, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</para>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterResponse
        /// </returns>
        public DeleteTransitRouterResponse DeleteTransitRouter(DeleteTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouter</em>* is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouters</b> to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Deleting</b> state, the transit router is being deleted. In this case, you can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router cannot be found, the transit router is deleted.</description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you delete a transit router, make sure that the following prerequisites are met:</para>
        /// <list type="bullet">
        /// <item><description><para>No network instance connections are created on the transit router. </para>
        /// <list type="bullet">
        /// <item><description>For more information about how to delete a virtual private cloud (VPC) connection, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a virtual border router (VBR) connection, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>. </description></item>
        /// <item><description>For more information about how to delete a Cloud Connect Network (CCN) connection, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>. </description></item>
        /// <item><description>For more information about how to delete a VPN connection, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to delete an inter-region connection, see <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><para>No custom route tables are created on the transit router. For more information about how to delete a custom route table, see <a href="https://help.aliyun.com/document_detail/261235.html">DeleteTransitRouterRouteTable</a>.</para>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterResponse
        /// </returns>
        public async Task<DeleteTransitRouterResponse> DeleteTransitRouterAsync(DeleteTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a CIDR block from a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>If IP addresses within the CIDR block have been allocated to network instances, the CIDR block cannot be deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterCidrResponse
        /// </returns>
        public DeleteTransitRouterCidrResponse DeleteTransitRouterCidrWithOptions(DeleteTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterCidrResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a CIDR block from a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>If IP addresses within the CIDR block have been allocated to network instances, the CIDR block cannot be deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterCidrResponse
        /// </returns>
        public async Task<DeleteTransitRouterCidrResponse> DeleteTransitRouterCidrWithOptionsAsync(DeleteTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterCidrResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a CIDR block from a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>If IP addresses within the CIDR block have been allocated to network instances, the CIDR block cannot be deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterCidrResponse
        /// </returns>
        public DeleteTransitRouterCidrResponse DeleteTransitRouterCidr(DeleteTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterCidrWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a CIDR block from a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>If IP addresses within the CIDR block have been allocated to network instances, the CIDR block cannot be deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterCidrResponse
        /// </returns>
        public async Task<DeleteTransitRouterCidrResponse> DeleteTransitRouterCidrAsync(DeleteTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterCidrWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an Express Connect Router (ECR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>DeleteTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If the ECR connection is in the Detaching state, the ECR connection is being deleted. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If the ECR connection cannot be found, the ECR connection is deleted. Before you call the DeleteTransitRouterEcrAttachment operation, make sure that all request parameters are valid. If a request is invalid, a request ID is returned but the ECR connection is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterEcrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterEcrAttachmentResponse
        /// </returns>
        public DeleteTransitRouterEcrAttachmentResponse DeleteTransitRouterEcrAttachmentWithOptions(DeleteTransitRouterEcrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterEcrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterEcrAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an Express Connect Router (ECR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>DeleteTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If the ECR connection is in the Detaching state, the ECR connection is being deleted. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If the ECR connection cannot be found, the ECR connection is deleted. Before you call the DeleteTransitRouterEcrAttachment operation, make sure that all request parameters are valid. If a request is invalid, a request ID is returned but the ECR connection is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterEcrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterEcrAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterEcrAttachmentResponse> DeleteTransitRouterEcrAttachmentWithOptionsAsync(DeleteTransitRouterEcrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterEcrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterEcrAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an Express Connect Router (ECR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>DeleteTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If the ECR connection is in the Detaching state, the ECR connection is being deleted. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If the ECR connection cannot be found, the ECR connection is deleted. Before you call the DeleteTransitRouterEcrAttachment operation, make sure that all request parameters are valid. If a request is invalid, a request ID is returned but the ECR connection is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterEcrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterEcrAttachmentResponse
        /// </returns>
        public DeleteTransitRouterEcrAttachmentResponse DeleteTransitRouterEcrAttachment(DeleteTransitRouterEcrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterEcrAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an Express Connect Router (ECR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>DeleteTransitRouterEcrAttachment is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If the ECR connection is in the Detaching state, the ECR connection is being deleted. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If the ECR connection cannot be found, the ECR connection is deleted. Before you call the DeleteTransitRouterEcrAttachment operation, make sure that all request parameters are valid. If a request is invalid, a request ID is returned but the ECR connection is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterEcrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterEcrAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterEcrAttachmentResponse> DeleteTransitRouterEcrAttachmentAsync(DeleteTransitRouterEcrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterEcrAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you delete a multicast domain, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The multicast domain is disassociated from all vSwitches. For more information, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>All multicast sources and members are removed from the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429776.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>The multicast domain is not added to other multicast domains as a multicast member. If the multicast domain is added to another multicast domain as a multicast member, you must remove the multicast domain from the other multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>Make sure all the request parameters are valid. If a request parameter is invalid, a request ID is returned after you call the operation, but the multicast domain is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterMulticastDomainResponse
        /// </returns>
        public DeleteTransitRouterMulticastDomainResponse DeleteTransitRouterMulticastDomainWithOptions(DeleteTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterMulticastDomainResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you delete a multicast domain, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The multicast domain is disassociated from all vSwitches. For more information, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>All multicast sources and members are removed from the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429776.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>The multicast domain is not added to other multicast domains as a multicast member. If the multicast domain is added to another multicast domain as a multicast member, you must remove the multicast domain from the other multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>Make sure all the request parameters are valid. If a request parameter is invalid, a request ID is returned after you call the operation, but the multicast domain is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<DeleteTransitRouterMulticastDomainResponse> DeleteTransitRouterMulticastDomainWithOptionsAsync(DeleteTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterMulticastDomainResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you delete a multicast domain, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The multicast domain is disassociated from all vSwitches. For more information, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>All multicast sources and members are removed from the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429776.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>The multicast domain is not added to other multicast domains as a multicast member. If the multicast domain is added to another multicast domain as a multicast member, you must remove the multicast domain from the other multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>Make sure all the request parameters are valid. If a request parameter is invalid, a request ID is returned after you call the operation, but the multicast domain is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterMulticastDomainResponse
        /// </returns>
        public DeleteTransitRouterMulticastDomainResponse DeleteTransitRouterMulticastDomain(DeleteTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterMulticastDomainWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you delete a multicast domain, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The multicast domain is disassociated from all vSwitches. For more information, see <a href="https://help.aliyun.com/document_detail/429774.html">DisassociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>All multicast sources and members are removed from the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429776.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>The multicast domain is not added to other multicast domains as a multicast member. If the multicast domain is added to another multicast domain as a multicast member, you must remove the multicast domain from the other multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429779.html">DeregisterTransitRouterMulticastGroupMembers</a>.</description></item>
        /// <item><description>Make sure all the request parameters are valid. If a request parameter is invalid, a request ID is returned after you call the operation, but the multicast domain is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<DeleteTransitRouterMulticastDomainResponse> DeleteTransitRouterMulticastDomainAsync(DeleteTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterMulticastDomainWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an inter-region connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterPeerAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>ListTransitRouterPeerAttachments</b> to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Detaching</b> state, the inter-region connection is being deleted. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection cannot be found, the inter-region connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you begin, make sure that the Enterprise Edition transit router that you use to create inter-region connections meets the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from route tables of Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route table does not contain a route whose next hop is the inter-region connection and that is generated from a prefix list. You can delete routes from a route table by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// <item><description>No quality of service (QoS) policy is configured for the inter-region connection. For more information about how to delete QoS policies, see <a href="https://help.aliyun.com/document_detail/427547.html">DeleteCenInterRegionTrafficQosPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPeerAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPeerAttachmentResponse
        /// </returns>
        public DeleteTransitRouterPeerAttachmentResponse DeleteTransitRouterPeerAttachmentWithOptions(DeleteTransitRouterPeerAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterPeerAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterPeerAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an inter-region connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterPeerAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>ListTransitRouterPeerAttachments</b> to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Detaching</b> state, the inter-region connection is being deleted. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection cannot be found, the inter-region connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you begin, make sure that the Enterprise Edition transit router that you use to create inter-region connections meets the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from route tables of Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route table does not contain a route whose next hop is the inter-region connection and that is generated from a prefix list. You can delete routes from a route table by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// <item><description>No quality of service (QoS) policy is configured for the inter-region connection. For more information about how to delete QoS policies, see <a href="https://help.aliyun.com/document_detail/427547.html">DeleteCenInterRegionTrafficQosPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPeerAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPeerAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterPeerAttachmentResponse> DeleteTransitRouterPeerAttachmentWithOptionsAsync(DeleteTransitRouterPeerAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterPeerAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterPeerAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an inter-region connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterPeerAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>ListTransitRouterPeerAttachments</b> to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Detaching</b> state, the inter-region connection is being deleted. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection cannot be found, the inter-region connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you begin, make sure that the Enterprise Edition transit router that you use to create inter-region connections meets the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from route tables of Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route table does not contain a route whose next hop is the inter-region connection and that is generated from a prefix list. You can delete routes from a route table by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// <item><description>No quality of service (QoS) policy is configured for the inter-region connection. For more information about how to delete QoS policies, see <a href="https://help.aliyun.com/document_detail/427547.html">DeleteCenInterRegionTrafficQosPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPeerAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPeerAttachmentResponse
        /// </returns>
        public DeleteTransitRouterPeerAttachmentResponse DeleteTransitRouterPeerAttachment(DeleteTransitRouterPeerAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterPeerAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an inter-region connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterPeerAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>ListTransitRouterPeerAttachments</b> to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Detaching</b> state, the inter-region connection is being deleted. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection cannot be found, the inter-region connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you begin, make sure that the Enterprise Edition transit router that you use to create inter-region connections meets the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the inter-region connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from route tables of Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route table does not contain a route whose next hop is the inter-region connection and that is generated from a prefix list. You can delete routes from a route table by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// <item><description>No quality of service (QoS) policy is configured for the inter-region connection. For more information about how to delete QoS policies, see <a href="https://help.aliyun.com/document_detail/427547.html">DeleteCenInterRegionTrafficQosPolicy</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPeerAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPeerAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterPeerAttachmentResponse> DeleteTransitRouterPeerAttachmentAsync(DeleteTransitRouterPeerAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterPeerAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates the route table of an Enterprise Edition transit router from a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you disassociate a route table of an Enterprise Edition transit router from a prefix list, the routes that point to the CIDR blocks in the prefix list are automatically withdrawn from the route table. Before you disassociate the route table of an Enterprise Edition transit router from a prefix list, you must migrate workloads that use the routes in case services are interrupted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPrefixListAssociationResponse
        /// </returns>
        public DeleteTransitRouterPrefixListAssociationResponse DeleteTransitRouterPrefixListAssociationWithOptions(DeleteTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterPrefixListAssociationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates the route table of an Enterprise Edition transit router from a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you disassociate a route table of an Enterprise Edition transit router from a prefix list, the routes that point to the CIDR blocks in the prefix list are automatically withdrawn from the route table. Before you disassociate the route table of an Enterprise Edition transit router from a prefix list, you must migrate workloads that use the routes in case services are interrupted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<DeleteTransitRouterPrefixListAssociationResponse> DeleteTransitRouterPrefixListAssociationWithOptionsAsync(DeleteTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterPrefixListAssociationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates the route table of an Enterprise Edition transit router from a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you disassociate a route table of an Enterprise Edition transit router from a prefix list, the routes that point to the CIDR blocks in the prefix list are automatically withdrawn from the route table. Before you disassociate the route table of an Enterprise Edition transit router from a prefix list, you must migrate workloads that use the routes in case services are interrupted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPrefixListAssociationResponse
        /// </returns>
        public DeleteTransitRouterPrefixListAssociationResponse DeleteTransitRouterPrefixListAssociation(DeleteTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterPrefixListAssociationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates the route table of an Enterprise Edition transit router from a prefix list.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you disassociate a route table of an Enterprise Edition transit router from a prefix list, the routes that point to the CIDR blocks in the prefix list are automatically withdrawn from the route table. Before you disassociate the route table of an Enterprise Edition transit router from a prefix list, you must migrate workloads that use the routes in case services are interrupted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<DeleteTransitRouterPrefixListAssociationResponse> DeleteTransitRouterPrefixListAssociationAsync(DeleteTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterPrefixListAssociationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes blackhole routes and static routes that point to network instance connections from the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>If you specify the <b>TransitRouterRouteEntryId</b> parameter to delete a specific route, you do not need to configure the <b>TransitRouterRouteTableId</b> or <b>TransitRouterRouteEntryDestinationCidrBlock</b>. Otherwise, parameter conflicts occur.</description></item>
        /// <item><description>If you do not specify the <b>TransitRouterRouteEntryId</b> parameter, configure the following parameters based on the next hop type of the route that you want to delete:<list type="bullet">
        /// <item><description>To delete a blackhole route, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, and <b>TransitRouterRouteEntryNextHopType</b>.</description></item>
        /// <item><description>To delete routes other than blackhole routes, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, <b>TransitRouterRouteEntryNextHopType</b>, and <b>TransitRouterRouteEntryNextHopId</b>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>DeleteTransitRouterRouteEntry</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteEntries</b> operation to query the status of a route entry.<list type="bullet">
        /// <item><description>If the route entry is in the <b>Deleting</b> state, the route entry is being deleted. In this case, you can query the route entry but cannot perform other operations.</description></item>
        /// <item><description>If a route entry cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <para>You can call this operation to delete only static routes. Automatically learned routes are not supported. You can call the <a href="https://help.aliyun.com/document_detail/260941.html">ListTransitRouterRouteEntries</a> operation to query route types.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteEntryResponse
        /// </returns>
        public DeleteTransitRouterRouteEntryResponse DeleteTransitRouterRouteEntryWithOptions(DeleteTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryId))
            {
                query["TransitRouterRouteEntryId"] = request.TransitRouterRouteEntryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterRouteEntryResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes blackhole routes and static routes that point to network instance connections from the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>If you specify the <b>TransitRouterRouteEntryId</b> parameter to delete a specific route, you do not need to configure the <b>TransitRouterRouteTableId</b> or <b>TransitRouterRouteEntryDestinationCidrBlock</b>. Otherwise, parameter conflicts occur.</description></item>
        /// <item><description>If you do not specify the <b>TransitRouterRouteEntryId</b> parameter, configure the following parameters based on the next hop type of the route that you want to delete:<list type="bullet">
        /// <item><description>To delete a blackhole route, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, and <b>TransitRouterRouteEntryNextHopType</b>.</description></item>
        /// <item><description>To delete routes other than blackhole routes, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, <b>TransitRouterRouteEntryNextHopType</b>, and <b>TransitRouterRouteEntryNextHopId</b>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>DeleteTransitRouterRouteEntry</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteEntries</b> operation to query the status of a route entry.<list type="bullet">
        /// <item><description>If the route entry is in the <b>Deleting</b> state, the route entry is being deleted. In this case, you can query the route entry but cannot perform other operations.</description></item>
        /// <item><description>If a route entry cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <para>You can call this operation to delete only static routes. Automatically learned routes are not supported. You can call the <a href="https://help.aliyun.com/document_detail/260941.html">ListTransitRouterRouteEntries</a> operation to query route types.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<DeleteTransitRouterRouteEntryResponse> DeleteTransitRouterRouteEntryWithOptionsAsync(DeleteTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryId))
            {
                query["TransitRouterRouteEntryId"] = request.TransitRouterRouteEntryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterRouteEntryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes blackhole routes and static routes that point to network instance connections from the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>If you specify the <b>TransitRouterRouteEntryId</b> parameter to delete a specific route, you do not need to configure the <b>TransitRouterRouteTableId</b> or <b>TransitRouterRouteEntryDestinationCidrBlock</b>. Otherwise, parameter conflicts occur.</description></item>
        /// <item><description>If you do not specify the <b>TransitRouterRouteEntryId</b> parameter, configure the following parameters based on the next hop type of the route that you want to delete:<list type="bullet">
        /// <item><description>To delete a blackhole route, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, and <b>TransitRouterRouteEntryNextHopType</b>.</description></item>
        /// <item><description>To delete routes other than blackhole routes, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, <b>TransitRouterRouteEntryNextHopType</b>, and <b>TransitRouterRouteEntryNextHopId</b>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>DeleteTransitRouterRouteEntry</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteEntries</b> operation to query the status of a route entry.<list type="bullet">
        /// <item><description>If the route entry is in the <b>Deleting</b> state, the route entry is being deleted. In this case, you can query the route entry but cannot perform other operations.</description></item>
        /// <item><description>If a route entry cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <para>You can call this operation to delete only static routes. Automatically learned routes are not supported. You can call the <a href="https://help.aliyun.com/document_detail/260941.html">ListTransitRouterRouteEntries</a> operation to query route types.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteEntryResponse
        /// </returns>
        public DeleteTransitRouterRouteEntryResponse DeleteTransitRouterRouteEntry(DeleteTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterRouteEntryWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes blackhole routes and static routes that point to network instance connections from the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call this operation, take note of the following items:</para>
        /// <list type="bullet">
        /// <item><description>If you specify the <b>TransitRouterRouteEntryId</b> parameter to delete a specific route, you do not need to configure the <b>TransitRouterRouteTableId</b> or <b>TransitRouterRouteEntryDestinationCidrBlock</b>. Otherwise, parameter conflicts occur.</description></item>
        /// <item><description>If you do not specify the <b>TransitRouterRouteEntryId</b> parameter, configure the following parameters based on the next hop type of the route that you want to delete:<list type="bullet">
        /// <item><description>To delete a blackhole route, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, and <b>TransitRouterRouteEntryNextHopType</b>.</description></item>
        /// <item><description>To delete routes other than blackhole routes, configure the following parameters: <b>TransitRouterRouteTableId</b>, <b>TransitRouterRouteEntryDestinationCidrBlock</b>, <b>TransitRouterRouteEntryNextHopType</b>, and <b>TransitRouterRouteEntryNextHopId</b>.</description></item>
        /// </list>
        /// </description></item>
        /// <item><description><b>DeleteTransitRouterRouteEntry</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteEntries</b> operation to query the status of a route entry.<list type="bullet">
        /// <item><description>If the route entry is in the <b>Deleting</b> state, the route entry is being deleted. In this case, you can query the route entry but cannot perform other operations.</description></item>
        /// <item><description>If a route entry cannot be found, it is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <para>You can call this operation to delete only static routes. Automatically learned routes are not supported. You can call the <a href="https://help.aliyun.com/document_detail/260941.html">ListTransitRouterRouteEntries</a> operation to query route types.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<DeleteTransitRouterRouteEntryResponse> DeleteTransitRouterRouteEntryAsync(DeleteTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterRouteEntryWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom route table from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default route table of an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTables</b> operation to query the status of a custom route table.<list type="bullet">
        /// <item><description>If a custom route table is in the Deleting state, the custom route table is being deleted. In this case, you can query the custom route table but cannot perform other operations.</description></item>
        /// <item><description>If a custom route table cannot be found, the custom route table is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteTableResponse
        /// </returns>
        public DeleteTransitRouterRouteTableResponse DeleteTransitRouterRouteTableWithOptions(DeleteTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom route table from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default route table of an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTables</b> operation to query the status of a custom route table.<list type="bullet">
        /// <item><description>If a custom route table is in the Deleting state, the custom route table is being deleted. In this case, you can query the custom route table but cannot perform other operations.</description></item>
        /// <item><description>If a custom route table cannot be found, the custom route table is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteTableResponse
        /// </returns>
        public async Task<DeleteTransitRouterRouteTableResponse> DeleteTransitRouterRouteTableWithOptionsAsync(DeleteTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom route table from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default route table of an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTables</b> operation to query the status of a custom route table.<list type="bullet">
        /// <item><description>If a custom route table is in the Deleting state, the custom route table is being deleted. In this case, you can query the custom route table but cannot perform other operations.</description></item>
        /// <item><description>If a custom route table cannot be found, the custom route table is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteTableResponse
        /// </returns>
        public DeleteTransitRouterRouteTableResponse DeleteTransitRouterRouteTable(DeleteTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterRouteTableWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom route table from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You cannot delete the default route table of an Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>DeleteTransitRouterRouteTable</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTables</b> operation to query the status of a custom route table.<list type="bullet">
        /// <item><description>If a custom route table is in the Deleting state, the custom route table is being deleted. In this case, you can query the custom route table but cannot perform other operations.</description></item>
        /// <item><description>If a custom route table cannot be found, the custom route table is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterRouteTableResponse
        /// </returns>
        public async Task<DeleteTransitRouterRouteTableResponse> DeleteTransitRouterRouteTableAsync(DeleteTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterRouteTableWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual border router (VBR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVbrAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Detaching</b> state, the VBR connection is being deleted. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If a VBR connection cannot be found, the VBR connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VBR connection for an Enterprise Edition transit router, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom route entries, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route whose next hop is the VBR connection and that is generated from a prefix list. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVbrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVbrAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVbrAttachmentResponse DeleteTransitRouterVbrAttachmentWithOptions(DeleteTransitRouterVbrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVbrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVbrAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual border router (VBR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVbrAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Detaching</b> state, the VBR connection is being deleted. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If a VBR connection cannot be found, the VBR connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VBR connection for an Enterprise Edition transit router, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom route entries, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route whose next hop is the VBR connection and that is generated from a prefix list. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVbrAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVbrAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVbrAttachmentResponse> DeleteTransitRouterVbrAttachmentWithOptionsAsync(DeleteTransitRouterVbrAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVbrAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVbrAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual border router (VBR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVbrAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Detaching</b> state, the VBR connection is being deleted. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If a VBR connection cannot be found, the VBR connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VBR connection for an Enterprise Edition transit router, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom route entries, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route whose next hop is the VBR connection and that is generated from a prefix list. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVbrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVbrAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVbrAttachmentResponse DeleteTransitRouterVbrAttachment(DeleteTransitRouterVbrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterVbrAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual border router (VBR) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVbrAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Detaching</b> state, the VBR connection is being deleted. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If a VBR connection cannot be found, the VBR connection is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VBR connection for an Enterprise Edition transit router, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VBR connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom route entries, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route whose next hop is the VBR connection and that is generated from a prefix list. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVbrAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVbrAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVbrAttachmentResponse> DeleteTransitRouterVbrAttachmentAsync(DeleteTransitRouterVbrAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterVbrAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual private cloud (VPC) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVpcAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Detaching</b> state, the VPC connection is being deleted. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection cannot be found, it is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VPC connection, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route table of the VPC does not contain routes that point to the VPC connection. For more information about how to delete routes from a VPC route table, see <a href="https://help.aliyun.com/document_detail/36013.html">DeleteRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from the route tables of an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route that is generated from a prefix list and the next hop is the VPC connection. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpcAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpcAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVpcAttachmentResponse DeleteTransitRouterVpcAttachmentWithOptions(DeleteTransitRouterVpcAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVpcAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVpcAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual private cloud (VPC) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVpcAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Detaching</b> state, the VPC connection is being deleted. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection cannot be found, it is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VPC connection, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route table of the VPC does not contain routes that point to the VPC connection. For more information about how to delete routes from a VPC route table, see <a href="https://help.aliyun.com/document_detail/36013.html">DeleteRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from the route tables of an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route that is generated from a prefix list and the next hop is the VPC connection. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpcAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpcAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVpcAttachmentResponse> DeleteTransitRouterVpcAttachmentWithOptionsAsync(DeleteTransitRouterVpcAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVpcAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVpcAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual private cloud (VPC) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVpcAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Detaching</b> state, the VPC connection is being deleted. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection cannot be found, it is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VPC connection, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route table of the VPC does not contain routes that point to the VPC connection. For more information about how to delete routes from a VPC route table, see <a href="https://help.aliyun.com/document_detail/36013.html">DeleteRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from the route tables of an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route that is generated from a prefix list and the next hop is the VPC connection. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpcAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpcAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVpcAttachmentResponse DeleteTransitRouterVpcAttachment(DeleteTransitRouterVpcAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterVpcAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a virtual private cloud (VPC) connection from an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DeleteTransitRouterVpcAttachment</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Detaching</b> state, the VPC connection is being deleted. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection cannot be found, it is deleted.</description></item>
        /// </list>
        /// <h2>Prerequisites</h2>
        /// <para>Before you delete a VPC connection, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>No associated forwarding correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete an associated forwarding correlation, see <a href="https://help.aliyun.com/document_detail/260944.html">DissociateTransitRouterAttachmentFromRouteTable</a>.</description></item>
        /// <item><description>No route learning correlation is established between the VPC connection and the route tables of the Enterprise Edition transit router. For more information about how to delete a route learning correlation, see <a href="https://help.aliyun.com/document_detail/260945.html">DisableTransitRouterRouteTablePropagation</a>.</description></item>
        /// <item><description>The route table of the VPC does not contain routes that point to the VPC connection. For more information about how to delete routes from a VPC route table, see <a href="https://help.aliyun.com/document_detail/36013.html">DeleteRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a custom route entry whose next hop is the network instance connection. For more information about how to delete custom routes from the route tables of an Enterprise Edition transit router, see <a href="https://help.aliyun.com/document_detail/261240.html">DeleteTransitRouterRouteEntry</a>.</description></item>
        /// <item><description>The route tables of the Enterprise Edition transit router do not contain a route that is generated from a prefix list and the next hop is the VPC connection. You can delete such routes by disassociating the route table from the prefix list. For more information, see <a href="https://help.aliyun.com/document_detail/445486.html">DeleteTransitRouterPrefixListAssociation</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpcAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpcAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVpcAttachmentResponse> DeleteTransitRouterVpcAttachmentAsync(DeleteTransitRouterVpcAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterVpcAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a VPN attachment.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DeleteTransitRouterVpnAttachment</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the VPN attachment is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpnAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpnAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVpnAttachmentResponse DeleteTransitRouterVpnAttachmentWithOptions(DeleteTransitRouterVpnAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVpnAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVpnAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a VPN attachment.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DeleteTransitRouterVpnAttachment</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the VPN attachment is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpnAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpnAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVpnAttachmentResponse> DeleteTransitRouterVpnAttachmentWithOptionsAsync(DeleteTransitRouterVpnAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTransitRouterVpnAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTransitRouterVpnAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a VPN attachment.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DeleteTransitRouterVpnAttachment</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the VPN attachment is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpnAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpnAttachmentResponse
        /// </returns>
        public DeleteTransitRouterVpnAttachmentResponse DeleteTransitRouterVpnAttachment(DeleteTransitRouterVpnAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTransitRouterVpnAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a VPN attachment.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DeleteTransitRouterVpnAttachment</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the VPN attachment is not deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteTransitRouterVpnAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteTransitRouterVpnAttachmentResponse
        /// </returns>
        public async Task<DeleteTransitRouterVpnAttachmentResponse> DeleteTransitRouterVpnAttachmentAsync(DeleteTransitRouterVpnAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTransitRouterVpnAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a multicast member from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If the multicast member is in the <b>Deregistering</b> state, the multicast member is being removed. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If a multicast member cannot be found, the multicast member is removed from the multicast group.``
        /// Before you call the DeregisterTransitRouterMulticastGroupMembers operation, make sure that all request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast member is not removed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public DeregisterTransitRouterMulticastGroupMembersResponse DeregisterTransitRouterMulticastGroupMembersWithOptions(DeregisterTransitRouterMulticastGroupMembersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeregisterTransitRouterMulticastGroupMembers",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeregisterTransitRouterMulticastGroupMembersResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a multicast member from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If the multicast member is in the <b>Deregistering</b> state, the multicast member is being removed. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If a multicast member cannot be found, the multicast member is removed from the multicast group.``
        /// Before you call the DeregisterTransitRouterMulticastGroupMembers operation, make sure that all request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast member is not removed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public async Task<DeregisterTransitRouterMulticastGroupMembersResponse> DeregisterTransitRouterMulticastGroupMembersWithOptionsAsync(DeregisterTransitRouterMulticastGroupMembersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeregisterTransitRouterMulticastGroupMembers",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeregisterTransitRouterMulticastGroupMembersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a multicast member from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If the multicast member is in the <b>Deregistering</b> state, the multicast member is being removed. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If a multicast member cannot be found, the multicast member is removed from the multicast group.``
        /// Before you call the DeregisterTransitRouterMulticastGroupMembers operation, make sure that all request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast member is not removed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public DeregisterTransitRouterMulticastGroupMembersResponse DeregisterTransitRouterMulticastGroupMembers(DeregisterTransitRouterMulticastGroupMembersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeregisterTransitRouterMulticastGroupMembersWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a multicast member from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If the multicast member is in the <b>Deregistering</b> state, the multicast member is being removed. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If a multicast member cannot be found, the multicast member is removed from the multicast group.``
        /// Before you call the DeregisterTransitRouterMulticastGroupMembers operation, make sure that all request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast member is not removed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public async Task<DeregisterTransitRouterMulticastGroupMembersResponse> DeregisterTransitRouterMulticastGroupMembersAsync(DeregisterTransitRouterMulticastGroupMembersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeregisterTransitRouterMulticastGroupMembersWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast source from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request a sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.</para>
        /// <list type="bullet">
        /// <item><description>If a multicast source is in the <b>Deregistering</b> state, the multicast source is being deleted. You can query the multicast source but cannot perform other operations.</description></item>
        /// <item><description>If a multicast source cannot be found, the multicast source is deleted.
        /// Before you call DeregisterTransitRouterMulticastGroupSources, make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast source is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public DeregisterTransitRouterMulticastGroupSourcesResponse DeregisterTransitRouterMulticastGroupSourcesWithOptions(DeregisterTransitRouterMulticastGroupSourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeregisterTransitRouterMulticastGroupSources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeregisterTransitRouterMulticastGroupSourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast source from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request a sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.</para>
        /// <list type="bullet">
        /// <item><description>If a multicast source is in the <b>Deregistering</b> state, the multicast source is being deleted. You can query the multicast source but cannot perform other operations.</description></item>
        /// <item><description>If a multicast source cannot be found, the multicast source is deleted.
        /// Before you call DeregisterTransitRouterMulticastGroupSources, make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast source is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public async Task<DeregisterTransitRouterMulticastGroupSourcesResponse> DeregisterTransitRouterMulticastGroupSourcesWithOptionsAsync(DeregisterTransitRouterMulticastGroupSourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeregisterTransitRouterMulticastGroupSources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeregisterTransitRouterMulticastGroupSourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast source from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request a sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.</para>
        /// <list type="bullet">
        /// <item><description>If a multicast source is in the <b>Deregistering</b> state, the multicast source is being deleted. You can query the multicast source but cannot perform other operations.</description></item>
        /// <item><description>If a multicast source cannot be found, the multicast source is deleted.
        /// Before you call DeregisterTransitRouterMulticastGroupSources, make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast source is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public DeregisterTransitRouterMulticastGroupSourcesResponse DeregisterTransitRouterMulticastGroupSources(DeregisterTransitRouterMulticastGroupSourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeregisterTransitRouterMulticastGroupSourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a multicast source from a multicast group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>DeregisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request a sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.</para>
        /// <list type="bullet">
        /// <item><description>If a multicast source is in the <b>Deregistering</b> state, the multicast source is being deleted. You can query the multicast source but cannot perform other operations.</description></item>
        /// <item><description>If a multicast source cannot be found, the multicast source is deleted.
        /// Before you call DeregisterTransitRouterMulticastGroupSources, make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the multicast source is not deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeregisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// DeregisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public async Task<DeregisterTransitRouterMulticastGroupSourcesResponse> DeregisterTransitRouterMulticastGroupSourcesAsync(DeregisterTransitRouterMulticastGroupSourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeregisterTransitRouterMulticastGroupSourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a network instance, such as a virtual private cloud (VPC), a virtual border router, or a Cloud Connect Network (CCN) instance, that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstanceAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstanceAttributeResponse
        /// </returns>
        public DescribeCenAttachedChildInstanceAttributeResponse DescribeCenAttachedChildInstanceAttributeWithOptions(DescribeCenAttachedChildInstanceAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenAttachedChildInstanceAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenAttachedChildInstanceAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a network instance, such as a virtual private cloud (VPC), a virtual border router, or a Cloud Connect Network (CCN) instance, that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstanceAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstanceAttributeResponse
        /// </returns>
        public async Task<DescribeCenAttachedChildInstanceAttributeResponse> DescribeCenAttachedChildInstanceAttributeWithOptionsAsync(DescribeCenAttachedChildInstanceAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenAttachedChildInstanceAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenAttachedChildInstanceAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a network instance, such as a virtual private cloud (VPC), a virtual border router, or a Cloud Connect Network (CCN) instance, that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstanceAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstanceAttributeResponse
        /// </returns>
        public DescribeCenAttachedChildInstanceAttributeResponse DescribeCenAttachedChildInstanceAttribute(DescribeCenAttachedChildInstanceAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenAttachedChildInstanceAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a network instance, such as a virtual private cloud (VPC), a virtual border router, or a Cloud Connect Network (CCN) instance, that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstanceAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstanceAttributeResponse
        /// </returns>
        public async Task<DescribeCenAttachedChildInstanceAttributeResponse> DescribeCenAttachedChildInstanceAttributeAsync(DescribeCenAttachedChildInstanceAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenAttachedChildInstanceAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances that are attached to a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use one of the following methods to query the information about the network instances that are attached to a CEN instance:</para>
        /// <list type="bullet">
        /// <item><description>You can query all the network instances that are attached to a CEN instance by setting the <c>CenId</c> parameter.</description></item>
        /// <item><description>You can query the network instances that are attached to a CEN instance in a specified region by setting the <c>CenId</c> and <c>ChildInstanceRegionId</c> parameters.</description></item>
        /// <item><description>You can query a specified type of network instances that are attached to a CEN instance by setting the <c>CenId</c> and <c>ChildInstanceType</c> parameters.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstancesResponse
        /// </returns>
        public DescribeCenAttachedChildInstancesResponse DescribeCenAttachedChildInstancesWithOptions(DescribeCenAttachedChildInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenAttachedChildInstances",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenAttachedChildInstancesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances that are attached to a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use one of the following methods to query the information about the network instances that are attached to a CEN instance:</para>
        /// <list type="bullet">
        /// <item><description>You can query all the network instances that are attached to a CEN instance by setting the <c>CenId</c> parameter.</description></item>
        /// <item><description>You can query the network instances that are attached to a CEN instance in a specified region by setting the <c>CenId</c> and <c>ChildInstanceRegionId</c> parameters.</description></item>
        /// <item><description>You can query a specified type of network instances that are attached to a CEN instance by setting the <c>CenId</c> and <c>ChildInstanceType</c> parameters.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstancesResponse
        /// </returns>
        public async Task<DescribeCenAttachedChildInstancesResponse> DescribeCenAttachedChildInstancesWithOptionsAsync(DescribeCenAttachedChildInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenAttachedChildInstances",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenAttachedChildInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances that are attached to a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use one of the following methods to query the information about the network instances that are attached to a CEN instance:</para>
        /// <list type="bullet">
        /// <item><description>You can query all the network instances that are attached to a CEN instance by setting the <c>CenId</c> parameter.</description></item>
        /// <item><description>You can query the network instances that are attached to a CEN instance in a specified region by setting the <c>CenId</c> and <c>ChildInstanceRegionId</c> parameters.</description></item>
        /// <item><description>You can query a specified type of network instances that are attached to a CEN instance by setting the <c>CenId</c> and <c>ChildInstanceType</c> parameters.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstancesResponse
        /// </returns>
        public DescribeCenAttachedChildInstancesResponse DescribeCenAttachedChildInstances(DescribeCenAttachedChildInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenAttachedChildInstancesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances that are attached to a CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use one of the following methods to query the information about the network instances that are attached to a CEN instance:</para>
        /// <list type="bullet">
        /// <item><description>You can query all the network instances that are attached to a CEN instance by setting the <c>CenId</c> parameter.</description></item>
        /// <item><description>You can query the network instances that are attached to a CEN instance in a specified region by setting the <c>CenId</c> and <c>ChildInstanceRegionId</c> parameters.</description></item>
        /// <item><description>You can query a specified type of network instances that are attached to a CEN instance by setting the <c>CenId</c> and <c>ChildInstanceType</c> parameters.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeCenAttachedChildInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenAttachedChildInstancesResponse
        /// </returns>
        public async Task<DescribeCenAttachedChildInstancesResponse> DescribeCenAttachedChildInstancesAsync(DescribeCenAttachedChildInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenAttachedChildInstancesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about bandwidth plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenBandwidthPackagesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenBandwidthPackagesResponse
        /// </returns>
        public DescribeCenBandwidthPackagesResponse DescribeCenBandwidthPackagesWithOptions(DescribeCenBandwidthPackagesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeReservationData))
            {
                query["IncludeReservationData"] = request.IncludeReservationData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsOrKey))
            {
                query["IsOrKey"] = request.IsOrKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenBandwidthPackages",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenBandwidthPackagesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about bandwidth plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenBandwidthPackagesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenBandwidthPackagesResponse
        /// </returns>
        public async Task<DescribeCenBandwidthPackagesResponse> DescribeCenBandwidthPackagesWithOptionsAsync(DescribeCenBandwidthPackagesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeReservationData))
            {
                query["IncludeReservationData"] = request.IncludeReservationData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsOrKey))
            {
                query["IsOrKey"] = request.IsOrKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenBandwidthPackages",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenBandwidthPackagesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about bandwidth plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenBandwidthPackagesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenBandwidthPackagesResponse
        /// </returns>
        public DescribeCenBandwidthPackagesResponse DescribeCenBandwidthPackages(DescribeCenBandwidthPackagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenBandwidthPackagesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about bandwidth plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenBandwidthPackagesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenBandwidthPackagesResponse
        /// </returns>
        public async Task<DescribeCenBandwidthPackagesResponse> DescribeCenBandwidthPackagesAsync(DescribeCenBandwidthPackagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenBandwidthPackagesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the routes of a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenChildInstanceRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenChildInstanceRouteEntriesResponse
        /// </returns>
        public DescribeCenChildInstanceRouteEntriesResponse DescribeCenChildInstanceRouteEntriesWithOptions(DescribeCenChildInstanceRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenChildInstanceRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenChildInstanceRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the routes of a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenChildInstanceRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenChildInstanceRouteEntriesResponse
        /// </returns>
        public async Task<DescribeCenChildInstanceRouteEntriesResponse> DescribeCenChildInstanceRouteEntriesWithOptionsAsync(DescribeCenChildInstanceRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenChildInstanceRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenChildInstanceRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the routes of a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenChildInstanceRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenChildInstanceRouteEntriesResponse
        /// </returns>
        public DescribeCenChildInstanceRouteEntriesResponse DescribeCenChildInstanceRouteEntries(DescribeCenChildInstanceRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenChildInstanceRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the routes of a network instance that is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenChildInstanceRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenChildInstanceRouteEntriesResponse
        /// </returns>
        public async Task<DescribeCenChildInstanceRouteEntriesResponse> DescribeCenChildInstanceRouteEntriesAsync(DescribeCenChildInstanceRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenChildInstanceRouteEntriesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpanRemainingBandwidthRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpanRemainingBandwidthResponse
        /// </returns>
        public DescribeCenGeographicSpanRemainingBandwidthResponse DescribeCenGeographicSpanRemainingBandwidthWithOptions(DescribeCenGeographicSpanRemainingBandwidthRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionAId))
            {
                query["GeographicRegionAId"] = request.GeographicRegionAId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionBId))
            {
                query["GeographicRegionBId"] = request.GeographicRegionBId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenGeographicSpanRemainingBandwidth",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenGeographicSpanRemainingBandwidthResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpanRemainingBandwidthRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpanRemainingBandwidthResponse
        /// </returns>
        public async Task<DescribeCenGeographicSpanRemainingBandwidthResponse> DescribeCenGeographicSpanRemainingBandwidthWithOptionsAsync(DescribeCenGeographicSpanRemainingBandwidthRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionAId))
            {
                query["GeographicRegionAId"] = request.GeographicRegionAId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionBId))
            {
                query["GeographicRegionBId"] = request.GeographicRegionBId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenGeographicSpanRemainingBandwidth",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenGeographicSpanRemainingBandwidthResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpanRemainingBandwidthRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpanRemainingBandwidthResponse
        /// </returns>
        public DescribeCenGeographicSpanRemainingBandwidthResponse DescribeCenGeographicSpanRemainingBandwidth(DescribeCenGeographicSpanRemainingBandwidthRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenGeographicSpanRemainingBandwidthWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpanRemainingBandwidthRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpanRemainingBandwidthResponse
        /// </returns>
        public async Task<DescribeCenGeographicSpanRemainingBandwidthResponse> DescribeCenGeographicSpanRemainingBandwidthAsync(DescribeCenGeographicSpanRemainingBandwidthRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenGeographicSpanRemainingBandwidthWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the areas that a Cloud Enterprise Network (CEN) instance can connect.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpansRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpansResponse
        /// </returns>
        public DescribeCenGeographicSpansResponse DescribeCenGeographicSpansWithOptions(DescribeCenGeographicSpansRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicSpanId))
            {
                query["GeographicSpanId"] = request.GeographicSpanId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenGeographicSpans",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenGeographicSpansResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the areas that a Cloud Enterprise Network (CEN) instance can connect.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpansRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpansResponse
        /// </returns>
        public async Task<DescribeCenGeographicSpansResponse> DescribeCenGeographicSpansWithOptionsAsync(DescribeCenGeographicSpansRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicSpanId))
            {
                query["GeographicSpanId"] = request.GeographicSpanId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenGeographicSpans",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenGeographicSpansResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the areas that a Cloud Enterprise Network (CEN) instance can connect.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpansRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpansResponse
        /// </returns>
        public DescribeCenGeographicSpansResponse DescribeCenGeographicSpans(DescribeCenGeographicSpansRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenGeographicSpansWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the areas that a Cloud Enterprise Network (CEN) instance can connect.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenGeographicSpansRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenGeographicSpansResponse
        /// </returns>
        public async Task<DescribeCenGeographicSpansResponse> DescribeCenGeographicSpansAsync(DescribeCenGeographicSpansRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenGeographicSpansWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the bandwidth of connections between regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenInterRegionBandwidthLimitsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenInterRegionBandwidthLimitsResponse
        /// </returns>
        public DescribeCenInterRegionBandwidthLimitsResponse DescribeCenInterRegionBandwidthLimitsWithOptions(DescribeCenInterRegionBandwidthLimitsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrRegionId))
            {
                query["TrRegionId"] = request.TrRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenInterRegionBandwidthLimits",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenInterRegionBandwidthLimitsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the bandwidth of connections between regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenInterRegionBandwidthLimitsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenInterRegionBandwidthLimitsResponse
        /// </returns>
        public async Task<DescribeCenInterRegionBandwidthLimitsResponse> DescribeCenInterRegionBandwidthLimitsWithOptionsAsync(DescribeCenInterRegionBandwidthLimitsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrRegionId))
            {
                query["TrRegionId"] = request.TrRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenInterRegionBandwidthLimits",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenInterRegionBandwidthLimitsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the bandwidth of connections between regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenInterRegionBandwidthLimitsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenInterRegionBandwidthLimitsResponse
        /// </returns>
        public DescribeCenInterRegionBandwidthLimitsResponse DescribeCenInterRegionBandwidthLimits(DescribeCenInterRegionBandwidthLimitsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenInterRegionBandwidthLimitsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the bandwidth of connections between regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenInterRegionBandwidthLimitsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenInterRegionBandwidthLimitsResponse
        /// </returns>
        public async Task<DescribeCenInterRegionBandwidthLimitsResponse> DescribeCenInterRegionBandwidthLimitsAsync(DescribeCenInterRegionBandwidthLimitsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenInterRegionBandwidthLimitsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the connections to PrivateZone.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenPrivateZoneRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenPrivateZoneRoutesResponse
        /// </returns>
        public DescribeCenPrivateZoneRoutesResponse DescribeCenPrivateZoneRoutesWithOptions(DescribeCenPrivateZoneRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenPrivateZoneRoutes",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenPrivateZoneRoutesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the connections to PrivateZone.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenPrivateZoneRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenPrivateZoneRoutesResponse
        /// </returns>
        public async Task<DescribeCenPrivateZoneRoutesResponse> DescribeCenPrivateZoneRoutesWithOptionsAsync(DescribeCenPrivateZoneRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenPrivateZoneRoutes",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenPrivateZoneRoutesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the connections to PrivateZone.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenPrivateZoneRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenPrivateZoneRoutesResponse
        /// </returns>
        public DescribeCenPrivateZoneRoutesResponse DescribeCenPrivateZoneRoutes(DescribeCenPrivateZoneRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenPrivateZoneRoutesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the connections to PrivateZone.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenPrivateZoneRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenPrivateZoneRoutesResponse
        /// </returns>
        public async Task<DescribeCenPrivateZoneRoutesResponse> DescribeCenPrivateZoneRoutesAsync(DescribeCenPrivateZoneRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenPrivateZoneRoutesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in a region for a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRegionDomainRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRegionDomainRouteEntriesResponse
        /// </returns>
        public DescribeCenRegionDomainRouteEntriesResponse DescribeCenRegionDomainRouteEntriesWithOptions(DescribeCenRegionDomainRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenRegionDomainRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenRegionDomainRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in a region for a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRegionDomainRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRegionDomainRouteEntriesResponse
        /// </returns>
        public async Task<DescribeCenRegionDomainRouteEntriesResponse> DescribeCenRegionDomainRouteEntriesWithOptionsAsync(DescribeCenRegionDomainRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenRegionDomainRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenRegionDomainRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in a region for a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRegionDomainRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRegionDomainRouteEntriesResponse
        /// </returns>
        public DescribeCenRegionDomainRouteEntriesResponse DescribeCenRegionDomainRouteEntries(DescribeCenRegionDomainRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenRegionDomainRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in a region for a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRegionDomainRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRegionDomainRouteEntriesResponse
        /// </returns>
        public async Task<DescribeCenRegionDomainRouteEntriesResponse> DescribeCenRegionDomainRouteEntriesAsync(DescribeCenRegionDomainRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenRegionDomainRouteEntriesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routing policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRouteMapsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRouteMapsResponse
        /// </returns>
        public DescribeCenRouteMapsResponse DescribeCenRouteMapsWithOptions(DescribeCenRouteMapsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransmitDirection))
            {
                query["TransmitDirection"] = request.TransmitDirection;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenRouteMaps",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenRouteMapsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routing policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRouteMapsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRouteMapsResponse
        /// </returns>
        public async Task<DescribeCenRouteMapsResponse> DescribeCenRouteMapsWithOptionsAsync(DescribeCenRouteMapsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransmitDirection))
            {
                query["TransmitDirection"] = request.TransmitDirection;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenRouteMaps",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenRouteMapsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routing policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRouteMapsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRouteMapsResponse
        /// </returns>
        public DescribeCenRouteMapsResponse DescribeCenRouteMaps(DescribeCenRouteMapsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenRouteMapsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routing policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenRouteMapsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenRouteMapsResponse
        /// </returns>
        public async Task<DescribeCenRouteMapsResponse> DescribeCenRouteMapsAsync(DescribeCenRouteMapsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenRouteMapsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the health check configurations of virtual border routers (VBRs) in a region.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenVbrHealthCheckResponse
        /// </returns>
        public DescribeCenVbrHealthCheckResponse DescribeCenVbrHealthCheckWithOptions(DescribeCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenVbrHealthCheckResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the health check configurations of virtual border routers (VBRs) in a region.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenVbrHealthCheckResponse
        /// </returns>
        public async Task<DescribeCenVbrHealthCheckResponse> DescribeCenVbrHealthCheckWithOptionsAsync(DescribeCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCenVbrHealthCheckResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the health check configurations of virtual border routers (VBRs) in a region.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenVbrHealthCheckResponse
        /// </returns>
        public DescribeCenVbrHealthCheckResponse DescribeCenVbrHealthCheck(DescribeCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCenVbrHealthCheckWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the health check configurations of virtual border routers (VBRs) in a region.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCenVbrHealthCheckResponse
        /// </returns>
        public async Task<DescribeCenVbrHealthCheckResponse> DescribeCenVbrHealthCheckAsync(DescribeCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCenVbrHealthCheckWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about your Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCensRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCensResponse
        /// </returns>
        public DescribeCensResponse DescribeCensWithOptions(DescribeCensRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCens",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCensResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about your Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCensRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCensResponse
        /// </returns>
        public async Task<DescribeCensResponse> DescribeCensWithOptionsAsync(DescribeCensRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCens",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCensResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about your Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCensRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCensResponse
        /// </returns>
        public DescribeCensResponse DescribeCens(DescribeCensRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCensWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about your Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCensRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCensResponse
        /// </returns>
        public async Task<DescribeCensResponse> DescribeCensAsync(DescribeCensRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCensWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the regions in which you can attach network instances to Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The regions that support CEN vary based on the network instance type. To query the regions where you can attach a specified type of network instance to CEN, set the <c>ProductType</c> parameter. If you do not set the <c>ProductType</c> parameter, the system queries all regions in which you can attach network instances to CEN, regardless of the network instance type.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeChildInstanceRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeChildInstanceRegionsResponse
        /// </returns>
        public DescribeChildInstanceRegionsResponse DescribeChildInstanceRegionsWithOptions(DescribeChildInstanceRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AcceptLanguage))
            {
                query["AcceptLanguage"] = request.AcceptLanguage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeChildInstanceRegions",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeChildInstanceRegionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the regions in which you can attach network instances to Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The regions that support CEN vary based on the network instance type. To query the regions where you can attach a specified type of network instance to CEN, set the <c>ProductType</c> parameter. If you do not set the <c>ProductType</c> parameter, the system queries all regions in which you can attach network instances to CEN, regardless of the network instance type.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeChildInstanceRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeChildInstanceRegionsResponse
        /// </returns>
        public async Task<DescribeChildInstanceRegionsResponse> DescribeChildInstanceRegionsWithOptionsAsync(DescribeChildInstanceRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AcceptLanguage))
            {
                query["AcceptLanguage"] = request.AcceptLanguage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeChildInstanceRegions",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeChildInstanceRegionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the regions in which you can attach network instances to Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The regions that support CEN vary based on the network instance type. To query the regions where you can attach a specified type of network instance to CEN, set the <c>ProductType</c> parameter. If you do not set the <c>ProductType</c> parameter, the system queries all regions in which you can attach network instances to CEN, regardless of the network instance type.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeChildInstanceRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeChildInstanceRegionsResponse
        /// </returns>
        public DescribeChildInstanceRegionsResponse DescribeChildInstanceRegions(DescribeChildInstanceRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeChildInstanceRegionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the regions in which you can attach network instances to Cloud Enterprise Network (CEN) instances.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The regions that support CEN vary based on the network instance type. To query the regions where you can attach a specified type of network instance to CEN, set the <c>ProductType</c> parameter. If you do not set the <c>ProductType</c> parameter, the system queries all regions in which you can attach network instances to CEN, regardless of the network instance type.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeChildInstanceRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeChildInstanceRegionsResponse
        /// </returns>
        public async Task<DescribeChildInstanceRegionsResponse> DescribeChildInstanceRegionsAsync(DescribeChildInstanceRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeChildInstanceRegionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries flow logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeFlowlogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeFlowlogsResponse
        /// </returns>
        public DescribeFlowlogsResponse DescribeFlowlogsWithOptions(DescribeFlowlogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStoreName))
            {
                query["LogStoreName"] = request.LogStoreName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectName))
            {
                query["ProjectName"] = request.ProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFlowlogs",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFlowlogsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries flow logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeFlowlogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeFlowlogsResponse
        /// </returns>
        public async Task<DescribeFlowlogsResponse> DescribeFlowlogsWithOptionsAsync(DescribeFlowlogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStoreName))
            {
                query["LogStoreName"] = request.LogStoreName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectName))
            {
                query["ProjectName"] = request.ProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFlowlogs",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFlowlogsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries flow logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeFlowlogsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeFlowlogsResponse
        /// </returns>
        public DescribeFlowlogsResponse DescribeFlowlogs(DescribeFlowlogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeFlowlogsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries flow logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeFlowlogsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeFlowlogsResponse
        /// </returns>
        public async Task<DescribeFlowlogsResponse> DescribeFlowlogsAsync(DescribeFlowlogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeFlowlogsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询指定区域内的地域信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGeographicRegionMembershipRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGeographicRegionMembershipResponse
        /// </returns>
        public DescribeGeographicRegionMembershipResponse DescribeGeographicRegionMembershipWithOptions(DescribeGeographicRegionMembershipRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionId))
            {
                query["GeographicRegionId"] = request.GeographicRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGeographicRegionMembership",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGeographicRegionMembershipResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询指定区域内的地域信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGeographicRegionMembershipRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGeographicRegionMembershipResponse
        /// </returns>
        public async Task<DescribeGeographicRegionMembershipResponse> DescribeGeographicRegionMembershipWithOptionsAsync(DescribeGeographicRegionMembershipRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GeographicRegionId))
            {
                query["GeographicRegionId"] = request.GeographicRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGeographicRegionMembership",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGeographicRegionMembershipResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询指定区域内的地域信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGeographicRegionMembershipRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGeographicRegionMembershipResponse
        /// </returns>
        public DescribeGeographicRegionMembershipResponse DescribeGeographicRegionMembership(DescribeGeographicRegionMembershipRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGeographicRegionMembershipWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询指定区域内的地域信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGeographicRegionMembershipRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGeographicRegionMembershipResponse
        /// </returns>
        public async Task<DescribeGeographicRegionMembershipResponse> DescribeGeographicRegionMembershipAsync(DescribeGeographicRegionMembershipRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGeographicRegionMembershipWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances of other Alibaba Cloud accounts that have granted permissions to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DescribeGrantRulesToCen</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the network instances are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToCenResponse
        /// </returns>
        public DescribeGrantRulesToCenResponse DescribeGrantRulesToCenWithOptions(DescribeGrantRulesToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnabledIpv6))
            {
                query["EnabledIpv6"] = request.EnabledIpv6;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGrantRulesToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGrantRulesToCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances of other Alibaba Cloud accounts that have granted permissions to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DescribeGrantRulesToCen</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the network instances are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToCenResponse
        /// </returns>
        public async Task<DescribeGrantRulesToCenResponse> DescribeGrantRulesToCenWithOptionsAsync(DescribeGrantRulesToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnabledIpv6))
            {
                query["EnabledIpv6"] = request.EnabledIpv6;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGrantRulesToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGrantRulesToCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances of other Alibaba Cloud accounts that have granted permissions to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DescribeGrantRulesToCen</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the network instances are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToCenResponse
        /// </returns>
        public DescribeGrantRulesToCenResponse DescribeGrantRulesToCen(DescribeGrantRulesToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGrantRulesToCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the network instances of other Alibaba Cloud accounts that have granted permissions to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>DescribeGrantRulesToCen</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the network instances are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToCenResponse
        /// </returns>
        public async Task<DescribeGrantRulesToCenResponse> DescribeGrantRulesToCenAsync(DescribeGrantRulesToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGrantRulesToCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about the permissions that the Alibaba Cloud account of a network instance granted to a Cloud Enterprise Network (CEN) instance in a different Alibaba Cloud account, the ID of the CEN instance, and the Alibaba Cloud account that pays the fees of the network instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToResourceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToResourceResponse
        /// </returns>
        public DescribeGrantRulesToResourceResponse DescribeGrantRulesToResourceWithOptions(DescribeGrantRulesToResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGrantRulesToResource",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGrantRulesToResourceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about the permissions that the Alibaba Cloud account of a network instance granted to a Cloud Enterprise Network (CEN) instance in a different Alibaba Cloud account, the ID of the CEN instance, and the Alibaba Cloud account that pays the fees of the network instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToResourceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToResourceResponse
        /// </returns>
        public async Task<DescribeGrantRulesToResourceResponse> DescribeGrantRulesToResourceWithOptionsAsync(DescribeGrantRulesToResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductType))
            {
                query["ProductType"] = request.ProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGrantRulesToResource",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGrantRulesToResourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about the permissions that the Alibaba Cloud account of a network instance granted to a Cloud Enterprise Network (CEN) instance in a different Alibaba Cloud account, the ID of the CEN instance, and the Alibaba Cloud account that pays the fees of the network instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToResourceRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToResourceResponse
        /// </returns>
        public DescribeGrantRulesToResourceResponse DescribeGrantRulesToResource(DescribeGrantRulesToResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGrantRulesToResourceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about the permissions that the Alibaba Cloud account of a network instance granted to a Cloud Enterprise Network (CEN) instance in a different Alibaba Cloud account, the ID of the CEN instance, and the Alibaba Cloud account that pays the fees of the network instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeGrantRulesToResourceRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeGrantRulesToResourceResponse
        /// </returns>
        public async Task<DescribeGrantRulesToResourceResponse> DescribeGrantRulesToResourceAsync(DescribeGrantRulesToResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGrantRulesToResourceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether the routes of virtual private clouds (VPCs) and virtual border routers (VBRs) are advertised to the Cloud Enterprise Network (CEN) instance to which the VCPs and VBRs are attached.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePublishedRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePublishedRouteEntriesResponse
        /// </returns>
        public DescribePublishedRouteEntriesResponse DescribePublishedRouteEntriesWithOptions(DescribePublishedRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePublishedRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePublishedRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether the routes of virtual private clouds (VPCs) and virtual border routers (VBRs) are advertised to the Cloud Enterprise Network (CEN) instance to which the VCPs and VBRs are attached.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePublishedRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePublishedRouteEntriesResponse
        /// </returns>
        public async Task<DescribePublishedRouteEntriesResponse> DescribePublishedRouteEntriesWithOptionsAsync(DescribePublishedRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePublishedRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePublishedRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether the routes of virtual private clouds (VPCs) and virtual border routers (VBRs) are advertised to the Cloud Enterprise Network (CEN) instance to which the VCPs and VBRs are attached.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePublishedRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePublishedRouteEntriesResponse
        /// </returns>
        public DescribePublishedRouteEntriesResponse DescribePublishedRouteEntries(DescribePublishedRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePublishedRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether the routes of virtual private clouds (VPCs) and virtual border routers (VBRs) are advertised to the Cloud Enterprise Network (CEN) instance to which the VCPs and VBRs are attached.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePublishedRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePublishedRouteEntriesResponse
        /// </returns>
        public async Task<DescribePublishedRouteEntriesResponse> DescribePublishedRouteEntriesAsync(DescribePublishedRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePublishedRouteEntriesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries overlapping routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteConflictRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteConflictResponse
        /// </returns>
        public DescribeRouteConflictResponse DescribeRouteConflictWithOptions(DescribeRouteConflictRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRouteConflict",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRouteConflictResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries overlapping routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteConflictRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteConflictResponse
        /// </returns>
        public async Task<DescribeRouteConflictResponse> DescribeRouteConflictWithOptionsAsync(DescribeRouteConflictRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRouteConflict",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRouteConflictResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries overlapping routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteConflictRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteConflictResponse
        /// </returns>
        public DescribeRouteConflictResponse DescribeRouteConflict(DescribeRouteConflictRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRouteConflictWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries overlapping routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteConflictRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteConflictResponse
        /// </returns>
        public async Task<DescribeRouteConflictResponse> DescribeRouteConflictAsync(DescribeRouteConflictRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRouteConflictWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of cloud services, such as the cloud service status and the ID of the associated VPC.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteServicesInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteServicesInCenResponse
        /// </returns>
        public DescribeRouteServicesInCenResponse DescribeRouteServicesInCenWithOptions(DescribeRouteServicesInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRouteServicesInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRouteServicesInCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of cloud services, such as the cloud service status and the ID of the associated VPC.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteServicesInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteServicesInCenResponse
        /// </returns>
        public async Task<DescribeRouteServicesInCenResponse> DescribeRouteServicesInCenWithOptionsAsync(DescribeRouteServicesInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRouteServicesInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRouteServicesInCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of cloud services, such as the cloud service status and the ID of the associated VPC.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteServicesInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteServicesInCenResponse
        /// </returns>
        public DescribeRouteServicesInCenResponse DescribeRouteServicesInCen(DescribeRouteServicesInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRouteServicesInCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of cloud services, such as the cloud service status and the ID of the associated VPC.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeRouteServicesInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRouteServicesInCenResponse
        /// </returns>
        public async Task<DescribeRouteServicesInCenResponse> DescribeRouteServicesInCenAsync(DescribeRouteServicesInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRouteServicesInCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the aggregate routes on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>TransitRouteTableId</b> and <b>TransitRouteTableAggregationCidr</b> parameters to specify the aggregate routes that you want to query. If you set only the <b>TransitRouteTableId</b> parameter, all aggregate routes in the specified route table are queried.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationResponse
        /// </returns>
        public DescribeTransitRouteTableAggregationResponse DescribeTransitRouteTableAggregationWithOptions(DescribeTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTransitRouteTableAggregationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the aggregate routes on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>TransitRouteTableId</b> and <b>TransitRouteTableAggregationCidr</b> parameters to specify the aggregate routes that you want to query. If you set only the <b>TransitRouteTableId</b> parameter, all aggregate routes in the specified route table are queried.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<DescribeTransitRouteTableAggregationResponse> DescribeTransitRouteTableAggregationWithOptionsAsync(DescribeTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTransitRouteTableAggregationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the aggregate routes on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>TransitRouteTableId</b> and <b>TransitRouteTableAggregationCidr</b> parameters to specify the aggregate routes that you want to query. If you set only the <b>TransitRouteTableId</b> parameter, all aggregate routes in the specified route table are queried.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationResponse
        /// </returns>
        public DescribeTransitRouteTableAggregationResponse DescribeTransitRouteTableAggregation(DescribeTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTransitRouteTableAggregationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the aggregate routes on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>TransitRouteTableId</b> and <b>TransitRouteTableAggregationCidr</b> parameters to specify the aggregate routes that you want to query. If you set only the <b>TransitRouteTableId</b> parameter, all aggregate routes in the specified route table are queried.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<DescribeTransitRouteTableAggregationResponse> DescribeTransitRouteTableAggregationAsync(DescribeTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTransitRouteTableAggregationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationDetailRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationDetailResponse
        /// </returns>
        public DescribeTransitRouteTableAggregationDetailResponse DescribeTransitRouteTableAggregationDetailWithOptions(DescribeTransitRouteTableAggregationDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTransitRouteTableAggregationDetail",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTransitRouteTableAggregationDetailResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationDetailRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationDetailResponse
        /// </returns>
        public async Task<DescribeTransitRouteTableAggregationDetailResponse> DescribeTransitRouteTableAggregationDetailWithOptionsAsync(DescribeTransitRouteTableAggregationDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTransitRouteTableAggregationDetail",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTransitRouteTableAggregationDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationDetailRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationDetailResponse
        /// </returns>
        public DescribeTransitRouteTableAggregationDetailResponse DescribeTransitRouteTableAggregationDetail(DescribeTransitRouteTableAggregationDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTransitRouteTableAggregationDetailWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeTransitRouteTableAggregationDetailRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeTransitRouteTableAggregationDetailResponse
        /// </returns>
        public async Task<DescribeTransitRouteTableAggregationDetailResponse> DescribeTransitRouteTableAggregationDetailAsync(DescribeTransitRouteTableAggregationDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTransitRouteTableAggregationDetailWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Detaches a network instance from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DetachCenChildInstanceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DetachCenChildInstanceResponse
        /// </returns>
        public DetachCenChildInstanceResponse DetachCenChildInstanceWithOptions(DetachCenChildInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachCenChildInstance",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachCenChildInstanceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Detaches a network instance from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DetachCenChildInstanceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DetachCenChildInstanceResponse
        /// </returns>
        public async Task<DetachCenChildInstanceResponse> DetachCenChildInstanceWithOptionsAsync(DetachCenChildInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceOwnerId))
            {
                query["ChildInstanceOwnerId"] = request.ChildInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachCenChildInstance",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachCenChildInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Detaches a network instance from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DetachCenChildInstanceRequest
        /// </param>
        /// 
        /// <returns>
        /// DetachCenChildInstanceResponse
        /// </returns>
        public DetachCenChildInstanceResponse DetachCenChildInstance(DetachCenChildInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DetachCenChildInstanceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Detaches a network instance from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DetachCenChildInstanceRequest
        /// </param>
        /// 
        /// <returns>
        /// DetachCenChildInstanceResponse
        /// </returns>
        public async Task<DetachCenChildInstanceResponse> DetachCenChildInstanceAsync(DetachCenChildInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DetachCenChildInstanceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables the health check feature for a virtual border router (VBR).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableCenVbrHealthCheck</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If the health check configurations cannot be found, the health check configurations are deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableCenVbrHealthCheckResponse
        /// </returns>
        public DisableCenVbrHealthCheckResponse DisableCenVbrHealthCheckWithOptions(DisableCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCenVbrHealthCheckResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables the health check feature for a virtual border router (VBR).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableCenVbrHealthCheck</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If the health check configurations cannot be found, the health check configurations are deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableCenVbrHealthCheckResponse
        /// </returns>
        public async Task<DisableCenVbrHealthCheckResponse> DisableCenVbrHealthCheckWithOptionsAsync(DisableCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCenVbrHealthCheckResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables the health check feature for a virtual border router (VBR).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableCenVbrHealthCheck</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If the health check configurations cannot be found, the health check configurations are deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableCenVbrHealthCheckResponse
        /// </returns>
        public DisableCenVbrHealthCheckResponse DisableCenVbrHealthCheck(DisableCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableCenVbrHealthCheckWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables the health check feature for a virtual border router (VBR).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableCenVbrHealthCheck</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If the health check configurations cannot be found, the health check configurations are deleted.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableCenVbrHealthCheckResponse
        /// </returns>
        public async Task<DisableCenVbrHealthCheckResponse> DisableCenVbrHealthCheckAsync(DisableCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableCenVbrHealthCheckWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableTransitRouterRouteTablePropagation</em>* is an synchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the status of a route learning correlation.</para>
        /// <list type="bullet">
        /// <item><description>If a route learning correlation is in the <b>Disabling</b> state, the route learning correlation is being deleted. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description>If a route learning correlation cannot be found, the route learning correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public DisableTransitRouterRouteTablePropagationResponse DisableTransitRouterRouteTablePropagationWithOptions(DisableTransitRouterRouteTablePropagationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableTransitRouterRouteTablePropagation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableTransitRouterRouteTablePropagationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableTransitRouterRouteTablePropagation</em>* is an synchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the status of a route learning correlation.</para>
        /// <list type="bullet">
        /// <item><description>If a route learning correlation is in the <b>Disabling</b> state, the route learning correlation is being deleted. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description>If a route learning correlation cannot be found, the route learning correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public async Task<DisableTransitRouterRouteTablePropagationResponse> DisableTransitRouterRouteTablePropagationWithOptionsAsync(DisableTransitRouterRouteTablePropagationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableTransitRouterRouteTablePropagation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableTransitRouterRouteTablePropagationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableTransitRouterRouteTablePropagation</em>* is an synchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the status of a route learning correlation.</para>
        /// <list type="bullet">
        /// <item><description>If a route learning correlation is in the <b>Disabling</b> state, the route learning correlation is being deleted. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description>If a route learning correlation cannot be found, the route learning correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public DisableTransitRouterRouteTablePropagationResponse DisableTransitRouterRouteTablePropagation(DisableTransitRouterRouteTablePropagationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableTransitRouterRouteTablePropagationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DisableTransitRouterRouteTablePropagation</em>* is an synchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the status of a route learning correlation.</para>
        /// <list type="bullet">
        /// <item><description>If a route learning correlation is in the <b>Disabling</b> state, the route learning correlation is being deleted. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description>If a route learning correlation cannot be found, the route learning correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public async Task<DisableTransitRouterRouteTablePropagationResponse> DisableTransitRouterRouteTablePropagationAsync(DisableTransitRouterRouteTablePropagationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableTransitRouterRouteTablePropagationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a vSwitch from a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a vSwitch from a multicast domain, make sure that the vSwitch does not contain a multicast source or a multicast member. For more information about how to remove a multicast source or member from a vSwitch, see <a href="https://help.aliyun.com/document_detail/468416.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/468409.html">DeregisterTransitRouterMulticastGroupMembers</a>.</para>
        /// <list type="bullet">
        /// <item><description>If a request parameter is invalid, the system returns a request ID but does not disassociate the vSwitch from the multicast domain.</description></item>
        /// <item><description><b>DisassociateTransitRouterMulticastDomain</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterMulticastDomainAssociations</b> operation to query whether a vSwitch is disassociated from the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is <b>Dissociating</b>, it indicates that the vSwitch is being disassociated from the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the vSwitch cannot be found, the vSwitch is disassociated from the multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisassociateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisassociateTransitRouterMulticastDomainResponse
        /// </returns>
        public DisassociateTransitRouterMulticastDomainResponse DisassociateTransitRouterMulticastDomainWithOptions(DisassociateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisassociateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisassociateTransitRouterMulticastDomainResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a vSwitch from a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a vSwitch from a multicast domain, make sure that the vSwitch does not contain a multicast source or a multicast member. For more information about how to remove a multicast source or member from a vSwitch, see <a href="https://help.aliyun.com/document_detail/468416.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/468409.html">DeregisterTransitRouterMulticastGroupMembers</a>.</para>
        /// <list type="bullet">
        /// <item><description>If a request parameter is invalid, the system returns a request ID but does not disassociate the vSwitch from the multicast domain.</description></item>
        /// <item><description><b>DisassociateTransitRouterMulticastDomain</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterMulticastDomainAssociations</b> operation to query whether a vSwitch is disassociated from the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is <b>Dissociating</b>, it indicates that the vSwitch is being disassociated from the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the vSwitch cannot be found, the vSwitch is disassociated from the multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisassociateTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisassociateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<DisassociateTransitRouterMulticastDomainResponse> DisassociateTransitRouterMulticastDomainWithOptionsAsync(DisassociateTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisassociateTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisassociateTransitRouterMulticastDomainResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a vSwitch from a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a vSwitch from a multicast domain, make sure that the vSwitch does not contain a multicast source or a multicast member. For more information about how to remove a multicast source or member from a vSwitch, see <a href="https://help.aliyun.com/document_detail/468416.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/468409.html">DeregisterTransitRouterMulticastGroupMembers</a>.</para>
        /// <list type="bullet">
        /// <item><description>If a request parameter is invalid, the system returns a request ID but does not disassociate the vSwitch from the multicast domain.</description></item>
        /// <item><description><b>DisassociateTransitRouterMulticastDomain</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterMulticastDomainAssociations</b> operation to query whether a vSwitch is disassociated from the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is <b>Dissociating</b>, it indicates that the vSwitch is being disassociated from the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the vSwitch cannot be found, the vSwitch is disassociated from the multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisassociateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// DisassociateTransitRouterMulticastDomainResponse
        /// </returns>
        public DisassociateTransitRouterMulticastDomainResponse DisassociateTransitRouterMulticastDomain(DisassociateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisassociateTransitRouterMulticastDomainWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a vSwitch from a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you delete a vSwitch from a multicast domain, make sure that the vSwitch does not contain a multicast source or a multicast member. For more information about how to remove a multicast source or member from a vSwitch, see <a href="https://help.aliyun.com/document_detail/468416.html">DeregisterTransitRouterMulticastGroupSources</a> and <a href="https://help.aliyun.com/document_detail/468409.html">DeregisterTransitRouterMulticastGroupMembers</a>.</para>
        /// <list type="bullet">
        /// <item><description>If a request parameter is invalid, the system returns a request ID but does not disassociate the vSwitch from the multicast domain.</description></item>
        /// <item><description><b>DisassociateTransitRouterMulticastDomain</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterMulticastDomainAssociations</b> operation to query whether a vSwitch is disassociated from the specified multicast domain.<list type="bullet">
        /// <item><description>If the status is <b>Dissociating</b>, it indicates that the vSwitch is being disassociated from the specified multicast domain. You can query the vSwitch but cannot perform other operations on the vSwitch.</description></item>
        /// <item><description>If the vSwitch cannot be found, the vSwitch is disassociated from the multicast domain.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DisassociateTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// DisassociateTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<DisassociateTransitRouterMulticastDomainResponse> DisassociateTransitRouterMulticastDomainAsync(DisassociateTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisassociateTransitRouterMulticastDomainWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DissociateTransitRouterAttachmentFromRouteTable</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query an associated forwarding correlation between a network instance connection and a route table.</para>
        /// <list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Dissociating</b> state, the associated forwarding correlation is being deleted. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation cannot be found, the associated forwarding correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DissociateTransitRouterAttachmentFromRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DissociateTransitRouterAttachmentFromRouteTableResponse
        /// </returns>
        public DissociateTransitRouterAttachmentFromRouteTableResponse DissociateTransitRouterAttachmentFromRouteTableWithOptions(DissociateTransitRouterAttachmentFromRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DissociateTransitRouterAttachmentFromRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DissociateTransitRouterAttachmentFromRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DissociateTransitRouterAttachmentFromRouteTable</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query an associated forwarding correlation between a network instance connection and a route table.</para>
        /// <list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Dissociating</b> state, the associated forwarding correlation is being deleted. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation cannot be found, the associated forwarding correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DissociateTransitRouterAttachmentFromRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DissociateTransitRouterAttachmentFromRouteTableResponse
        /// </returns>
        public async Task<DissociateTransitRouterAttachmentFromRouteTableResponse> DissociateTransitRouterAttachmentFromRouteTableWithOptionsAsync(DissociateTransitRouterAttachmentFromRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DissociateTransitRouterAttachmentFromRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DissociateTransitRouterAttachmentFromRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DissociateTransitRouterAttachmentFromRouteTable</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query an associated forwarding correlation between a network instance connection and a route table.</para>
        /// <list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Dissociating</b> state, the associated forwarding correlation is being deleted. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation cannot be found, the associated forwarding correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DissociateTransitRouterAttachmentFromRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// DissociateTransitRouterAttachmentFromRouteTableResponse
        /// </returns>
        public DissociateTransitRouterAttachmentFromRouteTableResponse DissociateTransitRouterAttachmentFromRouteTable(DissociateTransitRouterAttachmentFromRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DissociateTransitRouterAttachmentFromRouteTableWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes an associated forwarding correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>DissociateTransitRouterAttachmentFromRouteTable</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTableAssociations</b> operation to query an associated forwarding correlation between a network instance connection and a route table.</para>
        /// <list type="bullet">
        /// <item><description>If an associated forwarding correlation is in the <b>Dissociating</b> state, the associated forwarding correlation is being deleted. You can query the associated forwarding correlation but cannot perform other operations.</description></item>
        /// <item><description>If an associated forwarding correlation cannot be found, the associated forwarding correlation is deleted.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DissociateTransitRouterAttachmentFromRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// DissociateTransitRouterAttachmentFromRouteTableResponse
        /// </returns>
        public async Task<DissociateTransitRouterAttachmentFromRouteTableResponse> DissociateTransitRouterAttachmentFromRouteTableAsync(DissociateTransitRouterAttachmentFromRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DissociateTransitRouterAttachmentFromRouteTableWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables the health check feature for a virtual border router (VBR) to detect anomalies on Express Connect circuits. You can modify the health check configuration of a VBR based on business requirements.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can enable the health check feature for a VBR to monitor the Express Connect circuit between your data center and Alibaba Cloud. This helps you detect connection issues in a timely manner.
        /// Before you use the health check feature, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>If your VBR uses static routing, you must add a static route for the data center that is connected to the VBR after you configure the health check feature. Set the destination CIDR block to the source IP address of health checks, set the mask length to 32, and set the next hop to the IP address of the VBR on the Alibaba Cloud side.</description></item>
        /// <item><description>If your VBR uses dynamic Border Gateway Protocol (BGP) routing, you do not need to add routes for the data center.</description></item>
        /// <item><description><b>EnableCenVbrHealthCheck</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If health check configurations are returned, health check is configured or modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableCenVbrHealthCheckResponse
        /// </returns>
        public EnableCenVbrHealthCheckResponse EnableCenVbrHealthCheckWithOptions(EnableCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckInterval))
            {
                query["HealthCheckInterval"] = request.HealthCheckInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckOnly))
            {
                query["HealthCheckOnly"] = request.HealthCheckOnly;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckSourceIp))
            {
                query["HealthCheckSourceIp"] = request.HealthCheckSourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckTargetIp))
            {
                query["HealthCheckTargetIp"] = request.HealthCheckTargetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthyThreshold))
            {
                query["HealthyThreshold"] = request.HealthyThreshold;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCenVbrHealthCheckResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables the health check feature for a virtual border router (VBR) to detect anomalies on Express Connect circuits. You can modify the health check configuration of a VBR based on business requirements.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can enable the health check feature for a VBR to monitor the Express Connect circuit between your data center and Alibaba Cloud. This helps you detect connection issues in a timely manner.
        /// Before you use the health check feature, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>If your VBR uses static routing, you must add a static route for the data center that is connected to the VBR after you configure the health check feature. Set the destination CIDR block to the source IP address of health checks, set the mask length to 32, and set the next hop to the IP address of the VBR on the Alibaba Cloud side.</description></item>
        /// <item><description>If your VBR uses dynamic Border Gateway Protocol (BGP) routing, you do not need to add routes for the data center.</description></item>
        /// <item><description><b>EnableCenVbrHealthCheck</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If health check configurations are returned, health check is configured or modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableCenVbrHealthCheckRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableCenVbrHealthCheckResponse
        /// </returns>
        public async Task<EnableCenVbrHealthCheckResponse> EnableCenVbrHealthCheckWithOptionsAsync(EnableCenVbrHealthCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckInterval))
            {
                query["HealthCheckInterval"] = request.HealthCheckInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckOnly))
            {
                query["HealthCheckOnly"] = request.HealthCheckOnly;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckSourceIp))
            {
                query["HealthCheckSourceIp"] = request.HealthCheckSourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckTargetIp))
            {
                query["HealthCheckTargetIp"] = request.HealthCheckTargetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthyThreshold))
            {
                query["HealthyThreshold"] = request.HealthyThreshold;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceId))
            {
                query["VbrInstanceId"] = request.VbrInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceOwnerId))
            {
                query["VbrInstanceOwnerId"] = request.VbrInstanceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VbrInstanceRegionId))
            {
                query["VbrInstanceRegionId"] = request.VbrInstanceRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCenVbrHealthCheck",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCenVbrHealthCheckResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables the health check feature for a virtual border router (VBR) to detect anomalies on Express Connect circuits. You can modify the health check configuration of a VBR based on business requirements.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can enable the health check feature for a VBR to monitor the Express Connect circuit between your data center and Alibaba Cloud. This helps you detect connection issues in a timely manner.
        /// Before you use the health check feature, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>If your VBR uses static routing, you must add a static route for the data center that is connected to the VBR after you configure the health check feature. Set the destination CIDR block to the source IP address of health checks, set the mask length to 32, and set the next hop to the IP address of the VBR on the Alibaba Cloud side.</description></item>
        /// <item><description>If your VBR uses dynamic Border Gateway Protocol (BGP) routing, you do not need to add routes for the data center.</description></item>
        /// <item><description><b>EnableCenVbrHealthCheck</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If health check configurations are returned, health check is configured or modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableCenVbrHealthCheckResponse
        /// </returns>
        public EnableCenVbrHealthCheckResponse EnableCenVbrHealthCheck(EnableCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableCenVbrHealthCheckWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables the health check feature for a virtual border router (VBR) to detect anomalies on Express Connect circuits. You can modify the health check configuration of a VBR based on business requirements.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can enable the health check feature for a VBR to monitor the Express Connect circuit between your data center and Alibaba Cloud. This helps you detect connection issues in a timely manner.
        /// Before you use the health check feature, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>If your VBR uses static routing, you must add a static route for the data center that is connected to the VBR after you configure the health check feature. Set the destination CIDR block to the source IP address of health checks, set the mask length to 32, and set the next hop to the IP address of the VBR on the Alibaba Cloud side.</description></item>
        /// <item><description>If your VBR uses dynamic Border Gateway Protocol (BGP) routing, you do not need to add routes for the data center.</description></item>
        /// <item><description><b>EnableCenVbrHealthCheck</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>DescribeCenVbrHealthCheck</b> operation to query the status of health check configurations. If health check configurations are returned, health check is configured or modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableCenVbrHealthCheckRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableCenVbrHealthCheckResponse
        /// </returns>
        public async Task<EnableCenVbrHealthCheckResponse> EnableCenVbrHealthCheckAsync(EnableCenVbrHealthCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableCenVbrHealthCheckWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you establish a network instance connection on a transit router, you can create a route learning correlation for the network instance connection. Then, the routes of the connected network instance are automatically advertised to the route table of the transit router. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>You can create route learning correlations only on Enterprise Edition transit routers. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description><b>EnableTransitRouterRouteTablePropagation</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the route learning status between a network instance connection and a route table.<list type="bullet">
        /// <item><description><b>Enabling</b> indicates that a route learning correlation is being created between the network instance connection and route table. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b> indicates that the route learning correlation is created between the network instance connection and route table.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public EnableTransitRouterRouteTablePropagationResponse EnableTransitRouterRouteTablePropagationWithOptions(EnableTransitRouterRouteTablePropagationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableTransitRouterRouteTablePropagation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableTransitRouterRouteTablePropagationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you establish a network instance connection on a transit router, you can create a route learning correlation for the network instance connection. Then, the routes of the connected network instance are automatically advertised to the route table of the transit router. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>You can create route learning correlations only on Enterprise Edition transit routers. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description><b>EnableTransitRouterRouteTablePropagation</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the route learning status between a network instance connection and a route table.<list type="bullet">
        /// <item><description><b>Enabling</b> indicates that a route learning correlation is being created between the network instance connection and route table. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b> indicates that the route learning correlation is created between the network instance connection and route table.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public async Task<EnableTransitRouterRouteTablePropagationResponse> EnableTransitRouterRouteTablePropagationWithOptionsAsync(EnableTransitRouterRouteTablePropagationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableTransitRouterRouteTablePropagation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableTransitRouterRouteTablePropagationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you establish a network instance connection on a transit router, you can create a route learning correlation for the network instance connection. Then, the routes of the connected network instance are automatically advertised to the route table of the transit router. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>You can create route learning correlations only on Enterprise Edition transit routers. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description><b>EnableTransitRouterRouteTablePropagation</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the route learning status between a network instance connection and a route table.<list type="bullet">
        /// <item><description><b>Enabling</b> indicates that a route learning correlation is being created between the network instance connection and route table. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b> indicates that the route learning correlation is created between the network instance connection and route table.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public EnableTransitRouterRouteTablePropagationResponse EnableTransitRouterRouteTablePropagation(EnableTransitRouterRouteTablePropagationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableTransitRouterRouteTablePropagationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a route learning correlation.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>After you establish a network instance connection on a transit router, you can create a route learning correlation for the network instance connection. Then, the routes of the connected network instance are automatically advertised to the route table of the transit router. Before you begin, we recommend that you take note of the following rules:</para>
        /// <list type="bullet">
        /// <item><description>You can create route learning correlations only on Enterprise Edition transit routers. For more information about the regions and zones that support Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/181681.html">What is CEN?</a></description></item>
        /// <item><description><b>EnableTransitRouterRouteTablePropagation</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterRouteTablePropagations</b> operation to query the route learning status between a network instance connection and a route table.<list type="bullet">
        /// <item><description><b>Enabling</b> indicates that a route learning correlation is being created between the network instance connection and route table. You can query the route learning correlation but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b> indicates that the route learning correlation is created between the network instance connection and route table.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// EnableTransitRouterRouteTablePropagationRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableTransitRouterRouteTablePropagationResponse
        /// </returns>
        public async Task<EnableTransitRouterRouteTablePropagationResponse> EnableTransitRouterRouteTablePropagationAsync(EnableTransitRouterRouteTablePropagationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableTransitRouterRouteTablePropagationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Grants a transit router permissions on network instances that belong to another Alibaba Cloud account. To connect a transit router of Account B to a network instance of Account A, you must use Account A to grant permissions to the transit router of Account B.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  The <c>GrantInstanceToTransitRouter</c> operation can be used to grant transit routers permissions on network instances that belong to other Alibaba Cloud accounts, including virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs).
        ///     To grant transit routers permissions on Cloud Connect Network (CCN) instances, call the <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a> operation.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <c>GrantInstanceToTransitRouter</c>, take note of the billing rules, permission limits, and prerequisites on permission management of transit routers. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>Before you grant a transit router permissions on a network instance, make sure that the following requirements are met:
        /// The account to which the network instance belongs and the account to which the transit router belongs are of the same type.
        /// The ID of the Alibaba Cloud account to which the transit router belongs is obtained.
        /// The ID of the Cloud Enterprise Network (CEN) instance to which the Enterprise Edition transit router belongs is obtained.
        /// Before you grant a transit router permissions on a VBR, contact your account manager to acquire permissions on the VBR.
        /// Before you grant a transit router permissions on an IPsec-VPN connection, make sure that the IPsec-VPN connection is not associated with a resource.
        /// If the IPsec-VPN connection is attached to a VPN gateway, the IPsec-VPN connection cannot be attached to transit routers within the same account or different accounts.
        /// If the IPsec-VPN connection is attached to a transit router, detach the IPsec-VPN connection from the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181554.html">Delete a network instance connection</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GrantInstanceToTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GrantInstanceToTransitRouterResponse
        /// </returns>
        public GrantInstanceToTransitRouterResponse GrantInstanceToTransitRouterWithOptions(GrantInstanceToTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceType))
            {
                query["InstanceType"] = request.InstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GrantInstanceToTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GrantInstanceToTransitRouterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Grants a transit router permissions on network instances that belong to another Alibaba Cloud account. To connect a transit router of Account B to a network instance of Account A, you must use Account A to grant permissions to the transit router of Account B.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  The <c>GrantInstanceToTransitRouter</c> operation can be used to grant transit routers permissions on network instances that belong to other Alibaba Cloud accounts, including virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs).
        ///     To grant transit routers permissions on Cloud Connect Network (CCN) instances, call the <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a> operation.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <c>GrantInstanceToTransitRouter</c>, take note of the billing rules, permission limits, and prerequisites on permission management of transit routers. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>Before you grant a transit router permissions on a network instance, make sure that the following requirements are met:
        /// The account to which the network instance belongs and the account to which the transit router belongs are of the same type.
        /// The ID of the Alibaba Cloud account to which the transit router belongs is obtained.
        /// The ID of the Cloud Enterprise Network (CEN) instance to which the Enterprise Edition transit router belongs is obtained.
        /// Before you grant a transit router permissions on a VBR, contact your account manager to acquire permissions on the VBR.
        /// Before you grant a transit router permissions on an IPsec-VPN connection, make sure that the IPsec-VPN connection is not associated with a resource.
        /// If the IPsec-VPN connection is attached to a VPN gateway, the IPsec-VPN connection cannot be attached to transit routers within the same account or different accounts.
        /// If the IPsec-VPN connection is attached to a transit router, detach the IPsec-VPN connection from the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181554.html">Delete a network instance connection</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GrantInstanceToTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GrantInstanceToTransitRouterResponse
        /// </returns>
        public async Task<GrantInstanceToTransitRouterResponse> GrantInstanceToTransitRouterWithOptionsAsync(GrantInstanceToTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceType))
            {
                query["InstanceType"] = request.InstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GrantInstanceToTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GrantInstanceToTransitRouterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Grants a transit router permissions on network instances that belong to another Alibaba Cloud account. To connect a transit router of Account B to a network instance of Account A, you must use Account A to grant permissions to the transit router of Account B.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  The <c>GrantInstanceToTransitRouter</c> operation can be used to grant transit routers permissions on network instances that belong to other Alibaba Cloud accounts, including virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs).
        ///     To grant transit routers permissions on Cloud Connect Network (CCN) instances, call the <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a> operation.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <c>GrantInstanceToTransitRouter</c>, take note of the billing rules, permission limits, and prerequisites on permission management of transit routers. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>Before you grant a transit router permissions on a network instance, make sure that the following requirements are met:
        /// The account to which the network instance belongs and the account to which the transit router belongs are of the same type.
        /// The ID of the Alibaba Cloud account to which the transit router belongs is obtained.
        /// The ID of the Cloud Enterprise Network (CEN) instance to which the Enterprise Edition transit router belongs is obtained.
        /// Before you grant a transit router permissions on a VBR, contact your account manager to acquire permissions on the VBR.
        /// Before you grant a transit router permissions on an IPsec-VPN connection, make sure that the IPsec-VPN connection is not associated with a resource.
        /// If the IPsec-VPN connection is attached to a VPN gateway, the IPsec-VPN connection cannot be attached to transit routers within the same account or different accounts.
        /// If the IPsec-VPN connection is attached to a transit router, detach the IPsec-VPN connection from the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181554.html">Delete a network instance connection</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GrantInstanceToTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// GrantInstanceToTransitRouterResponse
        /// </returns>
        public GrantInstanceToTransitRouterResponse GrantInstanceToTransitRouter(GrantInstanceToTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GrantInstanceToTransitRouterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Grants a transit router permissions on network instances that belong to another Alibaba Cloud account. To connect a transit router of Account B to a network instance of Account A, you must use Account A to grant permissions to the transit router of Account B.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  The <c>GrantInstanceToTransitRouter</c> operation can be used to grant transit routers permissions on network instances that belong to other Alibaba Cloud accounts, including virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs).
        ///     To grant transit routers permissions on Cloud Connect Network (CCN) instances, call the <a href="https://help.aliyun.com/document_detail/126141.html">GrantInstanceToCbn</a> operation.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <c>GrantInstanceToTransitRouter</c>, take note of the billing rules, permission limits, and prerequisites on permission management of transit routers. For more information, see <a href="https://help.aliyun.com/document_detail/181553.html">Acquire permissions to connect to a network instance that belongs to another account</a>.</description></item>
        /// <item><description>Before you grant a transit router permissions on a network instance, make sure that the following requirements are met:
        /// The account to which the network instance belongs and the account to which the transit router belongs are of the same type.
        /// The ID of the Alibaba Cloud account to which the transit router belongs is obtained.
        /// The ID of the Cloud Enterprise Network (CEN) instance to which the Enterprise Edition transit router belongs is obtained.
        /// Before you grant a transit router permissions on a VBR, contact your account manager to acquire permissions on the VBR.
        /// Before you grant a transit router permissions on an IPsec-VPN connection, make sure that the IPsec-VPN connection is not associated with a resource.
        /// If the IPsec-VPN connection is attached to a VPN gateway, the IPsec-VPN connection cannot be attached to transit routers within the same account or different accounts.
        /// If the IPsec-VPN connection is attached to a transit router, detach the IPsec-VPN connection from the transit router. For more information, see <a href="https://help.aliyun.com/document_detail/181554.html">Delete a network instance connection</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GrantInstanceToTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// GrantInstanceToTransitRouterResponse
        /// </returns>
        public async Task<GrantInstanceToTransitRouterResponse> GrantInstanceToTransitRouterAsync(GrantInstanceToTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GrantInstanceToTransitRouterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routes in route tables of network instances that point to network instance connections on Enterprise Edition transit routers.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the ListCenChildInstanceRouteEntriesToAttachment operation, make sure that all request parameter values are valid. If a parameter is set to an invalid value, a request ID is returned, but the routes to the network instance are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenChildInstanceRouteEntriesToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenChildInstanceRouteEntriesToAttachmentResponse
        /// </returns>
        public ListCenChildInstanceRouteEntriesToAttachmentResponse ListCenChildInstanceRouteEntriesToAttachmentWithOptions(ListCenChildInstanceRouteEntriesToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteFilter))
            {
                query["RouteFilter"] = request.RouteFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceType))
            {
                query["ServiceType"] = request.ServiceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenChildInstanceRouteEntriesToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenChildInstanceRouteEntriesToAttachmentResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routes in route tables of network instances that point to network instance connections on Enterprise Edition transit routers.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the ListCenChildInstanceRouteEntriesToAttachment operation, make sure that all request parameter values are valid. If a parameter is set to an invalid value, a request ID is returned, but the routes to the network instance are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenChildInstanceRouteEntriesToAttachmentRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenChildInstanceRouteEntriesToAttachmentResponse
        /// </returns>
        public async Task<ListCenChildInstanceRouteEntriesToAttachmentResponse> ListCenChildInstanceRouteEntriesToAttachmentWithOptionsAsync(ListCenChildInstanceRouteEntriesToAttachmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteFilter))
            {
                query["RouteFilter"] = request.RouteFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceType))
            {
                query["ServiceType"] = request.ServiceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenChildInstanceRouteEntriesToAttachment",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenChildInstanceRouteEntriesToAttachmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routes in route tables of network instances that point to network instance connections on Enterprise Edition transit routers.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the ListCenChildInstanceRouteEntriesToAttachment operation, make sure that all request parameter values are valid. If a parameter is set to an invalid value, a request ID is returned, but the routes to the network instance are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenChildInstanceRouteEntriesToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenChildInstanceRouteEntriesToAttachmentResponse
        /// </returns>
        public ListCenChildInstanceRouteEntriesToAttachmentResponse ListCenChildInstanceRouteEntriesToAttachment(ListCenChildInstanceRouteEntriesToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCenChildInstanceRouteEntriesToAttachmentWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries routes in route tables of network instances that point to network instance connections on Enterprise Edition transit routers.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the ListCenChildInstanceRouteEntriesToAttachment operation, make sure that all request parameter values are valid. If a parameter is set to an invalid value, a request ID is returned, but the routes to the network instance are not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenChildInstanceRouteEntriesToAttachmentRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenChildInstanceRouteEntriesToAttachmentResponse
        /// </returns>
        public async Task<ListCenChildInstanceRouteEntriesToAttachmentResponse> ListCenChildInstanceRouteEntriesToAttachmentAsync(ListCenChildInstanceRouteEntriesToAttachmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCenChildInstanceRouteEntriesToAttachmentWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quality of service (QoS) policies.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListCenInterRegionTrafficQosPolicies</b> operation, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>You must specify at least one of the <b>TransitRouterId</b> and <b>TrafficQosPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns information based on the values of the <b>TransitRouterId</b>, <b>TransitRouterAttachmentId</b>, <b>TrafficQosPolicyName</b>, and <b>TrafficQosPolicyDescription</b> parameters. The information about the queues in the QoS policies is not returned. In this case, the <b>TrafficQosQueues</b> parameter is not included in the response.</description></item>
        /// <item><description>If you specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns the information about the QoS policy and queues in the QoS policy. In this case, the <b>TrafficQosQueues</b> parameter is included in the response. If the value of the <b>TrafficQosQueues</b> parameter is an empty string, it indicates that the QoS policy contains only the default queue.</description></item>
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the information about the QoS policy is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosPoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosPoliciesResponse
        /// </returns>
        public ListCenInterRegionTrafficQosPoliciesResponse ListCenInterRegionTrafficQosPoliciesWithOptions(ListCenInterRegionTrafficQosPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenInterRegionTrafficQosPolicies",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenInterRegionTrafficQosPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quality of service (QoS) policies.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListCenInterRegionTrafficQosPolicies</b> operation, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>You must specify at least one of the <b>TransitRouterId</b> and <b>TrafficQosPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns information based on the values of the <b>TransitRouterId</b>, <b>TransitRouterAttachmentId</b>, <b>TrafficQosPolicyName</b>, and <b>TrafficQosPolicyDescription</b> parameters. The information about the queues in the QoS policies is not returned. In this case, the <b>TrafficQosQueues</b> parameter is not included in the response.</description></item>
        /// <item><description>If you specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns the information about the QoS policy and queues in the QoS policy. In this case, the <b>TrafficQosQueues</b> parameter is included in the response. If the value of the <b>TrafficQosQueues</b> parameter is an empty string, it indicates that the QoS policy contains only the default queue.</description></item>
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the information about the QoS policy is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosPoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosPoliciesResponse
        /// </returns>
        public async Task<ListCenInterRegionTrafficQosPoliciesResponse> ListCenInterRegionTrafficQosPoliciesWithOptionsAsync(ListCenInterRegionTrafficQosPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenInterRegionTrafficQosPolicies",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenInterRegionTrafficQosPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quality of service (QoS) policies.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListCenInterRegionTrafficQosPolicies</b> operation, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>You must specify at least one of the <b>TransitRouterId</b> and <b>TrafficQosPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns information based on the values of the <b>TransitRouterId</b>, <b>TransitRouterAttachmentId</b>, <b>TrafficQosPolicyName</b>, and <b>TrafficQosPolicyDescription</b> parameters. The information about the queues in the QoS policies is not returned. In this case, the <b>TrafficQosQueues</b> parameter is not included in the response.</description></item>
        /// <item><description>If you specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns the information about the QoS policy and queues in the QoS policy. In this case, the <b>TrafficQosQueues</b> parameter is included in the response. If the value of the <b>TrafficQosQueues</b> parameter is an empty string, it indicates that the QoS policy contains only the default queue.</description></item>
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the information about the QoS policy is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosPoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosPoliciesResponse
        /// </returns>
        public ListCenInterRegionTrafficQosPoliciesResponse ListCenInterRegionTrafficQosPolicies(ListCenInterRegionTrafficQosPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCenInterRegionTrafficQosPoliciesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quality of service (QoS) policies.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListCenInterRegionTrafficQosPolicies</b> operation, take note of the following information:</para>
        /// <list type="bullet">
        /// <item><description>You must specify at least one of the <b>TransitRouterId</b> and <b>TrafficQosPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns information based on the values of the <b>TransitRouterId</b>, <b>TransitRouterAttachmentId</b>, <b>TrafficQosPolicyName</b>, and <b>TrafficQosPolicyDescription</b> parameters. The information about the queues in the QoS policies is not returned. In this case, the <b>TrafficQosQueues</b> parameter is not included in the response.</description></item>
        /// <item><description>If you specify a QoS policy ID (<b>TrafficQosPolicyId</b>), the system returns the information about the QoS policy and queues in the QoS policy. In this case, the <b>TrafficQosQueues</b> parameter is included in the response. If the value of the <b>TrafficQosQueues</b> parameter is an empty string, it indicates that the QoS policy contains only the default queue.</description></item>
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a request ID is returned but the information about the QoS policy is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosPoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosPoliciesResponse
        /// </returns>
        public async Task<ListCenInterRegionTrafficQosPoliciesResponse> ListCenInterRegionTrafficQosPoliciesAsync(ListCenInterRegionTrafficQosPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCenInterRegionTrafficQosPoliciesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about quality of service (QoS) queues.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You must specify at least one of the <b>TransitRouterId</b>, <b>TrafficQosPolicyId</b>, and <b>TrafficQosQueueId</b> parameters.
        /// Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the QoS queue information is not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosQueuesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosQueuesResponse
        /// </returns>
        public ListCenInterRegionTrafficQosQueuesResponse ListCenInterRegionTrafficQosQueuesWithOptions(ListCenInterRegionTrafficQosQueuesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EffectiveBandwidthFilter))
            {
                query["EffectiveBandwidthFilter"] = request.EffectiveBandwidthFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueDescription))
            {
                query["TrafficQosQueueDescription"] = request.TrafficQosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueId))
            {
                query["TrafficQosQueueId"] = request.TrafficQosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueName))
            {
                query["TrafficQosQueueName"] = request.TrafficQosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenInterRegionTrafficQosQueues",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenInterRegionTrafficQosQueuesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about quality of service (QoS) queues.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You must specify at least one of the <b>TransitRouterId</b>, <b>TrafficQosPolicyId</b>, and <b>TrafficQosQueueId</b> parameters.
        /// Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the QoS queue information is not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosQueuesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosQueuesResponse
        /// </returns>
        public async Task<ListCenInterRegionTrafficQosQueuesResponse> ListCenInterRegionTrafficQosQueuesWithOptionsAsync(ListCenInterRegionTrafficQosQueuesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EffectiveBandwidthFilter))
            {
                query["EffectiveBandwidthFilter"] = request.EffectiveBandwidthFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueDescription))
            {
                query["TrafficQosQueueDescription"] = request.TrafficQosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueId))
            {
                query["TrafficQosQueueId"] = request.TrafficQosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosQueueName))
            {
                query["TrafficQosQueueName"] = request.TrafficQosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCenInterRegionTrafficQosQueues",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCenInterRegionTrafficQosQueuesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about quality of service (QoS) queues.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You must specify at least one of the <b>TransitRouterId</b>, <b>TrafficQosPolicyId</b>, and <b>TrafficQosQueueId</b> parameters.
        /// Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the QoS queue information is not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosQueuesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosQueuesResponse
        /// </returns>
        public ListCenInterRegionTrafficQosQueuesResponse ListCenInterRegionTrafficQosQueues(ListCenInterRegionTrafficQosQueuesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCenInterRegionTrafficQosQueuesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about quality of service (QoS) queues.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You must specify at least one of the <b>TransitRouterId</b>, <b>TrafficQosPolicyId</b>, and <b>TrafficQosQueueId</b> parameters.
        /// Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the QoS queue information is not returned.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListCenInterRegionTrafficQosQueuesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCenInterRegionTrafficQosQueuesResponse
        /// </returns>
        public async Task<ListCenInterRegionTrafficQosQueuesResponse> ListCenInterRegionTrafficQosQueuesAsync(ListCenInterRegionTrafficQosQueuesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCenInterRegionTrafficQosQueuesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the elastic network interfaces (ENIs) that can be used as multicast sources or members in a specified virtual private cloud (VPC).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call <c>ListGrantVSwitchEnis</c>, make sure that the VPC is attached to a Cloud Enterprise Network (CEN) instance. For more information, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchEnisRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchEnisResponse
        /// </returns>
        public ListGrantVSwitchEnisResponse ListGrantVSwitchEnisWithOptions(ListGrantVSwitchEnisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceId))
            {
                query["NetworkInterfaceId"] = request.NetworkInterfaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceName))
            {
                query["NetworkInterfaceName"] = request.NetworkInterfaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrimaryIpAddress))
            {
                query["PrimaryIpAddress"] = request.PrimaryIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrantVSwitchEnis",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrantVSwitchEnisResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the elastic network interfaces (ENIs) that can be used as multicast sources or members in a specified virtual private cloud (VPC).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call <c>ListGrantVSwitchEnis</c>, make sure that the VPC is attached to a Cloud Enterprise Network (CEN) instance. For more information, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchEnisRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchEnisResponse
        /// </returns>
        public async Task<ListGrantVSwitchEnisResponse> ListGrantVSwitchEnisWithOptionsAsync(ListGrantVSwitchEnisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceId))
            {
                query["NetworkInterfaceId"] = request.NetworkInterfaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceName))
            {
                query["NetworkInterfaceName"] = request.NetworkInterfaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrimaryIpAddress))
            {
                query["PrimaryIpAddress"] = request.PrimaryIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrantVSwitchEnis",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrantVSwitchEnisResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the elastic network interfaces (ENIs) that can be used as multicast sources or members in a specified virtual private cloud (VPC).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call <c>ListGrantVSwitchEnis</c>, make sure that the VPC is attached to a Cloud Enterprise Network (CEN) instance. For more information, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchEnisRequest
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchEnisResponse
        /// </returns>
        public ListGrantVSwitchEnisResponse ListGrantVSwitchEnis(ListGrantVSwitchEnisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListGrantVSwitchEnisWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the elastic network interfaces (ENIs) that can be used as multicast sources or members in a specified virtual private cloud (VPC).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call <c>ListGrantVSwitchEnis</c>, make sure that the VPC is attached to a Cloud Enterprise Network (CEN) instance. For more information, see <a href="https://help.aliyun.com/document_detail/468237.html">CreateTransitRouterVpcAttachment</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchEnisRequest
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchEnisResponse
        /// </returns>
        public async Task<ListGrantVSwitchEnisResponse> ListGrantVSwitchEnisAsync(ListGrantVSwitchEnisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListGrantVSwitchEnisWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the vSwitches in a virtual private cloud (VPC) that belongs to another Alibaba Cloud account and is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <c>ListGrantVSwitchesToCen</c> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The permissions on the VPC are granted to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>The VPC is attached to the CEN instance.<list type="bullet">
        /// <item><description>For more information about how to connect an Enterprise Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to connect a Basic Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchesToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchesToCenResponse
        /// </returns>
        public ListGrantVSwitchesToCenResponse ListGrantVSwitchesToCenWithOptions(ListGrantVSwitchesToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnabledIpv6))
            {
                query["EnabledIpv6"] = request.EnabledIpv6;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ZoneId))
            {
                query["ZoneId"] = request.ZoneId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrantVSwitchesToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrantVSwitchesToCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the vSwitches in a virtual private cloud (VPC) that belongs to another Alibaba Cloud account and is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <c>ListGrantVSwitchesToCen</c> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The permissions on the VPC are granted to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>The VPC is attached to the CEN instance.<list type="bullet">
        /// <item><description>For more information about how to connect an Enterprise Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to connect a Basic Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchesToCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchesToCenResponse
        /// </returns>
        public async Task<ListGrantVSwitchesToCenResponse> ListGrantVSwitchesToCenWithOptionsAsync(ListGrantVSwitchesToCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnabledIpv6))
            {
                query["EnabledIpv6"] = request.EnabledIpv6;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ZoneId))
            {
                query["ZoneId"] = request.ZoneId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrantVSwitchesToCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrantVSwitchesToCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the vSwitches in a virtual private cloud (VPC) that belongs to another Alibaba Cloud account and is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <c>ListGrantVSwitchesToCen</c> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The permissions on the VPC are granted to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>The VPC is attached to the CEN instance.<list type="bullet">
        /// <item><description>For more information about how to connect an Enterprise Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to connect a Basic Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchesToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchesToCenResponse
        /// </returns>
        public ListGrantVSwitchesToCenResponse ListGrantVSwitchesToCen(ListGrantVSwitchesToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListGrantVSwitchesToCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the vSwitches in a virtual private cloud (VPC) that belongs to another Alibaba Cloud account and is attached to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <c>ListGrantVSwitchesToCen</c> operation, make sure that the following requirements are met:</para>
        /// <list type="bullet">
        /// <item><description>The permissions on the VPC are granted to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/126224.html">GrantInstanceToCen</a>.</description></item>
        /// <item><description>The VPC is attached to the CEN instance.<list type="bullet">
        /// <item><description>For more information about how to connect an Enterprise Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/261358.html">CreateTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to connect a Basic Edition transit router to a VPC, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListGrantVSwitchesToCenRequest
        /// </param>
        /// 
        /// <returns>
        /// ListGrantVSwitchesToCenResponse
        /// </returns>
        public async Task<ListGrantVSwitchesToCenResponse> ListGrantVSwitchesToCenAsync(ListGrantVSwitchesToCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListGrantVSwitchesToCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about tags that are added to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To call this operation, you must set at least one of <b>ResourceId.N</b> and <b>Tag.N.Key</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>ResourceId.N</b>, the tags that are added to the specified CEN instances are returned.</description></item>
        /// <item><description>If you set only <b>Tag.N.Key</b>, the CEN instances that have the specified tags are returned.</description></item>
        /// <item><description>If you set both <b>ResourceId.N</b> and <b>Tag.N.Key</b>, the specified tags that are added to the specified CEN instances are returned.<list type="bullet">
        /// <item><description>Make sure that the CEN instance specified by <b>ResourceId.N</b> has the tag specified by <b>Tag.N.Key</b>. Otherwise, the response returns null.</description></item>
        /// <item><description>If multiple tag keys are specified, the logical operator among these tag keys is <b>AND</b>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public ListTagResourcesResponse ListTagResourcesWithOptions(ListTagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about tags that are added to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To call this operation, you must set at least one of <b>ResourceId.N</b> and <b>Tag.N.Key</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>ResourceId.N</b>, the tags that are added to the specified CEN instances are returned.</description></item>
        /// <item><description>If you set only <b>Tag.N.Key</b>, the CEN instances that have the specified tags are returned.</description></item>
        /// <item><description>If you set both <b>ResourceId.N</b> and <b>Tag.N.Key</b>, the specified tags that are added to the specified CEN instances are returned.<list type="bullet">
        /// <item><description>Make sure that the CEN instance specified by <b>ResourceId.N</b> has the tag specified by <b>Tag.N.Key</b>. Otherwise, the response returns null.</description></item>
        /// <item><description>If multiple tag keys are specified, the logical operator among these tag keys is <b>AND</b>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public async Task<ListTagResourcesResponse> ListTagResourcesWithOptionsAsync(ListTagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about tags that are added to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To call this operation, you must set at least one of <b>ResourceId.N</b> and <b>Tag.N.Key</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>ResourceId.N</b>, the tags that are added to the specified CEN instances are returned.</description></item>
        /// <item><description>If you set only <b>Tag.N.Key</b>, the CEN instances that have the specified tags are returned.</description></item>
        /// <item><description>If you set both <b>ResourceId.N</b> and <b>Tag.N.Key</b>, the specified tags that are added to the specified CEN instances are returned.<list type="bullet">
        /// <item><description>Make sure that the CEN instance specified by <b>ResourceId.N</b> has the tag specified by <b>Tag.N.Key</b>. Otherwise, the response returns null.</description></item>
        /// <item><description>If multiple tag keys are specified, the logical operator among these tag keys is <b>AND</b>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public ListTagResourcesResponse ListTagResources(ListTagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTagResourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about tags that are added to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>To call this operation, you must set at least one of <b>ResourceId.N</b> and <b>Tag.N.Key</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>ResourceId.N</b>, the tags that are added to the specified CEN instances are returned.</description></item>
        /// <item><description>If you set only <b>Tag.N.Key</b>, the CEN instances that have the specified tags are returned.</description></item>
        /// <item><description>If you set both <b>ResourceId.N</b> and <b>Tag.N.Key</b>, the specified tags that are added to the specified CEN instances are returned.<list type="bullet">
        /// <item><description>Make sure that the CEN instance specified by <b>ResourceId.N</b> has the tag specified by <b>Tag.N.Key</b>. Otherwise, the response returns null.</description></item>
        /// <item><description>If multiple tag keys are specified, the logical operator among these tag keys is <b>AND</b>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public async Task<ListTagResourcesResponse> ListTagResourcesAsync(ListTagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTagResourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about a traffic marking policy, such as the status and priority.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListTrafficMarkingPolicies</b> operation, take note of the following limits:</para>
        /// <list type="bullet">
        /// <item><description>Specify at least one of the <b>TransitRouterId</b> and <b>TrafficMarkingPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries only the information about the traffic marking policy based on the <b>TransitRouterId</b>, <b>TrafficMarkingPolicyName</b>, and <b>TrafficMarkingPolicyDescription</b> parameters. The <b>TrafficMatchRules</b> parameter that contains the information about the traffic classification rules is not returned.</description></item>
        /// <item><description>If you specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries the information about the traffic marking policy and traffic classification rules. The <b>TrafficMatchRules</b> parameter is returned in the response. If the value of the <b>TrafficMatchRules</b> parameter is an empty array, the traffic marking policy does not contain a traffic classification rule.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTrafficMarkingPoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTrafficMarkingPoliciesResponse
        /// </returns>
        public ListTrafficMarkingPoliciesResponse ListTrafficMarkingPoliciesWithOptions(ListTrafficMarkingPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTrafficMarkingPolicies",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTrafficMarkingPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about a traffic marking policy, such as the status and priority.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListTrafficMarkingPolicies</b> operation, take note of the following limits:</para>
        /// <list type="bullet">
        /// <item><description>Specify at least one of the <b>TransitRouterId</b> and <b>TrafficMarkingPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries only the information about the traffic marking policy based on the <b>TransitRouterId</b>, <b>TrafficMarkingPolicyName</b>, and <b>TrafficMarkingPolicyDescription</b> parameters. The <b>TrafficMatchRules</b> parameter that contains the information about the traffic classification rules is not returned.</description></item>
        /// <item><description>If you specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries the information about the traffic marking policy and traffic classification rules. The <b>TrafficMatchRules</b> parameter is returned in the response. If the value of the <b>TrafficMatchRules</b> parameter is an empty array, the traffic marking policy does not contain a traffic classification rule.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTrafficMarkingPoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTrafficMarkingPoliciesResponse
        /// </returns>
        public async Task<ListTrafficMarkingPoliciesResponse> ListTrafficMarkingPoliciesWithOptionsAsync(ListTrafficMarkingPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTrafficMarkingPolicies",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTrafficMarkingPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about a traffic marking policy, such as the status and priority.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListTrafficMarkingPolicies</b> operation, take note of the following limits:</para>
        /// <list type="bullet">
        /// <item><description>Specify at least one of the <b>TransitRouterId</b> and <b>TrafficMarkingPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries only the information about the traffic marking policy based on the <b>TransitRouterId</b>, <b>TrafficMarkingPolicyName</b>, and <b>TrafficMarkingPolicyDescription</b> parameters. The <b>TrafficMatchRules</b> parameter that contains the information about the traffic classification rules is not returned.</description></item>
        /// <item><description>If you specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries the information about the traffic marking policy and traffic classification rules. The <b>TrafficMatchRules</b> parameter is returned in the response. If the value of the <b>TrafficMatchRules</b> parameter is an empty array, the traffic marking policy does not contain a traffic classification rule.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTrafficMarkingPoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTrafficMarkingPoliciesResponse
        /// </returns>
        public ListTrafficMarkingPoliciesResponse ListTrafficMarkingPolicies(ListTrafficMarkingPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTrafficMarkingPoliciesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about a traffic marking policy, such as the status and priority.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Before you call the <b>ListTrafficMarkingPolicies</b> operation, take note of the following limits:</para>
        /// <list type="bullet">
        /// <item><description>Specify at least one of the <b>TransitRouterId</b> and <b>TrafficMarkingPolicyId</b> parameters.</description></item>
        /// <item><description>If you do not specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries only the information about the traffic marking policy based on the <b>TransitRouterId</b>, <b>TrafficMarkingPolicyName</b>, and <b>TrafficMarkingPolicyDescription</b> parameters. The <b>TrafficMatchRules</b> parameter that contains the information about the traffic classification rules is not returned.</description></item>
        /// <item><description>If you specify a traffic marking policy ID (<b>TrafficMarkingPolicyId</b>), the operation queries the information about the traffic marking policy and traffic classification rules. The <b>TrafficMatchRules</b> parameter is returned in the response. If the value of the <b>TrafficMatchRules</b> parameter is an empty array, the traffic marking policy does not contain a traffic classification rule.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTrafficMarkingPoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTrafficMarkingPoliciesResponse
        /// </returns>
        public async Task<ListTrafficMarkingPoliciesResponse> ListTrafficMarkingPoliciesAsync(ListTrafficMarkingPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTrafficMarkingPoliciesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the zones that support Enterprise Edition transit routers in a region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call the <b>ListTransitRouterAvailableResource</b> operation to query the zones that support Enterprise Edition transit routers in a specified region.
        ///     *   If you do not set <b>SupportMulticast</b> to <b>true</b>, general-purpose zones that support Enterprise Edition transit routers are queried.
        ///     *   If you set <b>SupportMulticast</b> to <b>true</b>, zones in which Enterprise Edition transit routers support multicast are queried.</para>
        /// <list type="bullet">
        /// <item><description>On May 31, 2022, VPC-connected Enterprise Edition transit routers were optimized. Optimized Enterprise Edition transit routers do not require you to specify the primary and secondary zones when you connect VPCs to the Enterprise Edition transit routers. You can specify one or more zones.<list type="bullet">
        /// <item><description>If your Enterprise Edition transit router has not been optimized, you must specify the primary and secondary zones when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>MasterZones</b> and <b>SlaveZones</b> to query the primary and secondary zones.</description></item>
        /// <item><description>If your Enterprise Edition transit router has been optimized, you can specify a zone as needed when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>AvailableZones</b> to query the zones.
        /// For more information about the optimization, see <a href="https://help.aliyun.com/document_detail/434191.html">Announcement: Optimization on VPC-connected Enterprise Edition transit routers</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterAvailableResourceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterAvailableResourceResponse
        /// </returns>
        public ListTransitRouterAvailableResourceResponse ListTransitRouterAvailableResourceWithOptions(ListTransitRouterAvailableResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportMulticast))
            {
                query["SupportMulticast"] = request.SupportMulticast;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterAvailableResource",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterAvailableResourceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the zones that support Enterprise Edition transit routers in a region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call the <b>ListTransitRouterAvailableResource</b> operation to query the zones that support Enterprise Edition transit routers in a specified region.
        ///     *   If you do not set <b>SupportMulticast</b> to <b>true</b>, general-purpose zones that support Enterprise Edition transit routers are queried.
        ///     *   If you set <b>SupportMulticast</b> to <b>true</b>, zones in which Enterprise Edition transit routers support multicast are queried.</para>
        /// <list type="bullet">
        /// <item><description>On May 31, 2022, VPC-connected Enterprise Edition transit routers were optimized. Optimized Enterprise Edition transit routers do not require you to specify the primary and secondary zones when you connect VPCs to the Enterprise Edition transit routers. You can specify one or more zones.<list type="bullet">
        /// <item><description>If your Enterprise Edition transit router has not been optimized, you must specify the primary and secondary zones when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>MasterZones</b> and <b>SlaveZones</b> to query the primary and secondary zones.</description></item>
        /// <item><description>If your Enterprise Edition transit router has been optimized, you can specify a zone as needed when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>AvailableZones</b> to query the zones.
        /// For more information about the optimization, see <a href="https://help.aliyun.com/document_detail/434191.html">Announcement: Optimization on VPC-connected Enterprise Edition transit routers</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterAvailableResourceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterAvailableResourceResponse
        /// </returns>
        public async Task<ListTransitRouterAvailableResourceResponse> ListTransitRouterAvailableResourceWithOptionsAsync(ListTransitRouterAvailableResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportMulticast))
            {
                query["SupportMulticast"] = request.SupportMulticast;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterAvailableResource",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterAvailableResourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the zones that support Enterprise Edition transit routers in a region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call the <b>ListTransitRouterAvailableResource</b> operation to query the zones that support Enterprise Edition transit routers in a specified region.
        ///     *   If you do not set <b>SupportMulticast</b> to <b>true</b>, general-purpose zones that support Enterprise Edition transit routers are queried.
        ///     *   If you set <b>SupportMulticast</b> to <b>true</b>, zones in which Enterprise Edition transit routers support multicast are queried.</para>
        /// <list type="bullet">
        /// <item><description>On May 31, 2022, VPC-connected Enterprise Edition transit routers were optimized. Optimized Enterprise Edition transit routers do not require you to specify the primary and secondary zones when you connect VPCs to the Enterprise Edition transit routers. You can specify one or more zones.<list type="bullet">
        /// <item><description>If your Enterprise Edition transit router has not been optimized, you must specify the primary and secondary zones when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>MasterZones</b> and <b>SlaveZones</b> to query the primary and secondary zones.</description></item>
        /// <item><description>If your Enterprise Edition transit router has been optimized, you can specify a zone as needed when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>AvailableZones</b> to query the zones.
        /// For more information about the optimization, see <a href="https://help.aliyun.com/document_detail/434191.html">Announcement: Optimization on VPC-connected Enterprise Edition transit routers</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterAvailableResourceRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterAvailableResourceResponse
        /// </returns>
        public ListTransitRouterAvailableResourceResponse ListTransitRouterAvailableResource(ListTransitRouterAvailableResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterAvailableResourceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the zones that support Enterprise Edition transit routers in a region.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can call the <b>ListTransitRouterAvailableResource</b> operation to query the zones that support Enterprise Edition transit routers in a specified region.
        ///     *   If you do not set <b>SupportMulticast</b> to <b>true</b>, general-purpose zones that support Enterprise Edition transit routers are queried.
        ///     *   If you set <b>SupportMulticast</b> to <b>true</b>, zones in which Enterprise Edition transit routers support multicast are queried.</para>
        /// <list type="bullet">
        /// <item><description>On May 31, 2022, VPC-connected Enterprise Edition transit routers were optimized. Optimized Enterprise Edition transit routers do not require you to specify the primary and secondary zones when you connect VPCs to the Enterprise Edition transit routers. You can specify one or more zones.<list type="bullet">
        /// <item><description>If your Enterprise Edition transit router has not been optimized, you must specify the primary and secondary zones when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>MasterZones</b> and <b>SlaveZones</b> to query the primary and secondary zones.</description></item>
        /// <item><description>If your Enterprise Edition transit router has been optimized, you can specify a zone as needed when you connect a VPC to your Enterprise Edition transit router. After you call <b>ListTransitRouterAvailableResource</b>, you can call <b>AvailableZones</b> to query the zones.
        /// For more information about the optimization, see <a href="https://help.aliyun.com/document_detail/434191.html">Announcement: Optimization on VPC-connected Enterprise Edition transit routers</a>.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterAvailableResourceRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterAvailableResourceResponse
        /// </returns>
        public async Task<ListTransitRouterAvailableResourceResponse> ListTransitRouterAvailableResourceAsync(ListTransitRouterAvailableResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterAvailableResourceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CIDR blocks of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrResponse
        /// </returns>
        public ListTransitRouterCidrResponse ListTransitRouterCidrWithOptions(ListTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterCidrResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CIDR blocks of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrResponse
        /// </returns>
        public async Task<ListTransitRouterCidrResponse> ListTransitRouterCidrWithOptionsAsync(ListTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterCidrResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CIDR blocks of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrResponse
        /// </returns>
        public ListTransitRouterCidrResponse ListTransitRouterCidr(ListTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterCidrWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CIDR blocks of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrResponse
        /// </returns>
        public async Task<ListTransitRouterCidrResponse> ListTransitRouterCidrAsync(ListTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterCidrWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries how a CIDR block is allocated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrAllocationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrAllocationResponse
        /// </returns>
        public ListTransitRouterCidrAllocationResponse ListTransitRouterCidrAllocationWithOptions(ListTransitRouterCidrAllocationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachmentId))
            {
                query["AttachmentId"] = request.AttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachmentName))
            {
                query["AttachmentName"] = request.AttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrBlock))
            {
                query["CidrBlock"] = request.CidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DedicatedOwnerId))
            {
                query["DedicatedOwnerId"] = request.DedicatedOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterCidrAllocation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterCidrAllocationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries how a CIDR block is allocated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrAllocationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrAllocationResponse
        /// </returns>
        public async Task<ListTransitRouterCidrAllocationResponse> ListTransitRouterCidrAllocationWithOptionsAsync(ListTransitRouterCidrAllocationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachmentId))
            {
                query["AttachmentId"] = request.AttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachmentName))
            {
                query["AttachmentName"] = request.AttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrBlock))
            {
                query["CidrBlock"] = request.CidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DedicatedOwnerId))
            {
                query["DedicatedOwnerId"] = request.DedicatedOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterCidrAllocation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterCidrAllocationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries how a CIDR block is allocated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrAllocationRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrAllocationResponse
        /// </returns>
        public ListTransitRouterCidrAllocationResponse ListTransitRouterCidrAllocation(ListTransitRouterCidrAllocationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterCidrAllocationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries how a CIDR block is allocated.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterCidrAllocationRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterCidrAllocationResponse
        /// </returns>
        public async Task<ListTransitRouterCidrAllocationResponse> ListTransitRouterCidrAllocationAsync(ListTransitRouterCidrAllocationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterCidrAllocationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about Express Connect Router (ECR) connections on an Enterprise Edition transit router, such as the connection status, connection ID, and the payer of instance fees.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query ECR connection information:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of an Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of an Enterprise Edition transit router and the ID of the region in which the Enterprise Edition transit router is deployed.</description></item>
        /// <item><description>Configure the <b>TransitRouterAttachmentId</b> parameter to specify the ECR connection that you want to query.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterEcrAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterEcrAttachmentsResponse
        /// </returns>
        public ListTransitRouterEcrAttachmentsResponse ListTransitRouterEcrAttachmentsWithOptions(ListTransitRouterEcrAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterEcrAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterEcrAttachmentsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about Express Connect Router (ECR) connections on an Enterprise Edition transit router, such as the connection status, connection ID, and the payer of instance fees.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query ECR connection information:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of an Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of an Enterprise Edition transit router and the ID of the region in which the Enterprise Edition transit router is deployed.</description></item>
        /// <item><description>Configure the <b>TransitRouterAttachmentId</b> parameter to specify the ECR connection that you want to query.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterEcrAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterEcrAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterEcrAttachmentsResponse> ListTransitRouterEcrAttachmentsWithOptionsAsync(ListTransitRouterEcrAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterEcrAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterEcrAttachmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about Express Connect Router (ECR) connections on an Enterprise Edition transit router, such as the connection status, connection ID, and the payer of instance fees.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query ECR connection information:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of an Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of an Enterprise Edition transit router and the ID of the region in which the Enterprise Edition transit router is deployed.</description></item>
        /// <item><description>Configure the <b>TransitRouterAttachmentId</b> parameter to specify the ECR connection that you want to query.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterEcrAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterEcrAttachmentsResponse
        /// </returns>
        public ListTransitRouterEcrAttachmentsResponse ListTransitRouterEcrAttachments(ListTransitRouterEcrAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterEcrAttachmentsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about Express Connect Router (ECR) connections on an Enterprise Edition transit router, such as the connection status, connection ID, and the payer of instance fees.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query ECR connection information:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of an Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of an Enterprise Edition transit router and the ID of the region in which the Enterprise Edition transit router is deployed.</description></item>
        /// <item><description>Configure the <b>TransitRouterAttachmentId</b> parameter to specify the ECR connection that you want to query.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterEcrAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterEcrAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterEcrAttachmentsResponse> ListTransitRouterEcrAttachmentsAsync(ListTransitRouterEcrAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterEcrAttachmentsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether a multicast domain is associated with a vSwitch.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must set at least <b>TransitRouterMulticastDomainId</b> and <b>TransitRouterAttachmentId</b>. If you set <b>TransitRouterAttachmentId</b>, the information about the vSwitches in a virtual private cloud (VPC) that are associated with a multicast domain is returned. If you set <b>TransitRouterMulticastDomainId</b>, the information about the vSwitches that are associated with a multicast domain is returned.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <b>ListTransitRouterMulticastDomainAssociations</b>, make sure that all the request parameters are valid. If a request parameter is invalid, the system returns a <b>request ID</b> but does not return the vSwitches that are associated with the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainAssociationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainAssociationsResponse
        /// </returns>
        public ListTransitRouterMulticastDomainAssociationsResponse ListTransitRouterMulticastDomainAssociationsWithOptions(ListTransitRouterMulticastDomainAssociationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomainAssociations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainAssociationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether a multicast domain is associated with a vSwitch.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must set at least <b>TransitRouterMulticastDomainId</b> and <b>TransitRouterAttachmentId</b>. If you set <b>TransitRouterAttachmentId</b>, the information about the vSwitches in a virtual private cloud (VPC) that are associated with a multicast domain is returned. If you set <b>TransitRouterMulticastDomainId</b>, the information about the vSwitches that are associated with a multicast domain is returned.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <b>ListTransitRouterMulticastDomainAssociations</b>, make sure that all the request parameters are valid. If a request parameter is invalid, the system returns a <b>request ID</b> but does not return the vSwitches that are associated with the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainAssociationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainAssociationsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainAssociationsResponse> ListTransitRouterMulticastDomainAssociationsWithOptionsAsync(ListTransitRouterMulticastDomainAssociationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomainAssociations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainAssociationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether a multicast domain is associated with a vSwitch.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must set at least <b>TransitRouterMulticastDomainId</b> and <b>TransitRouterAttachmentId</b>. If you set <b>TransitRouterAttachmentId</b>, the information about the vSwitches in a virtual private cloud (VPC) that are associated with a multicast domain is returned. If you set <b>TransitRouterMulticastDomainId</b>, the information about the vSwitches that are associated with a multicast domain is returned.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <b>ListTransitRouterMulticastDomainAssociations</b>, make sure that all the request parameters are valid. If a request parameter is invalid, the system returns a <b>request ID</b> but does not return the vSwitches that are associated with the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainAssociationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainAssociationsResponse
        /// </returns>
        public ListTransitRouterMulticastDomainAssociationsResponse ListTransitRouterMulticastDomainAssociations(ListTransitRouterMulticastDomainAssociationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterMulticastDomainAssociationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether a multicast domain is associated with a vSwitch.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You must set at least <b>TransitRouterMulticastDomainId</b> and <b>TransitRouterAttachmentId</b>. If you set <b>TransitRouterAttachmentId</b>, the information about the vSwitches in a virtual private cloud (VPC) that are associated with a multicast domain is returned. If you set <b>TransitRouterMulticastDomainId</b>, the information about the vSwitches that are associated with a multicast domain is returned.</para>
        /// <list type="bullet">
        /// <item><description>Before you call <b>ListTransitRouterMulticastDomainAssociations</b>, make sure that all the request parameters are valid. If a request parameter is invalid, the system returns a <b>request ID</b> but does not return the vSwitches that are associated with the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainAssociationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainAssociationsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainAssociationsResponse> ListTransitRouterMulticastDomainAssociationsAsync(ListTransitRouterMulticastDomainAssociationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterMulticastDomainAssociationsWithOptionsAsync(request, runtime);
        }

        /// <param name="request">
        /// ListTransitRouterMulticastDomainVSwitchesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainVSwitchesResponse
        /// </returns>
        public ListTransitRouterMulticastDomainVSwitchesResponse ListTransitRouterMulticastDomainVSwitchesWithOptions(ListTransitRouterMulticastDomainVSwitchesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomainVSwitches",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainVSwitchesResponse>(CallApi(params_, req, runtime));
        }

        /// <param name="request">
        /// ListTransitRouterMulticastDomainVSwitchesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainVSwitchesResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainVSwitchesResponse> ListTransitRouterMulticastDomainVSwitchesWithOptionsAsync(ListTransitRouterMulticastDomainVSwitchesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomainVSwitches",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainVSwitchesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <param name="request">
        /// ListTransitRouterMulticastDomainVSwitchesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainVSwitchesResponse
        /// </returns>
        public ListTransitRouterMulticastDomainVSwitchesResponse ListTransitRouterMulticastDomainVSwitches(ListTransitRouterMulticastDomainVSwitchesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterMulticastDomainVSwitchesWithOptions(request, runtime);
        }

        /// <param name="request">
        /// ListTransitRouterMulticastDomainVSwitchesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainVSwitchesResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainVSwitchesResponse> ListTransitRouterMulticastDomainVSwitchesAsync(ListTransitRouterMulticastDomainVSwitchesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterMulticastDomainVSwitchesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a multicast domain, such as the status, ID, and description.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  If you configure one of the RegionId and CenId parameters, you must configure the other parameter. Otherwise, no information about the multicast domain is returned. You can configure only one of the TransitRouterId and TransitRouterMulticastDomainId parameters.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the information about the multicast domain is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainsResponse
        /// </returns>
        public ListTransitRouterMulticastDomainsResponse ListTransitRouterMulticastDomainsWithOptions(ListTransitRouterMulticastDomainsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomains",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a multicast domain, such as the status, ID, and description.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  If you configure one of the RegionId and CenId parameters, you must configure the other parameter. Otherwise, no information about the multicast domain is returned. You can configure only one of the TransitRouterId and TransitRouterMulticastDomainId parameters.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the information about the multicast domain is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainsResponse> ListTransitRouterMulticastDomainsWithOptionsAsync(ListTransitRouterMulticastDomainsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastDomains",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastDomainsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a multicast domain, such as the status, ID, and description.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  If you configure one of the RegionId and CenId parameters, you must configure the other parameter. Otherwise, no information about the multicast domain is returned. You can configure only one of the TransitRouterId and TransitRouterMulticastDomainId parameters.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the information about the multicast domain is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainsResponse
        /// </returns>
        public ListTransitRouterMulticastDomainsResponse ListTransitRouterMulticastDomains(ListTransitRouterMulticastDomainsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterMulticastDomainsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a multicast domain, such as the status, ID, and description.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  If you configure one of the RegionId and CenId parameters, you must configure the other parameter. Otherwise, no information about the multicast domain is returned. You can configure only one of the TransitRouterId and TransitRouterMulticastDomainId parameters.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that all the request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned but the information about the multicast domain is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastDomainsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastDomainsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastDomainsResponse> ListTransitRouterMulticastDomainsAsync(ListTransitRouterMulticastDomainsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterMulticastDomainsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the detailed information about the multicast members and sources in a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the multicast sources and members in a multicast domain. Multicast sources and members are also known as multicast resources.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>GroupIpAddress</b>, the system queries multicast resources in the multicast domain by multicast group.</description></item>
        /// <item><description>If you set <b>VSwitchIds</b>, the system queries multicast resources in the multicast domain by vSwitch.</description></item>
        /// <item><description>If you set <b>PeerTransitRouterMulticastDomains</b>, the system queries multicast resources that are also deployed in a different region.</description></item>
        /// <item><description>If you set <b>ResourceType</b>, the system queries the multicast resources of the specified type in the multicast domain.</description></item>
        /// <item><description>If you set <b>ResourceId</b>, the system queries multicast resources by resource.</description></item>
        /// <item><description>If you set only <b>TransitRouterMulticastDomainId</b>, the system queries all the multicast resources in the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastGroupsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastGroupsResponse
        /// </returns>
        public ListTransitRouterMulticastGroupsResponse ListTransitRouterMulticastGroupsWithOptions(ListTransitRouterMulticastGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsGroupMember))
            {
                query["IsGroupMember"] = request.IsGroupMember;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsGroupSource))
            {
                query["IsGroupSource"] = request.IsGroupSource;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastGroups",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastGroupsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the detailed information about the multicast members and sources in a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the multicast sources and members in a multicast domain. Multicast sources and members are also known as multicast resources.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>GroupIpAddress</b>, the system queries multicast resources in the multicast domain by multicast group.</description></item>
        /// <item><description>If you set <b>VSwitchIds</b>, the system queries multicast resources in the multicast domain by vSwitch.</description></item>
        /// <item><description>If you set <b>PeerTransitRouterMulticastDomains</b>, the system queries multicast resources that are also deployed in a different region.</description></item>
        /// <item><description>If you set <b>ResourceType</b>, the system queries the multicast resources of the specified type in the multicast domain.</description></item>
        /// <item><description>If you set <b>ResourceId</b>, the system queries multicast resources by resource.</description></item>
        /// <item><description>If you set only <b>TransitRouterMulticastDomainId</b>, the system queries all the multicast resources in the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastGroupsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastGroupsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastGroupsResponse> ListTransitRouterMulticastGroupsWithOptionsAsync(ListTransitRouterMulticastGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsGroupMember))
            {
                query["IsGroupMember"] = request.IsGroupMember;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsGroupSource))
            {
                query["IsGroupSource"] = request.IsGroupSource;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchIds))
            {
                query["VSwitchIds"] = request.VSwitchIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterMulticastGroups",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterMulticastGroupsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the detailed information about the multicast members and sources in a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the multicast sources and members in a multicast domain. Multicast sources and members are also known as multicast resources.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>GroupIpAddress</b>, the system queries multicast resources in the multicast domain by multicast group.</description></item>
        /// <item><description>If you set <b>VSwitchIds</b>, the system queries multicast resources in the multicast domain by vSwitch.</description></item>
        /// <item><description>If you set <b>PeerTransitRouterMulticastDomains</b>, the system queries multicast resources that are also deployed in a different region.</description></item>
        /// <item><description>If you set <b>ResourceType</b>, the system queries the multicast resources of the specified type in the multicast domain.</description></item>
        /// <item><description>If you set <b>ResourceId</b>, the system queries multicast resources by resource.</description></item>
        /// <item><description>If you set only <b>TransitRouterMulticastDomainId</b>, the system queries all the multicast resources in the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastGroupsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastGroupsResponse
        /// </returns>
        public ListTransitRouterMulticastGroupsResponse ListTransitRouterMulticastGroups(ListTransitRouterMulticastGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterMulticastGroupsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the detailed information about the multicast members and sources in a multicast domain.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the multicast sources and members in a multicast domain. Multicast sources and members are also known as multicast resources.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>GroupIpAddress</b>, the system queries multicast resources in the multicast domain by multicast group.</description></item>
        /// <item><description>If you set <b>VSwitchIds</b>, the system queries multicast resources in the multicast domain by vSwitch.</description></item>
        /// <item><description>If you set <b>PeerTransitRouterMulticastDomains</b>, the system queries multicast resources that are also deployed in a different region.</description></item>
        /// <item><description>If you set <b>ResourceType</b>, the system queries the multicast resources of the specified type in the multicast domain.</description></item>
        /// <item><description>If you set <b>ResourceId</b>, the system queries multicast resources by resource.</description></item>
        /// <item><description>If you set only <b>TransitRouterMulticastDomainId</b>, the system queries all the multicast resources in the multicast domain.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterMulticastGroupsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterMulticastGroupsResponse
        /// </returns>
        public async Task<ListTransitRouterMulticastGroupsResponse> ListTransitRouterMulticastGroupsAsync(ListTransitRouterMulticastGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterMulticastGroupsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries inter-region connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query inter-region connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Cloud Enterprise Network (CEN) instance and the ID of the region where the transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterPeerAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPeerAttachmentsResponse
        /// </returns>
        public ListTransitRouterPeerAttachmentsResponse ListTransitRouterPeerAttachmentsWithOptions(ListTransitRouterPeerAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterPeerAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterPeerAttachmentsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries inter-region connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query inter-region connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Cloud Enterprise Network (CEN) instance and the ID of the region where the transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterPeerAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPeerAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterPeerAttachmentsResponse> ListTransitRouterPeerAttachmentsWithOptionsAsync(ListTransitRouterPeerAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterPeerAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterPeerAttachmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries inter-region connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query inter-region connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Cloud Enterprise Network (CEN) instance and the ID of the region where the transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterPeerAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPeerAttachmentsResponse
        /// </returns>
        public ListTransitRouterPeerAttachmentsResponse ListTransitRouterPeerAttachments(ListTransitRouterPeerAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterPeerAttachmentsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries inter-region connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query inter-region connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Query all inter-region connections on an Enterprise Edition transit router by specifying the ID of the Cloud Enterprise Network (CEN) instance and the ID of the region where the transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterPeerAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPeerAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterPeerAttachmentsResponse> ListTransitRouterPeerAttachmentsAsync(ListTransitRouterPeerAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterPeerAttachmentsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the prefix lists that are associated with an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPrefixListAssociationResponse
        /// </returns>
        public ListTransitRouterPrefixListAssociationResponse ListTransitRouterPrefixListAssociationWithOptions(ListTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopInstanceId))
            {
                query["NextHopInstanceId"] = request.NextHopInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerUid))
            {
                query["OwnerUid"] = request.OwnerUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterPrefixListAssociationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the prefix lists that are associated with an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterPrefixListAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<ListTransitRouterPrefixListAssociationResponse> ListTransitRouterPrefixListAssociationWithOptionsAsync(ListTransitRouterPrefixListAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHop))
            {
                query["NextHop"] = request.NextHop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopInstanceId))
            {
                query["NextHopInstanceId"] = request.NextHopInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextHopType))
            {
                query["NextHopType"] = request.NextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerUid))
            {
                query["OwnerUid"] = request.OwnerUid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterTableId))
            {
                query["TransitRouterTableId"] = request.TransitRouterTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterPrefixListAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterPrefixListAssociationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the prefix lists that are associated with an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPrefixListAssociationResponse
        /// </returns>
        public ListTransitRouterPrefixListAssociationResponse ListTransitRouterPrefixListAssociation(ListTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterPrefixListAssociationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the prefix lists that are associated with an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterPrefixListAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterPrefixListAssociationResponse
        /// </returns>
        public async Task<ListTransitRouterPrefixListAssociationResponse> ListTransitRouterPrefixListAssociationAsync(ListTransitRouterPrefixListAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterPrefixListAssociationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteEntriesResponse
        /// </returns>
        public ListTransitRouterRouteEntriesResponse ListTransitRouterRouteEntriesWithOptions(ListTransitRouterRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteFilter))
            {
                query["RouteFilter"] = request.RouteFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryIds))
            {
                query["TransitRouterRouteEntryIds"] = request.TransitRouterRouteEntryIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNames))
            {
                query["TransitRouterRouteEntryNames"] = request.TransitRouterRouteEntryNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopResourceId))
            {
                query["TransitRouterRouteEntryNextHopResourceId"] = request.TransitRouterRouteEntryNextHopResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopResourceType))
            {
                query["TransitRouterRouteEntryNextHopResourceType"] = request.TransitRouterRouteEntryNextHopResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryOriginResourceId))
            {
                query["TransitRouterRouteEntryOriginResourceId"] = request.TransitRouterRouteEntryOriginResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryOriginResourceType))
            {
                query["TransitRouterRouteEntryOriginResourceType"] = request.TransitRouterRouteEntryOriginResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryStatus))
            {
                query["TransitRouterRouteEntryStatus"] = request.TransitRouterRouteEntryStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryType))
            {
                query["TransitRouterRouteEntryType"] = request.TransitRouterRouteEntryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteEntriesResponse
        /// </returns>
        public async Task<ListTransitRouterRouteEntriesResponse> ListTransitRouterRouteEntriesWithOptionsAsync(ListTransitRouterRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrefixListId))
            {
                query["PrefixListId"] = request.PrefixListId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteFilter))
            {
                query["RouteFilter"] = request.RouteFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDestinationCidrBlock))
            {
                query["TransitRouterRouteEntryDestinationCidrBlock"] = request.TransitRouterRouteEntryDestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryIds))
            {
                query["TransitRouterRouteEntryIds"] = request.TransitRouterRouteEntryIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNames))
            {
                query["TransitRouterRouteEntryNames"] = request.TransitRouterRouteEntryNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopId))
            {
                query["TransitRouterRouteEntryNextHopId"] = request.TransitRouterRouteEntryNextHopId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopResourceId))
            {
                query["TransitRouterRouteEntryNextHopResourceId"] = request.TransitRouterRouteEntryNextHopResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopResourceType))
            {
                query["TransitRouterRouteEntryNextHopResourceType"] = request.TransitRouterRouteEntryNextHopResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryNextHopType))
            {
                query["TransitRouterRouteEntryNextHopType"] = request.TransitRouterRouteEntryNextHopType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryOriginResourceId))
            {
                query["TransitRouterRouteEntryOriginResourceId"] = request.TransitRouterRouteEntryOriginResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryOriginResourceType))
            {
                query["TransitRouterRouteEntryOriginResourceType"] = request.TransitRouterRouteEntryOriginResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryStatus))
            {
                query["TransitRouterRouteEntryStatus"] = request.TransitRouterRouteEntryStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryType))
            {
                query["TransitRouterRouteEntryType"] = request.TransitRouterRouteEntryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteEntriesResponse
        /// </returns>
        public ListTransitRouterRouteEntriesResponse ListTransitRouterRouteEntries(ListTransitRouterRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details about routes in the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteEntriesResponse
        /// </returns>
        public async Task<ListTransitRouterRouteEntriesResponse> ListTransitRouterRouteEntriesAsync(ListTransitRouterRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterRouteEntriesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the associated forwarding correlations that are created for a route table of an Enterprise Edition transit router or a network instance connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you call <b>ListTransitRouterRouteTableAssociations</b>, you must set at least one of <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>TransitRouterRouteTableId</b>, the network instance connections that are in associated forwarding correlation with a route table of an Enterprise Edition transit router are queried.</description></item>
        /// <item><description>If you set only <b>TransitRouterAttachmentId</b>, the route table of an Enterprise Edition transit router that is in associated forwarding correlation with a network instance connection is queried.</description></item>
        /// <item><description>If you set both <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>, the associated forwarding correlations between a specified network instance connection and a specified route table of an Enterprise Edition transit router are queried.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, the information about the associated forwarding correlation is returned.</description></item>
        /// <item><description>If no associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, <b>TransitRouterAssociations</b> in the response is empty.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTableAssociationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTableAssociationsResponse
        /// </returns>
        public ListTransitRouterRouteTableAssociationsResponse ListTransitRouterRouteTableAssociationsWithOptions(ListTransitRouterRouteTableAssociationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceId))
            {
                query["TransitRouterAttachmentResourceId"] = request.TransitRouterAttachmentResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceType))
            {
                query["TransitRouterAttachmentResourceType"] = request.TransitRouterAttachmentResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTableAssociations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTableAssociationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the associated forwarding correlations that are created for a route table of an Enterprise Edition transit router or a network instance connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you call <b>ListTransitRouterRouteTableAssociations</b>, you must set at least one of <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>TransitRouterRouteTableId</b>, the network instance connections that are in associated forwarding correlation with a route table of an Enterprise Edition transit router are queried.</description></item>
        /// <item><description>If you set only <b>TransitRouterAttachmentId</b>, the route table of an Enterprise Edition transit router that is in associated forwarding correlation with a network instance connection is queried.</description></item>
        /// <item><description>If you set both <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>, the associated forwarding correlations between a specified network instance connection and a specified route table of an Enterprise Edition transit router are queried.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, the information about the associated forwarding correlation is returned.</description></item>
        /// <item><description>If no associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, <b>TransitRouterAssociations</b> in the response is empty.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTableAssociationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTableAssociationsResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTableAssociationsResponse> ListTransitRouterRouteTableAssociationsWithOptionsAsync(ListTransitRouterRouteTableAssociationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceId))
            {
                query["TransitRouterAttachmentResourceId"] = request.TransitRouterAttachmentResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceType))
            {
                query["TransitRouterAttachmentResourceType"] = request.TransitRouterAttachmentResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTableAssociations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTableAssociationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the associated forwarding correlations that are created for a route table of an Enterprise Edition transit router or a network instance connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you call <b>ListTransitRouterRouteTableAssociations</b>, you must set at least one of <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>TransitRouterRouteTableId</b>, the network instance connections that are in associated forwarding correlation with a route table of an Enterprise Edition transit router are queried.</description></item>
        /// <item><description>If you set only <b>TransitRouterAttachmentId</b>, the route table of an Enterprise Edition transit router that is in associated forwarding correlation with a network instance connection is queried.</description></item>
        /// <item><description>If you set both <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>, the associated forwarding correlations between a specified network instance connection and a specified route table of an Enterprise Edition transit router are queried.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, the information about the associated forwarding correlation is returned.</description></item>
        /// <item><description>If no associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, <b>TransitRouterAssociations</b> in the response is empty.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTableAssociationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTableAssociationsResponse
        /// </returns>
        public ListTransitRouterRouteTableAssociationsResponse ListTransitRouterRouteTableAssociations(ListTransitRouterRouteTableAssociationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterRouteTableAssociationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the associated forwarding correlations that are created for a route table of an Enterprise Edition transit router or a network instance connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you call <b>ListTransitRouterRouteTableAssociations</b>, you must set at least one of <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>.</para>
        /// <list type="bullet">
        /// <item><description>If you set only <b>TransitRouterRouteTableId</b>, the network instance connections that are in associated forwarding correlation with a route table of an Enterprise Edition transit router are queried.</description></item>
        /// <item><description>If you set only <b>TransitRouterAttachmentId</b>, the route table of an Enterprise Edition transit router that is in associated forwarding correlation with a network instance connection is queried.</description></item>
        /// <item><description>If you set both <b>TransitRouterRouteTableId</b> and <b>TransitRouterAttachmentId</b>, the associated forwarding correlations between a specified network instance connection and a specified route table of an Enterprise Edition transit router are queried.<list type="bullet">
        /// <item><description>If an associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, the information about the associated forwarding correlation is returned.</description></item>
        /// <item><description>If no associated forwarding correlation is created between the network instance connection and the route table of the Enterprise Edition transit router, <b>TransitRouterAssociations</b> in the response is empty.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTableAssociationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTableAssociationsResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTableAssociationsResponse> ListTransitRouterRouteTableAssociationsAsync(ListTransitRouterRouteTableAssociationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterRouteTableAssociationsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route learning correlations of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablePropagationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablePropagationsResponse
        /// </returns>
        public ListTransitRouterRouteTablePropagationsResponse ListTransitRouterRouteTablePropagationsWithOptions(ListTransitRouterRouteTablePropagationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceId))
            {
                query["TransitRouterAttachmentResourceId"] = request.TransitRouterAttachmentResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceType))
            {
                query["TransitRouterAttachmentResourceType"] = request.TransitRouterAttachmentResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTablePropagations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTablePropagationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route learning correlations of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablePropagationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablePropagationsResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTablePropagationsResponse> ListTransitRouterRouteTablePropagationsWithOptionsAsync(ListTransitRouterRouteTablePropagationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceId))
            {
                query["TransitRouterAttachmentResourceId"] = request.TransitRouterAttachmentResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentResourceType))
            {
                query["TransitRouterAttachmentResourceType"] = request.TransitRouterAttachmentResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTablePropagations",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTablePropagationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route learning correlations of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablePropagationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablePropagationsResponse
        /// </returns>
        public ListTransitRouterRouteTablePropagationsResponse ListTransitRouterRouteTablePropagations(ListTransitRouterRouteTablePropagationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterRouteTablePropagationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route learning correlations of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablePropagationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablePropagationsResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTablePropagationsResponse> ListTransitRouterRouteTablePropagationsAsync(ListTransitRouterRouteTablePropagationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterRouteTablePropagationsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablesResponse
        /// </returns>
        public ListTransitRouterRouteTablesResponse ListTransitRouterRouteTablesWithOptions(ListTransitRouterRouteTablesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableIds))
            {
                query["TransitRouterRouteTableIds"] = request.TransitRouterRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableNames))
            {
                query["TransitRouterRouteTableNames"] = request.TransitRouterRouteTableNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableStatus))
            {
                query["TransitRouterRouteTableStatus"] = request.TransitRouterRouteTableStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableType))
            {
                query["TransitRouterRouteTableType"] = request.TransitRouterRouteTableType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTables",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTablesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablesResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTablesResponse> ListTransitRouterRouteTablesWithOptionsAsync(ListTransitRouterRouteTablesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableIds))
            {
                query["TransitRouterRouteTableIds"] = request.TransitRouterRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableNames))
            {
                query["TransitRouterRouteTableNames"] = request.TransitRouterRouteTableNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableStatus))
            {
                query["TransitRouterRouteTableStatus"] = request.TransitRouterRouteTableStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableType))
            {
                query["TransitRouterRouteTableType"] = request.TransitRouterRouteTableType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterRouteTables",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterRouteTablesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablesResponse
        /// </returns>
        public ListTransitRouterRouteTablesResponse ListTransitRouterRouteTables(ListTransitRouterRouteTablesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterRouteTablesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the route tables of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTransitRouterRouteTablesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterRouteTablesResponse
        /// </returns>
        public async Task<ListTransitRouterRouteTablesResponse> ListTransitRouterRouteTablesAsync(ListTransitRouterRouteTablesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterRouteTablesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the virtual border router (VBR) connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VBR connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVbrAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVbrAttachmentsResponse
        /// </returns>
        public ListTransitRouterVbrAttachmentsResponse ListTransitRouterVbrAttachmentsWithOptions(ListTransitRouterVbrAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVbrAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVbrAttachmentsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the virtual border router (VBR) connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VBR connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVbrAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVbrAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVbrAttachmentsResponse> ListTransitRouterVbrAttachmentsWithOptionsAsync(ListTransitRouterVbrAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVbrAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVbrAttachmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the virtual border router (VBR) connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VBR connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVbrAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVbrAttachmentsResponse
        /// </returns>
        public ListTransitRouterVbrAttachmentsResponse ListTransitRouterVbrAttachments(ListTransitRouterVbrAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterVbrAttachmentsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the virtual border router (VBR) connections on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VBR connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVbrAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVbrAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVbrAttachmentsResponse> ListTransitRouterVbrAttachmentsAsync(ListTransitRouterVbrAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterVbrAttachmentsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status, billing method, zones, vSwitches, and elastic network interfaces (ENIs) of virtual private cloud (VPC) connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VPC connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the region where the Enterprise Edition transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpcAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpcAttachmentsResponse
        /// </returns>
        public ListTransitRouterVpcAttachmentsResponse ListTransitRouterVpcAttachmentsWithOptions(ListTransitRouterVpcAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVpcAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVpcAttachmentsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status, billing method, zones, vSwitches, and elastic network interfaces (ENIs) of virtual private cloud (VPC) connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VPC connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the region where the Enterprise Edition transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpcAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpcAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVpcAttachmentsResponse> ListTransitRouterVpcAttachmentsWithOptionsAsync(ListTransitRouterVpcAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVpcAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVpcAttachmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status, billing method, zones, vSwitches, and elastic network interfaces (ENIs) of virtual private cloud (VPC) connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VPC connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the region where the Enterprise Edition transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpcAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpcAttachmentsResponse
        /// </returns>
        public ListTransitRouterVpcAttachmentsResponse ListTransitRouterVpcAttachments(ListTransitRouterVpcAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterVpcAttachmentsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status, billing method, zones, vSwitches, and elastic network interfaces (ENIs) of virtual private cloud (VPC) connections.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to query VPC connections on an Enterprise Edition transit router:</para>
        /// <list type="bullet">
        /// <item><description>Specify the ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the relevant Cloud Enterprise Network (CEN) instance and the region ID of the Enterprise Edition transit router.</description></item>
        /// <item><description>Specify the ID of the region where the Enterprise Edition transit router is deployed.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpcAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpcAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVpcAttachmentsResponse> ListTransitRouterVpcAttachmentsAsync(ListTransitRouterVpcAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterVpcAttachmentsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about VPN attachments, such as the status and billing method of a VPN attachment, and the ID of an IPsec-VPN connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to call the ListTransitRouterVpnAttachments operation:</para>
        /// <list type="bullet">
        /// <item><description>Specify only the <b>TransitRouterAttachmentId</b> parameter to query the information about a VPN attachment.</description></item>
        /// <item><description>Specify only the <b>TransitRouterId</b> parameter to query the information about all VPN attachments on a transit router.</description></item>
        /// <item><description>Specify the <b>CenId</b> and <b>RegionId</b> parameter to query the information about VPN attachments in a specified region.
        /// Before you call the <b>ListTransitRouterVpnAttachments</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the information about the VPN attachments is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpnAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpnAttachmentsResponse
        /// </returns>
        public ListTransitRouterVpnAttachmentsResponse ListTransitRouterVpnAttachmentsWithOptions(ListTransitRouterVpnAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVpnAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVpnAttachmentsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about VPN attachments, such as the status and billing method of a VPN attachment, and the ID of an IPsec-VPN connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to call the ListTransitRouterVpnAttachments operation:</para>
        /// <list type="bullet">
        /// <item><description>Specify only the <b>TransitRouterAttachmentId</b> parameter to query the information about a VPN attachment.</description></item>
        /// <item><description>Specify only the <b>TransitRouterId</b> parameter to query the information about all VPN attachments on a transit router.</description></item>
        /// <item><description>Specify the <b>CenId</b> and <b>RegionId</b> parameter to query the information about VPN attachments in a specified region.
        /// Before you call the <b>ListTransitRouterVpnAttachments</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the information about the VPN attachments is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpnAttachmentsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpnAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVpnAttachmentsResponse> ListTransitRouterVpnAttachmentsWithOptionsAsync(ListTransitRouterVpnAttachmentsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxResults))
            {
                query["MaxResults"] = request.MaxResults;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouterVpnAttachments",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRouterVpnAttachmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about VPN attachments, such as the status and billing method of a VPN attachment, and the ID of an IPsec-VPN connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to call the ListTransitRouterVpnAttachments operation:</para>
        /// <list type="bullet">
        /// <item><description>Specify only the <b>TransitRouterAttachmentId</b> parameter to query the information about a VPN attachment.</description></item>
        /// <item><description>Specify only the <b>TransitRouterId</b> parameter to query the information about all VPN attachments on a transit router.</description></item>
        /// <item><description>Specify the <b>CenId</b> and <b>RegionId</b> parameter to query the information about VPN attachments in a specified region.
        /// Before you call the <b>ListTransitRouterVpnAttachments</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the information about the VPN attachments is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpnAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpnAttachmentsResponse
        /// </returns>
        public ListTransitRouterVpnAttachmentsResponse ListTransitRouterVpnAttachments(ListTransitRouterVpnAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRouterVpnAttachmentsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about VPN attachments, such as the status and billing method of a VPN attachment, and the ID of an IPsec-VPN connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can use the following methods to call the ListTransitRouterVpnAttachments operation:</para>
        /// <list type="bullet">
        /// <item><description>Specify only the <b>TransitRouterAttachmentId</b> parameter to query the information about a VPN attachment.</description></item>
        /// <item><description>Specify only the <b>TransitRouterId</b> parameter to query the information about all VPN attachments on a transit router.</description></item>
        /// <item><description>Specify the <b>CenId</b> and <b>RegionId</b> parameter to query the information about VPN attachments in a specified region.
        /// Before you call the <b>ListTransitRouterVpnAttachments</b> operation, make sure that all request parameters are valid. If a request parameter is invalid, a <b>request ID</b> is returned, but the information about the VPN attachments is not returned.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRouterVpnAttachmentsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRouterVpnAttachmentsResponse
        /// </returns>
        public async Task<ListTransitRouterVpnAttachmentsResponse> ListTransitRouterVpnAttachmentsAsync(ListTransitRouterVpnAttachmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRouterVpnAttachmentsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about transit routers that are connected to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>RegionId</b> and <b>TransitRouterId</b> parameters based on your requirements.</para>
        /// <list type="bullet">
        /// <item><description>If you do not set <b>RegionId</b> or <b>TransitRouterId</b>, the system queries all transit routers that are connected to the specified CEN instance.</description></item>
        /// <item><description>If you set only <b>RegionId</b>, the system queries transit routers that are deployed in the specified region.</description></item>
        /// <item><description>If you set only <b>TransitRouterId</b>, the system queries the specified transit router.</description></item>
        /// <item><description>If you set both <b>RegionId</b> and <b>TransitRouterId</b>, the system queries the specified transit router in the specified region.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRoutersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRoutersResponse
        /// </returns>
        public ListTransitRoutersResponse ListTransitRoutersWithOptions(ListTransitRoutersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureFilter))
            {
                query["FeatureFilter"] = request.FeatureFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouters",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRoutersResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about transit routers that are connected to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>RegionId</b> and <b>TransitRouterId</b> parameters based on your requirements.</para>
        /// <list type="bullet">
        /// <item><description>If you do not set <b>RegionId</b> or <b>TransitRouterId</b>, the system queries all transit routers that are connected to the specified CEN instance.</description></item>
        /// <item><description>If you set only <b>RegionId</b>, the system queries transit routers that are deployed in the specified region.</description></item>
        /// <item><description>If you set only <b>TransitRouterId</b>, the system queries the specified transit router.</description></item>
        /// <item><description>If you set both <b>RegionId</b> and <b>TransitRouterId</b>, the system queries the specified transit router in the specified region.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRoutersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRoutersResponse
        /// </returns>
        public async Task<ListTransitRoutersResponse> ListTransitRoutersWithOptionsAsync(ListTransitRoutersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureFilter))
            {
                query["FeatureFilter"] = request.FeatureFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTransitRouters",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTransitRoutersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about transit routers that are connected to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>RegionId</b> and <b>TransitRouterId</b> parameters based on your requirements.</para>
        /// <list type="bullet">
        /// <item><description>If you do not set <b>RegionId</b> or <b>TransitRouterId</b>, the system queries all transit routers that are connected to the specified CEN instance.</description></item>
        /// <item><description>If you set only <b>RegionId</b>, the system queries transit routers that are deployed in the specified region.</description></item>
        /// <item><description>If you set only <b>TransitRouterId</b>, the system queries the specified transit router.</description></item>
        /// <item><description>If you set both <b>RegionId</b> and <b>TransitRouterId</b>, the system queries the specified transit router in the specified region.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRoutersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRoutersResponse
        /// </returns>
        public ListTransitRoutersResponse ListTransitRouters(ListTransitRoutersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTransitRoutersWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about transit routers that are connected to a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can set the <b>RegionId</b> and <b>TransitRouterId</b> parameters based on your requirements.</para>
        /// <list type="bullet">
        /// <item><description>If you do not set <b>RegionId</b> or <b>TransitRouterId</b>, the system queries all transit routers that are connected to the specified CEN instance.</description></item>
        /// <item><description>If you set only <b>RegionId</b>, the system queries transit routers that are deployed in the specified region.</description></item>
        /// <item><description>If you set only <b>TransitRouterId</b>, the system queries the specified transit router.</description></item>
        /// <item><description>If you set both <b>RegionId</b> and <b>TransitRouterId</b>, the system queries the specified transit router in the specified region.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListTransitRoutersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTransitRoutersResponse
        /// </returns>
        public async Task<ListTransitRoutersResponse> ListTransitRoutersAsync(ListTransitRoutersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTransitRoutersWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>ModifyCenAttribute</em>* is an asynchronous operation. After you send a request, the system returns the <b>request ID</b> but the operation is still being performed in the system background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Modifying</b> state, the CEN instance is being modified. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenAttributeResponse
        /// </returns>
        public ModifyCenAttributeResponse ModifyCenAttributeWithOptions(ModifyCenAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>ModifyCenAttribute</em>* is an asynchronous operation. After you send a request, the system returns the <b>request ID</b> but the operation is still being performed in the system background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Modifying</b> state, the CEN instance is being modified. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenAttributeResponse
        /// </returns>
        public async Task<ModifyCenAttributeResponse> ModifyCenAttributeWithOptionsAsync(ModifyCenAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>ModifyCenAttribute</em>* is an asynchronous operation. After you send a request, the system returns the <b>request ID</b> but the operation is still being performed in the system background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Modifying</b> state, the CEN instance is being modified. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenAttributeResponse
        /// </returns>
        public ModifyCenAttributeResponse ModifyCenAttribute(ModifyCenAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCenAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>ModifyCenAttribute</em>* is an asynchronous operation. After you send a request, the system returns the <b>request ID</b> but the operation is still being performed in the system background. You can call <b>DescribeCens</b> to query the status of a CEN instance.</para>
        /// <list type="bullet">
        /// <item><description>If a CEN instance is in the <b>Modifying</b> state, the CEN instance is being modified. You can query the CEN instance but cannot perform other operations.</description></item>
        /// <item><description>If a CEN instance is in the <b>Active</b> state, the CEN instance is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenAttributeResponse
        /// </returns>
        public async Task<ModifyCenAttributeResponse> ModifyCenAttributeAsync(ModifyCenAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCenAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageAttributeResponse
        /// </returns>
        public ModifyCenBandwidthPackageAttributeResponse ModifyCenBandwidthPackageAttributeWithOptions(ModifyCenBandwidthPackageAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenBandwidthPackageAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenBandwidthPackageAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageAttributeResponse
        /// </returns>
        public async Task<ModifyCenBandwidthPackageAttributeResponse> ModifyCenBandwidthPackageAttributeWithOptionsAsync(ModifyCenBandwidthPackageAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenBandwidthPackageAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenBandwidthPackageAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageAttributeResponse
        /// </returns>
        public ModifyCenBandwidthPackageAttributeResponse ModifyCenBandwidthPackageAttribute(ModifyCenBandwidthPackageAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCenBandwidthPackageAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageAttributeResponse
        /// </returns>
        public async Task<ModifyCenBandwidthPackageAttributeResponse> ModifyCenBandwidthPackageAttributeAsync(ModifyCenBandwidthPackageAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCenBandwidthPackageAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the maximum bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageSpecResponse
        /// </returns>
        public ModifyCenBandwidthPackageSpecResponse ModifyCenBandwidthPackageSpecWithOptions(ModifyCenBandwidthPackageSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenBandwidthPackageSpec",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenBandwidthPackageSpecResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the maximum bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageSpecResponse
        /// </returns>
        public async Task<ModifyCenBandwidthPackageSpecResponse> ModifyCenBandwidthPackageSpecWithOptionsAsync(ModifyCenBandwidthPackageSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenBandwidthPackageSpec",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenBandwidthPackageSpecResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the maximum bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageSpecResponse
        /// </returns>
        public ModifyCenBandwidthPackageSpecResponse ModifyCenBandwidthPackageSpec(ModifyCenBandwidthPackageSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCenBandwidthPackageSpecWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the maximum bandwidth of a bandwidth plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyCenBandwidthPackageSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenBandwidthPackageSpecResponse
        /// </returns>
        public async Task<ModifyCenBandwidthPackageSpecResponse> ModifyCenBandwidthPackageSpecAsync(ModifyCenBandwidthPackageSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCenBandwidthPackageSpecWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a routing policy of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description><b>Modifying</b>: indicates that the system is modifying the routing policy. You can only query the routing policy, but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b>: indicates that the routing policy is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenRouteMapResponse
        /// </returns>
        public ModifyCenRouteMapResponse ModifyCenRouteMapWithOptions(ModifyCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AsPathMatchMode))
            {
                query["AsPathMatchMode"] = request.AsPathMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrMatchMode))
            {
                query["CidrMatchMode"] = request.CidrMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityMatchMode))
            {
                query["CommunityMatchMode"] = request.CommunityMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityOperateMode))
            {
                query["CommunityOperateMode"] = request.CommunityOperateMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationChildInstanceTypes))
            {
                query["DestinationChildInstanceTypes"] = request.DestinationChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlocks))
            {
                query["DestinationCidrBlocks"] = request.DestinationCidrBlocks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIds))
            {
                query["DestinationInstanceIds"] = request.DestinationInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIdsReverseMatch))
            {
                query["DestinationInstanceIdsReverseMatch"] = request.DestinationInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRegionIds))
            {
                query["DestinationRegionIds"] = request.DestinationRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRouteTableIds))
            {
                query["DestinationRouteTableIds"] = request.DestinationRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapResult))
            {
                query["MapResult"] = request.MapResult;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAddressType))
            {
                query["MatchAddressType"] = request.MatchAddressType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAsns))
            {
                query["MatchAsns"] = request.MatchAsns;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchCommunitySet))
            {
                query["MatchCommunitySet"] = request.MatchCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPriority))
            {
                query["NextPriority"] = request.NextPriority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCommunitySet))
            {
                query["OperateCommunitySet"] = request.OperateCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Preference))
            {
                query["Preference"] = request.Preference;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrependAsPath))
            {
                query["PrependAsPath"] = request.PrependAsPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTypes))
            {
                query["RouteTypes"] = request.RouteTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceChildInstanceTypes))
            {
                query["SourceChildInstanceTypes"] = request.SourceChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIds))
            {
                query["SourceInstanceIds"] = request.SourceInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIdsReverseMatch))
            {
                query["SourceInstanceIdsReverseMatch"] = request.SourceInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRegionIds))
            {
                query["SourceRegionIds"] = request.SourceRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRouteTableIds))
            {
                query["SourceRouteTableIds"] = request.SourceRouteTableIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenRouteMapResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a routing policy of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description><b>Modifying</b>: indicates that the system is modifying the routing policy. You can only query the routing policy, but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b>: indicates that the routing policy is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenRouteMapRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenRouteMapResponse
        /// </returns>
        public async Task<ModifyCenRouteMapResponse> ModifyCenRouteMapWithOptionsAsync(ModifyCenRouteMapRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AsPathMatchMode))
            {
                query["AsPathMatchMode"] = request.AsPathMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenRegionId))
            {
                query["CenRegionId"] = request.CenRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CidrMatchMode))
            {
                query["CidrMatchMode"] = request.CidrMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityMatchMode))
            {
                query["CommunityMatchMode"] = request.CommunityMatchMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommunityOperateMode))
            {
                query["CommunityOperateMode"] = request.CommunityOperateMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationChildInstanceTypes))
            {
                query["DestinationChildInstanceTypes"] = request.DestinationChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlocks))
            {
                query["DestinationCidrBlocks"] = request.DestinationCidrBlocks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIds))
            {
                query["DestinationInstanceIds"] = request.DestinationInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationInstanceIdsReverseMatch))
            {
                query["DestinationInstanceIdsReverseMatch"] = request.DestinationInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRegionIds))
            {
                query["DestinationRegionIds"] = request.DestinationRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationRouteTableIds))
            {
                query["DestinationRouteTableIds"] = request.DestinationRouteTableIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapResult))
            {
                query["MapResult"] = request.MapResult;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAddressType))
            {
                query["MatchAddressType"] = request.MatchAddressType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchAsns))
            {
                query["MatchAsns"] = request.MatchAsns;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchCommunitySet))
            {
                query["MatchCommunitySet"] = request.MatchCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPriority))
            {
                query["NextPriority"] = request.NextPriority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCommunitySet))
            {
                query["OperateCommunitySet"] = request.OperateCommunitySet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Preference))
            {
                query["Preference"] = request.Preference;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrependAsPath))
            {
                query["PrependAsPath"] = request.PrependAsPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Priority))
            {
                query["Priority"] = request.Priority;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteMapId))
            {
                query["RouteMapId"] = request.RouteMapId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTypes))
            {
                query["RouteTypes"] = request.RouteTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceChildInstanceTypes))
            {
                query["SourceChildInstanceTypes"] = request.SourceChildInstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIds))
            {
                query["SourceInstanceIds"] = request.SourceInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceIdsReverseMatch))
            {
                query["SourceInstanceIdsReverseMatch"] = request.SourceInstanceIdsReverseMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRegionIds))
            {
                query["SourceRegionIds"] = request.SourceRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceRouteTableIds))
            {
                query["SourceRouteTableIds"] = request.SourceRouteTableIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCenRouteMap",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCenRouteMapResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a routing policy of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description><b>Modifying</b>: indicates that the system is modifying the routing policy. You can only query the routing policy, but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b>: indicates that the routing policy is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenRouteMapResponse
        /// </returns>
        public ModifyCenRouteMapResponse ModifyCenRouteMap(ModifyCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCenRouteMapWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a routing policy of a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyCenRouteMap</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeCenRouteMaps</c> operation to query the status of a routing policy.</para>
        /// <list type="bullet">
        /// <item><description><b>Modifying</b>: indicates that the system is modifying the routing policy. You can only query the routing policy, but cannot perform other operations.</description></item>
        /// <item><description><b>Active</b>: indicates that the routing policy is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyCenRouteMapRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyCenRouteMapResponse
        /// </returns>
        public async Task<ModifyCenRouteMapResponse> ModifyCenRouteMapAsync(ModifyCenRouteMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCenRouteMapWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyFlowLogAttribute</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being modified. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyFlowLogAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyFlowLogAttributeResponse
        /// </returns>
        public ModifyFlowLogAttributeResponse ModifyFlowLogAttributeWithOptions(ModifyFlowLogAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyFlowLogAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyFlowLogAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyFlowLogAttribute</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being modified. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyFlowLogAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyFlowLogAttributeResponse
        /// </returns>
        public async Task<ModifyFlowLogAttributeResponse> ModifyFlowLogAttributeWithOptionsAsync(ModifyFlowLogAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogId))
            {
                query["FlowLogId"] = request.FlowLogId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlowLogName))
            {
                query["FlowLogName"] = request.FlowLogName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyFlowLogAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyFlowLogAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyFlowLogAttribute</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being modified. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyFlowLogAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyFlowLogAttributeResponse
        /// </returns>
        public ModifyFlowLogAttributeResponse ModifyFlowLogAttribute(ModifyFlowLogAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyFlowLogAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a flow log.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>ModifyFlowLogAttribute</c> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>DescribeFlowlogs</c> operation to query the status of a flow log.</para>
        /// <list type="bullet">
        /// <item><description>If a flow log is in the <b>Modifying</b> state, the flow log is being modified. In this case, you can query the flow log but cannot perform other operations.</description></item>
        /// <item><description>If a flow log is in the <b>Active</b> state, the flow log is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyFlowLogAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyFlowLogAttributeResponse
        /// </returns>
        public async Task<ModifyFlowLogAttributeResponse> ModifyFlowLogAttributeAsync(ModifyFlowLogAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyFlowLogAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>编辑流分类规则的名称和描述</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse ModifyTrafficMatchRuleToTrafficMarkingPolicyWithOptions(ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleDescription))
            {
                query["TrafficMatchRuleDescription"] = request.TrafficMatchRuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleId))
            {
                query["TrafficMatchRuleId"] = request.TrafficMatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleName))
            {
                query["TrafficMatchRuleName"] = request.TrafficMatchRuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTrafficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>编辑流分类规则的名称和描述</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse> ModifyTrafficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleDescription))
            {
                query["TrafficMatchRuleDescription"] = request.TrafficMatchRuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleId))
            {
                query["TrafficMatchRuleId"] = request.TrafficMatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMatchRuleName))
            {
                query["TrafficMatchRuleName"] = request.TrafficMatchRuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTrafficMatchRuleToTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>编辑流分类规则的名称和描述</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse ModifyTrafficMatchRuleToTrafficMarkingPolicy(ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyTrafficMatchRuleToTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>编辑流分类规则的名称和描述</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<ModifyTrafficMatchRuleToTrafficMarkingPolicyResponse> ModifyTrafficMatchRuleToTrafficMarkingPolicyAsync(ModifyTrafficMatchRuleToTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyTrafficMatchRuleToTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CIDR block of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you modify the CIDR block of a transit router, we recommend that you read the <a href="https://help.aliyun.com/document_detail/462635.html">limits on transit router CIDR blocks</a>.</para>
        /// <list type="bullet">
        /// <item><description>If IP addresses within the CIDR block have been allocated to network instances, you cannot modify the CIDR block.</description></item>
        /// <item><description>When you call <b>ModifyTransitRouterCidr</b>, if no parameter of the <b>PublishCidrRoute</b> operation is modified, ModifyTransitRouterCidr is a synchronous operation. After you call the operation, the new settings are immediately applied.</description></item>
        /// <item><description>If a parameter of the <b>PublishCidrRoute</b> operation is modified, <b>ModifyTransitRouterCidr</b> is an asynchronous operation. After you call the operation, the request ID (<b>RequestId</b>) is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterCidr</b> to query the status of the CIDR block of the transit router.<list type="bullet">
        /// <item><description>If the CIDR block of the transit router remains unchanged, the CIDR block is still being modified.</description></item>
        /// <item><description>If the CIDR block of the transit router is changed to the one that you specify in the request, the CIDR block has been modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterCidrResponse
        /// </returns>
        public ModifyTransitRouterCidrResponse ModifyTransitRouterCidrWithOptions(ModifyTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishCidrRoute))
            {
                query["PublishCidrRoute"] = request.PublishCidrRoute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTransitRouterCidrResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CIDR block of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you modify the CIDR block of a transit router, we recommend that you read the <a href="https://help.aliyun.com/document_detail/462635.html">limits on transit router CIDR blocks</a>.</para>
        /// <list type="bullet">
        /// <item><description>If IP addresses within the CIDR block have been allocated to network instances, you cannot modify the CIDR block.</description></item>
        /// <item><description>When you call <b>ModifyTransitRouterCidr</b>, if no parameter of the <b>PublishCidrRoute</b> operation is modified, ModifyTransitRouterCidr is a synchronous operation. After you call the operation, the new settings are immediately applied.</description></item>
        /// <item><description>If a parameter of the <b>PublishCidrRoute</b> operation is modified, <b>ModifyTransitRouterCidr</b> is an asynchronous operation. After you call the operation, the request ID (<b>RequestId</b>) is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterCidr</b> to query the status of the CIDR block of the transit router.<list type="bullet">
        /// <item><description>If the CIDR block of the transit router remains unchanged, the CIDR block is still being modified.</description></item>
        /// <item><description>If the CIDR block of the transit router is changed to the one that you specify in the request, the CIDR block has been modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterCidrRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterCidrResponse
        /// </returns>
        public async Task<ModifyTransitRouterCidrResponse> ModifyTransitRouterCidrWithOptionsAsync(ModifyTransitRouterCidrRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cidr))
            {
                query["Cidr"] = request.Cidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishCidrRoute))
            {
                query["PublishCidrRoute"] = request.PublishCidrRoute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterCidrId))
            {
                query["TransitRouterCidrId"] = request.TransitRouterCidrId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTransitRouterCidr",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTransitRouterCidrResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CIDR block of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you modify the CIDR block of a transit router, we recommend that you read the <a href="https://help.aliyun.com/document_detail/462635.html">limits on transit router CIDR blocks</a>.</para>
        /// <list type="bullet">
        /// <item><description>If IP addresses within the CIDR block have been allocated to network instances, you cannot modify the CIDR block.</description></item>
        /// <item><description>When you call <b>ModifyTransitRouterCidr</b>, if no parameter of the <b>PublishCidrRoute</b> operation is modified, ModifyTransitRouterCidr is a synchronous operation. After you call the operation, the new settings are immediately applied.</description></item>
        /// <item><description>If a parameter of the <b>PublishCidrRoute</b> operation is modified, <b>ModifyTransitRouterCidr</b> is an asynchronous operation. After you call the operation, the request ID (<b>RequestId</b>) is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterCidr</b> to query the status of the CIDR block of the transit router.<list type="bullet">
        /// <item><description>If the CIDR block of the transit router remains unchanged, the CIDR block is still being modified.</description></item>
        /// <item><description>If the CIDR block of the transit router is changed to the one that you specify in the request, the CIDR block has been modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterCidrResponse
        /// </returns>
        public ModifyTransitRouterCidrResponse ModifyTransitRouterCidr(ModifyTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyTransitRouterCidrWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CIDR block of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Before you modify the CIDR block of a transit router, we recommend that you read the <a href="https://help.aliyun.com/document_detail/462635.html">limits on transit router CIDR blocks</a>.</para>
        /// <list type="bullet">
        /// <item><description>If IP addresses within the CIDR block have been allocated to network instances, you cannot modify the CIDR block.</description></item>
        /// <item><description>When you call <b>ModifyTransitRouterCidr</b>, if no parameter of the <b>PublishCidrRoute</b> operation is modified, ModifyTransitRouterCidr is a synchronous operation. After you call the operation, the new settings are immediately applied.</description></item>
        /// <item><description>If a parameter of the <b>PublishCidrRoute</b> operation is modified, <b>ModifyTransitRouterCidr</b> is an asynchronous operation. After you call the operation, the request ID (<b>RequestId</b>) is returned but the operation is still being performed in the system background. You can call <b>ListTransitRouterCidr</b> to query the status of the CIDR block of the transit router.<list type="bullet">
        /// <item><description>If the CIDR block of the transit router remains unchanged, the CIDR block is still being modified.</description></item>
        /// <item><description>If the CIDR block of the transit router is changed to the one that you specify in the request, the CIDR block has been modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterCidrRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterCidrResponse
        /// </returns>
        public async Task<ModifyTransitRouterCidrResponse> ModifyTransitRouterCidrAsync(ModifyTransitRouterCidrRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyTransitRouterCidrWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a multicast domain.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterMulticastDomainResponse
        /// </returns>
        public ModifyTransitRouterMulticastDomainResponse ModifyTransitRouterMulticastDomainWithOptions(ModifyTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainDescription))
            {
                query["TransitRouterMulticastDomainDescription"] = request.TransitRouterMulticastDomainDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainName))
            {
                query["TransitRouterMulticastDomainName"] = request.TransitRouterMulticastDomainName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTransitRouterMulticastDomainResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a multicast domain.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterMulticastDomainRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<ModifyTransitRouterMulticastDomainResponse> ModifyTransitRouterMulticastDomainWithOptionsAsync(ModifyTransitRouterMulticastDomainRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainDescription))
            {
                query["TransitRouterMulticastDomainDescription"] = request.TransitRouterMulticastDomainDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainName))
            {
                query["TransitRouterMulticastDomainName"] = request.TransitRouterMulticastDomainName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTransitRouterMulticastDomain",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTransitRouterMulticastDomainResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a multicast domain.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterMulticastDomainResponse
        /// </returns>
        public ModifyTransitRouterMulticastDomainResponse ModifyTransitRouterMulticastDomain(ModifyTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyTransitRouterMulticastDomainWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a multicast domain.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ModifyTransitRouterMulticastDomainRequest
        /// </param>
        /// 
        /// <returns>
        /// ModifyTransitRouterMulticastDomainResponse
        /// </returns>
        public async Task<ModifyTransitRouterMulticastDomainResponse> ModifyTransitRouterMulticastDomainAsync(ModifyTransitRouterMulticastDomainRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyTransitRouterMulticastDomainWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Moves a Cloud Enterprise Network (CEN) instance or a bandwidth plan to another resource group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>By default, CEN instances and bandwidth plans are in the default resource group. You can call the <c>MoveResourceGroup</c> operation to move CEN instances or bandwidth plans to another resource group.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// MoveResourceGroupRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// MoveResourceGroupResponse
        /// </returns>
        public MoveResourceGroupResponse MoveResourceGroupWithOptions(MoveResourceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewResourceGroupId))
            {
                query["NewResourceGroupId"] = request.NewResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "MoveResourceGroup",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<MoveResourceGroupResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Moves a Cloud Enterprise Network (CEN) instance or a bandwidth plan to another resource group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>By default, CEN instances and bandwidth plans are in the default resource group. You can call the <c>MoveResourceGroup</c> operation to move CEN instances or bandwidth plans to another resource group.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// MoveResourceGroupRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// MoveResourceGroupResponse
        /// </returns>
        public async Task<MoveResourceGroupResponse> MoveResourceGroupWithOptionsAsync(MoveResourceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewResourceGroupId))
            {
                query["NewResourceGroupId"] = request.NewResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "MoveResourceGroup",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<MoveResourceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Moves a Cloud Enterprise Network (CEN) instance or a bandwidth plan to another resource group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>By default, CEN instances and bandwidth plans are in the default resource group. You can call the <c>MoveResourceGroup</c> operation to move CEN instances or bandwidth plans to another resource group.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// MoveResourceGroupRequest
        /// </param>
        /// 
        /// <returns>
        /// MoveResourceGroupResponse
        /// </returns>
        public MoveResourceGroupResponse MoveResourceGroup(MoveResourceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return MoveResourceGroupWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Moves a Cloud Enterprise Network (CEN) instance or a bandwidth plan to another resource group.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>By default, CEN instances and bandwidth plans are in the default resource group. You can call the <c>MoveResourceGroup</c> operation to move CEN instances or bandwidth plans to another resource group.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// MoveResourceGroupRequest
        /// </param>
        /// 
        /// <returns>
        /// MoveResourceGroupResponse
        /// </returns>
        public async Task<MoveResourceGroupResponse> MoveResourceGroupAsync(MoveResourceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await MoveResourceGroupWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the transit router feature.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>OpenTransitRouterService</c> operation to activate the transit router feature free of charge. After the <c>OpenTransitRouterService</c> operation succeeds, an order is automatically generated. You can use the returned order ID to query the order information in <a href="https://usercenter2-intl.aliyun.com/billing/#/account/overview">Alibaba Cloud User Center</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// OpenTransitRouterServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// OpenTransitRouterServiceResponse
        /// </returns>
        public OpenTransitRouterServiceResponse OpenTransitRouterServiceWithOptions(OpenTransitRouterServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenTransitRouterService",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenTransitRouterServiceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the transit router feature.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>OpenTransitRouterService</c> operation to activate the transit router feature free of charge. After the <c>OpenTransitRouterService</c> operation succeeds, an order is automatically generated. You can use the returned order ID to query the order information in <a href="https://usercenter2-intl.aliyun.com/billing/#/account/overview">Alibaba Cloud User Center</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// OpenTransitRouterServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// OpenTransitRouterServiceResponse
        /// </returns>
        public async Task<OpenTransitRouterServiceResponse> OpenTransitRouterServiceWithOptionsAsync(OpenTransitRouterServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenTransitRouterService",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenTransitRouterServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the transit router feature.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>OpenTransitRouterService</c> operation to activate the transit router feature free of charge. After the <c>OpenTransitRouterService</c> operation succeeds, an order is automatically generated. You can use the returned order ID to query the order information in <a href="https://usercenter2-intl.aliyun.com/billing/#/account/overview">Alibaba Cloud User Center</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// OpenTransitRouterServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// OpenTransitRouterServiceResponse
        /// </returns>
        public OpenTransitRouterServiceResponse OpenTransitRouterService(OpenTransitRouterServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenTransitRouterServiceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the transit router feature.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call the <c>OpenTransitRouterService</c> operation to activate the transit router feature free of charge. After the <c>OpenTransitRouterService</c> operation succeeds, an order is automatically generated. You can use the returned order ID to query the order information in <a href="https://usercenter2-intl.aliyun.com/billing/#/account/overview">Alibaba Cloud User Center</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// OpenTransitRouterServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// OpenTransitRouterServiceResponse
        /// </returns>
        public async Task<OpenTransitRouterServiceResponse> OpenTransitRouterServiceAsync(OpenTransitRouterServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenTransitRouterServiceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) supports route advertisement. You can call this operation to advertise routes of virtual private clouds (VPCs) or virtual border routers (VBRs) attached to a CEN instance to the CEN instance. Other network instances attached to the CEN instance can learn the routes if route conflicts do not exist.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The following table describes whether routes of different types are advertised to CEN by default. You can call the PublishRouteEntries operation to advertise routes to CEN.</para>
        /// <table>
        /// <thead>
        /// <tr>
        /// <th>Route</th>
        /// <th>Network instance</th>
        /// <th>Advertised to CEN by default</th>
        /// </tr>
        /// </thead>
        /// <tbody><tr>
        /// <td>Routes that route network traffic to Elastic Compute Service (ECS) instances</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to VPN gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to high-availability virtual IP addresses (HAVIPs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to router interfaces</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to elastic network interfaces (ENIs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to IPv6 gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to NAT gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>System routes of VPCs</td>
        /// <td>VPC</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to data centers</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Border Gateway Protocol (BGP) routes</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// </tbody></table>
        /// </description>
        /// 
        /// <param name="request">
        /// PublishRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishRouteEntriesResponse
        /// </returns>
        public PublishRouteEntriesResponse PublishRouteEntriesWithOptions(PublishRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) supports route advertisement. You can call this operation to advertise routes of virtual private clouds (VPCs) or virtual border routers (VBRs) attached to a CEN instance to the CEN instance. Other network instances attached to the CEN instance can learn the routes if route conflicts do not exist.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The following table describes whether routes of different types are advertised to CEN by default. You can call the PublishRouteEntries operation to advertise routes to CEN.</para>
        /// <table>
        /// <thead>
        /// <tr>
        /// <th>Route</th>
        /// <th>Network instance</th>
        /// <th>Advertised to CEN by default</th>
        /// </tr>
        /// </thead>
        /// <tbody><tr>
        /// <td>Routes that route network traffic to Elastic Compute Service (ECS) instances</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to VPN gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to high-availability virtual IP addresses (HAVIPs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to router interfaces</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to elastic network interfaces (ENIs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to IPv6 gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to NAT gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>System routes of VPCs</td>
        /// <td>VPC</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to data centers</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Border Gateway Protocol (BGP) routes</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// </tbody></table>
        /// </description>
        /// 
        /// <param name="request">
        /// PublishRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishRouteEntriesResponse
        /// </returns>
        public async Task<PublishRouteEntriesResponse> PublishRouteEntriesWithOptionsAsync(PublishRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) supports route advertisement. You can call this operation to advertise routes of virtual private clouds (VPCs) or virtual border routers (VBRs) attached to a CEN instance to the CEN instance. Other network instances attached to the CEN instance can learn the routes if route conflicts do not exist.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The following table describes whether routes of different types are advertised to CEN by default. You can call the PublishRouteEntries operation to advertise routes to CEN.</para>
        /// <table>
        /// <thead>
        /// <tr>
        /// <th>Route</th>
        /// <th>Network instance</th>
        /// <th>Advertised to CEN by default</th>
        /// </tr>
        /// </thead>
        /// <tbody><tr>
        /// <td>Routes that route network traffic to Elastic Compute Service (ECS) instances</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to VPN gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to high-availability virtual IP addresses (HAVIPs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to router interfaces</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to elastic network interfaces (ENIs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to IPv6 gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to NAT gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>System routes of VPCs</td>
        /// <td>VPC</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to data centers</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Border Gateway Protocol (BGP) routes</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// </tbody></table>
        /// </description>
        /// 
        /// <param name="request">
        /// PublishRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishRouteEntriesResponse
        /// </returns>
        public PublishRouteEntriesResponse PublishRouteEntries(PublishRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cloud Enterprise Network (CEN) supports route advertisement. You can call this operation to advertise routes of virtual private clouds (VPCs) or virtual border routers (VBRs) attached to a CEN instance to the CEN instance. Other network instances attached to the CEN instance can learn the routes if route conflicts do not exist.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The following table describes whether routes of different types are advertised to CEN by default. You can call the PublishRouteEntries operation to advertise routes to CEN.</para>
        /// <table>
        /// <thead>
        /// <tr>
        /// <th>Route</th>
        /// <th>Network instance</th>
        /// <th>Advertised to CEN by default</th>
        /// </tr>
        /// </thead>
        /// <tbody><tr>
        /// <td>Routes that route network traffic to Elastic Compute Service (ECS) instances</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to VPN gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to high-availability virtual IP addresses (HAVIPs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to router interfaces</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to elastic network interfaces (ENIs)</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to IPv6 gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to NAT gateways</td>
        /// <td>VPC</td>
        /// <td>No</td>
        /// </tr>
        /// <tr>
        /// <td>System routes of VPCs</td>
        /// <td>VPC</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Routes that route network traffic to data centers</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// <tr>
        /// <td>Border Gateway Protocol (BGP) routes</td>
        /// <td>VBR</td>
        /// <td>Yes</td>
        /// </tr>
        /// </tbody></table>
        /// </description>
        /// 
        /// <param name="request">
        /// PublishRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishRouteEntriesResponse
        /// </returns>
        public async Task<PublishRouteEntriesResponse> PublishRouteEntriesAsync(PublishRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishRouteEntriesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Re-advertises an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RefreshTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RefreshTransitRouteTableAggregationResponse
        /// </returns>
        public RefreshTransitRouteTableAggregationResponse RefreshTransitRouteTableAggregationWithOptions(RefreshTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshTransitRouteTableAggregationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Re-advertises an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RefreshTransitRouteTableAggregationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RefreshTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<RefreshTransitRouteTableAggregationResponse> RefreshTransitRouteTableAggregationWithOptionsAsync(RefreshTransitRouteTableAggregationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableAggregationCidr))
            {
                query["TransitRouteTableAggregationCidr"] = request.TransitRouteTableAggregationCidr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouteTableId))
            {
                query["TransitRouteTableId"] = request.TransitRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshTransitRouteTableAggregation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshTransitRouteTableAggregationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Re-advertises an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RefreshTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// RefreshTransitRouteTableAggregationResponse
        /// </returns>
        public RefreshTransitRouteTableAggregationResponse RefreshTransitRouteTableAggregation(RefreshTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshTransitRouteTableAggregationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Re-advertises an aggregate route.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RefreshTransitRouteTableAggregationRequest
        /// </param>
        /// 
        /// <returns>
        /// RefreshTransitRouteTableAggregationResponse
        /// </returns>
        public async Task<RefreshTransitRouteTableAggregationResponse> RefreshTransitRouteTableAggregationAsync(RefreshTransitRouteTableAggregationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshTransitRouteTableAggregationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates or adds a multicast member.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Enterprise Edition transit routers support only elastic network interfaces (ENIs) as multicast members. You can call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to specify an ENI in the current region or a different region as a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If you specify a value for the <b>NetworkInterfaceIds</b> parameter, an ENI in the current region is to be specified as a multicast member. Make sure that the ENI and vSwitch are associated with the multicast group. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>If you specify a value for the <b>PeerTransitRouterMulticastDomains</b>, a multicast member in a multicast group that belongs to another region but has the same IP address as the current multicast group is to be specified as a multicast member for the current multicast group. Make sure that an inter-region connection is established between the regions. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.
        /// For example, you created Multicast Group 1 in Multicast Domain 1, which is in the China (Hangzhou) region. You created Multicast Group 2 in Multicast Domain 2, which is in the China (Shanghai) region. Multicast Group 1 and Multicast Group 2 use the same multicast IP address, and Multicast Member 2 is in Multicast Group 2 in the China (Shanghai) region. If you call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to add multicast members to Multicast Group 1 in the China (Hangzhou) region and set <b>PeerTransitRouterMulticastDomains</b> to the ID of Multicast Group 2, which is in the China (Shanghai) region, Multicast Member 2, which is in Multicast Domain 2 in the China (Shanghai) region is added to Multicast Group 1 in the China (Hangzhou) region.</description></item>
        /// <item><description><c>RegisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.<list type="bullet">
        /// <item><description>If the multicast member is in the <b>Registering</b>, the multicast member is being created. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If the multicast member is in the <b>Registered</b> state, the multicast member is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public RegisterTransitRouterMulticastGroupMembersResponse RegisterTransitRouterMulticastGroupMembersWithOptions(RegisterTransitRouterMulticastGroupMembersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterTransitRouterMulticastGroupMembers",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterTransitRouterMulticastGroupMembersResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates or adds a multicast member.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Enterprise Edition transit routers support only elastic network interfaces (ENIs) as multicast members. You can call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to specify an ENI in the current region or a different region as a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If you specify a value for the <b>NetworkInterfaceIds</b> parameter, an ENI in the current region is to be specified as a multicast member. Make sure that the ENI and vSwitch are associated with the multicast group. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>If you specify a value for the <b>PeerTransitRouterMulticastDomains</b>, a multicast member in a multicast group that belongs to another region but has the same IP address as the current multicast group is to be specified as a multicast member for the current multicast group. Make sure that an inter-region connection is established between the regions. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.
        /// For example, you created Multicast Group 1 in Multicast Domain 1, which is in the China (Hangzhou) region. You created Multicast Group 2 in Multicast Domain 2, which is in the China (Shanghai) region. Multicast Group 1 and Multicast Group 2 use the same multicast IP address, and Multicast Member 2 is in Multicast Group 2 in the China (Shanghai) region. If you call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to add multicast members to Multicast Group 1 in the China (Hangzhou) region and set <b>PeerTransitRouterMulticastDomains</b> to the ID of Multicast Group 2, which is in the China (Shanghai) region, Multicast Member 2, which is in Multicast Domain 2 in the China (Shanghai) region is added to Multicast Group 1 in the China (Hangzhou) region.</description></item>
        /// <item><description><c>RegisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.<list type="bullet">
        /// <item><description>If the multicast member is in the <b>Registering</b>, the multicast member is being created. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If the multicast member is in the <b>Registered</b> state, the multicast member is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public async Task<RegisterTransitRouterMulticastGroupMembersResponse> RegisterTransitRouterMulticastGroupMembersWithOptionsAsync(RegisterTransitRouterMulticastGroupMembersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeerTransitRouterMulticastDomains))
            {
                query["PeerTransitRouterMulticastDomains"] = request.PeerTransitRouterMulticastDomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterTransitRouterMulticastGroupMembers",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterTransitRouterMulticastGroupMembersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates or adds a multicast member.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Enterprise Edition transit routers support only elastic network interfaces (ENIs) as multicast members. You can call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to specify an ENI in the current region or a different region as a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If you specify a value for the <b>NetworkInterfaceIds</b> parameter, an ENI in the current region is to be specified as a multicast member. Make sure that the ENI and vSwitch are associated with the multicast group. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>If you specify a value for the <b>PeerTransitRouterMulticastDomains</b>, a multicast member in a multicast group that belongs to another region but has the same IP address as the current multicast group is to be specified as a multicast member for the current multicast group. Make sure that an inter-region connection is established between the regions. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.
        /// For example, you created Multicast Group 1 in Multicast Domain 1, which is in the China (Hangzhou) region. You created Multicast Group 2 in Multicast Domain 2, which is in the China (Shanghai) region. Multicast Group 1 and Multicast Group 2 use the same multicast IP address, and Multicast Member 2 is in Multicast Group 2 in the China (Shanghai) region. If you call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to add multicast members to Multicast Group 1 in the China (Hangzhou) region and set <b>PeerTransitRouterMulticastDomains</b> to the ID of Multicast Group 2, which is in the China (Shanghai) region, Multicast Member 2, which is in Multicast Domain 2 in the China (Shanghai) region is added to Multicast Group 1 in the China (Hangzhou) region.</description></item>
        /// <item><description><c>RegisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.<list type="bullet">
        /// <item><description>If the multicast member is in the <b>Registering</b>, the multicast member is being created. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If the multicast member is in the <b>Registered</b> state, the multicast member is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public RegisterTransitRouterMulticastGroupMembersResponse RegisterTransitRouterMulticastGroupMembers(RegisterTransitRouterMulticastGroupMembersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RegisterTransitRouterMulticastGroupMembersWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates or adds a multicast member.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Enterprise Edition transit routers support only elastic network interfaces (ENIs) as multicast members. You can call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to specify an ENI in the current region or a different region as a multicast member.</para>
        /// <list type="bullet">
        /// <item><description>If you specify a value for the <b>NetworkInterfaceIds</b> parameter, an ENI in the current region is to be specified as a multicast member. Make sure that the ENI and vSwitch are associated with the multicast group. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</description></item>
        /// <item><description>If you specify a value for the <b>PeerTransitRouterMulticastDomains</b>, a multicast member in a multicast group that belongs to another region but has the same IP address as the current multicast group is to be specified as a multicast member for the current multicast group. Make sure that an inter-region connection is established between the regions. For more information, see <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>.
        /// For example, you created Multicast Group 1 in Multicast Domain 1, which is in the China (Hangzhou) region. You created Multicast Group 2 in Multicast Domain 2, which is in the China (Shanghai) region. Multicast Group 1 and Multicast Group 2 use the same multicast IP address, and Multicast Member 2 is in Multicast Group 2 in the China (Shanghai) region. If you call the <c>RegisterTransitRouterMulticastGroupMembers</c> operation to add multicast members to Multicast Group 1 in the China (Hangzhou) region and set <b>PeerTransitRouterMulticastDomains</b> to the ID of Multicast Group 2, which is in the China (Shanghai) region, Multicast Member 2, which is in Multicast Domain 2 in the China (Shanghai) region is added to Multicast Group 1 in the China (Hangzhou) region.</description></item>
        /// <item><description><c>RegisterTransitRouterMulticastGroupMembers</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast member.<list type="bullet">
        /// <item><description>If the multicast member is in the <b>Registering</b>, the multicast member is being created. In this case, you can query the multicast member but cannot perform other operations on the multicast member.</description></item>
        /// <item><description>If the multicast member is in the <b>Registered</b> state, the multicast member is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupMembersRequest
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupMembersResponse
        /// </returns>
        public async Task<RegisterTransitRouterMulticastGroupMembersResponse> RegisterTransitRouterMulticastGroupMembersAsync(RegisterTransitRouterMulticastGroupMembersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RegisterTransitRouterMulticastGroupMembersWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast source for a one-to-many multicast network.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can specify only elastic network interfaces (ENIs) as multicast sources.</para>
        /// <list type="bullet">
        /// <item><description><c>RegisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.<list type="bullet">
        /// <item><description>If a multicast source is in the <b>Registering</b> state, the multicast source is being created. You can query the multicast source but cannot perform other operations on the multicast source.</description></item>
        /// <item><description>If a multicast source is in the <b>Registered</b> state, the multicast source is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3>Prerequisite</h3>
        /// <para>Before you call <c>RegisterTransitRouterMulticastGroupSources</c>, make sure that the vSwitch on which the ENI is created is associated with the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public RegisterTransitRouterMulticastGroupSourcesResponse RegisterTransitRouterMulticastGroupSourcesWithOptions(RegisterTransitRouterMulticastGroupSourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterTransitRouterMulticastGroupSources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterTransitRouterMulticastGroupSourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast source for a one-to-many multicast network.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can specify only elastic network interfaces (ENIs) as multicast sources.</para>
        /// <list type="bullet">
        /// <item><description><c>RegisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.<list type="bullet">
        /// <item><description>If a multicast source is in the <b>Registering</b> state, the multicast source is being created. You can query the multicast source but cannot perform other operations on the multicast source.</description></item>
        /// <item><description>If a multicast source is in the <b>Registered</b> state, the multicast source is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3>Prerequisite</h3>
        /// <para>Before you call <c>RegisterTransitRouterMulticastGroupSources</c>, make sure that the vSwitch on which the ENI is created is associated with the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public async Task<RegisterTransitRouterMulticastGroupSourcesResponse> RegisterTransitRouterMulticastGroupSourcesWithOptionsAsync(RegisterTransitRouterMulticastGroupSourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIpAddress))
            {
                query["GroupIpAddress"] = request.GroupIpAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetworkInterfaceIds))
            {
                query["NetworkInterfaceIds"] = request.NetworkInterfaceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterMulticastDomainId))
            {
                query["TransitRouterMulticastDomainId"] = request.TransitRouterMulticastDomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterTransitRouterMulticastGroupSources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterTransitRouterMulticastGroupSourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast source for a one-to-many multicast network.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can specify only elastic network interfaces (ENIs) as multicast sources.</para>
        /// <list type="bullet">
        /// <item><description><c>RegisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.<list type="bullet">
        /// <item><description>If a multicast source is in the <b>Registering</b> state, the multicast source is being created. You can query the multicast source but cannot perform other operations on the multicast source.</description></item>
        /// <item><description>If a multicast source is in the <b>Registered</b> state, the multicast source is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3>Prerequisite</h3>
        /// <para>Before you call <c>RegisterTransitRouterMulticastGroupSources</c>, make sure that the vSwitch on which the ENI is created is associated with the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public RegisterTransitRouterMulticastGroupSourcesResponse RegisterTransitRouterMulticastGroupSources(RegisterTransitRouterMulticastGroupSourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RegisterTransitRouterMulticastGroupSourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a multicast source for a one-to-many multicast network.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  You can specify only elastic network interfaces (ENIs) as multicast sources.</para>
        /// <list type="bullet">
        /// <item><description><c>RegisterTransitRouterMulticastGroupSources</c> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <c>ListTransitRouterMulticastGroups</c> operation to query the status of a multicast source.<list type="bullet">
        /// <item><description>If a multicast source is in the <b>Registering</b> state, the multicast source is being created. You can query the multicast source but cannot perform other operations on the multicast source.</description></item>
        /// <item><description>If a multicast source is in the <b>Registered</b> state, the multicast source is created.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3>Prerequisite</h3>
        /// <para>Before you call <c>RegisterTransitRouterMulticastGroupSources</c>, make sure that the vSwitch on which the ENI is created is associated with the multicast domain. For more information, see <a href="https://help.aliyun.com/document_detail/429778.html">AssociateTransitRouterMulticastDomain</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RegisterTransitRouterMulticastGroupSourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// RegisterTransitRouterMulticastGroupSourcesResponse
        /// </returns>
        public async Task<RegisterTransitRouterMulticastGroupSourcesResponse> RegisterTransitRouterMulticastGroupSourcesAsync(RegisterTransitRouterMulticastGroupSourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RegisterTransitRouterMulticastGroupSourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes specified traffic classification rules from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you call <b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b>, take note of the following rules:
        ///     *   If you specify the ID of a traffic classification rule in the <b>TrafficMarkRuleIds</b> parameter, the specified traffic classification rule is deleted.
        ///     *   If you do not specify a traffic classification rule ID in the <b>TrafficMarkRuleIds</b> parameter, no operation is performed after you call this operation.
        ///     If you want to delete a traffic classification rule, you must specify the rule ID before you call this operation.</para>
        /// <list type="bullet">
        /// <item><description><b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.<list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Deleting</b> state, the traffic classification rule is being deleted. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule cannot be found, the traffic classification rule is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        public RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse RemoveTrafficMatchRuleFromTrafficMarkingPolicyWithOptions(RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkRuleIds))
            {
                query["TrafficMarkRuleIds"] = request.TrafficMarkRuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveTrafficMatchRuleFromTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes specified traffic classification rules from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you call <b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b>, take note of the following rules:
        ///     *   If you specify the ID of a traffic classification rule in the <b>TrafficMarkRuleIds</b> parameter, the specified traffic classification rule is deleted.
        ///     *   If you do not specify a traffic classification rule ID in the <b>TrafficMarkRuleIds</b> parameter, no operation is performed after you call this operation.
        ///     If you want to delete a traffic classification rule, you must specify the rule ID before you call this operation.</para>
        /// <list type="bullet">
        /// <item><description><b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.<list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Deleting</b> state, the traffic classification rule is being deleted. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule cannot be found, the traffic classification rule is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse> RemoveTrafficMatchRuleFromTrafficMarkingPolicyWithOptionsAsync(RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkRuleIds))
            {
                query["TrafficMarkRuleIds"] = request.TrafficMarkRuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveTrafficMatchRuleFromTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes specified traffic classification rules from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you call <b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b>, take note of the following rules:
        ///     *   If you specify the ID of a traffic classification rule in the <b>TrafficMarkRuleIds</b> parameter, the specified traffic classification rule is deleted.
        ///     *   If you do not specify a traffic classification rule ID in the <b>TrafficMarkRuleIds</b> parameter, no operation is performed after you call this operation.
        ///     If you want to delete a traffic classification rule, you must specify the rule ID before you call this operation.</para>
        /// <list type="bullet">
        /// <item><description><b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.<list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Deleting</b> state, the traffic classification rule is being deleted. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule cannot be found, the traffic classification rule is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        public RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse RemoveTrafficMatchRuleFromTrafficMarkingPolicy(RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveTrafficMatchRuleFromTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes specified traffic classification rules from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you call <b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b>, take note of the following rules:
        ///     *   If you specify the ID of a traffic classification rule in the <b>TrafficMarkRuleIds</b> parameter, the specified traffic classification rule is deleted.
        ///     *   If you do not specify a traffic classification rule ID in the <b>TrafficMarkRuleIds</b> parameter, no operation is performed after you call this operation.
        ///     If you want to delete a traffic classification rule, you must specify the rule ID before you call this operation.</para>
        /// <list type="bullet">
        /// <item><description><b>RemoveTrafficMatchRuleFromTrafficMarkingPolicy</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTrafficMarkingPolicies</b> operation to query the status of a traffic classification rule.<list type="bullet">
        /// <item><description>If a traffic classification rule is in the <b>Deleting</b> state, the traffic classification rule is being deleted. In this case, you can query the traffic classification rule but cannot perform other operations.</description></item>
        /// <item><description>If a traffic classification rule cannot be found, the traffic classification rule is deleted.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        public async Task<RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse> RemoveTrafficMatchRuleFromTrafficMarkingPolicyAsync(RemoveTrafficMatchRuleFromTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveTrafficMatchRuleFromTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a traffic classification rule from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3><a href="#"></a>Precautions</h3>
        /// <para>The <b>RemoveTraficMatchRuleFromTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. To delete a traffic classification rule, call the <a href="https://help.aliyun.com/document_detail/452726.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a> operation. Maintenance on this document has stopped.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse RemoveTraficMatchRuleFromTrafficMarkingPolicyWithOptions(RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkRuleIds))
            {
                query["TrafficMarkRuleIds"] = request.TrafficMarkRuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveTraficMatchRuleFromTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a traffic classification rule from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3><a href="#"></a>Precautions</h3>
        /// <para>The <b>RemoveTraficMatchRuleFromTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. To delete a traffic classification rule, call the <a href="https://help.aliyun.com/document_detail/452726.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a> operation. Maintenance on this document has stopped.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public async Task<RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse> RemoveTraficMatchRuleFromTrafficMarkingPolicyWithOptionsAsync(RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkRuleIds))
            {
                query["TrafficMarkRuleIds"] = request.TrafficMarkRuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveTraficMatchRuleFromTrafficMarkingPolicy",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a traffic classification rule from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3><a href="#"></a>Precautions</h3>
        /// <para>The <b>RemoveTraficMatchRuleFromTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. To delete a traffic classification rule, call the <a href="https://help.aliyun.com/document_detail/452726.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a> operation. Maintenance on this document has stopped.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse RemoveTraficMatchRuleFromTrafficMarkingPolicy(RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveTraficMatchRuleFromTrafficMarkingPolicyWithOptions(request, runtime);
        }

        /// <term><b>Deprecated</b></term>
        /// 
        /// OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.
        /// 
        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Removes a traffic classification rule from a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h3><a href="#"></a>Precautions</h3>
        /// <para>The <b>RemoveTraficMatchRuleFromTrafficMarkingPolicy</b> operation is deprecated and will be discontinued soon. To delete a traffic classification rule, call the <a href="https://help.aliyun.com/document_detail/452726.html">RemoveTrafficMatchRuleFromTrafficMarkingPolicy</a> operation. Maintenance on this document has stopped.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse
        /// </returns>
        [Obsolete("OpenAPI RemoveTraficMatchRuleFromTrafficMarkingPolicy is deprecated, please use Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy instead.\n")]
        // Deprecated
        public async Task<RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse> RemoveTraficMatchRuleFromTrafficMarkingPolicyAsync(RemoveTraficMatchRuleFromTrafficMarkingPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveTraficMatchRuleFromTrafficMarkingPolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a network instance connection with another route table of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ReplaceTransitRouterRouteTableAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ReplaceTransitRouterRouteTableAssociationResponse
        /// </returns>
        public ReplaceTransitRouterRouteTableAssociationResponse ReplaceTransitRouterRouteTableAssociationWithOptions(ReplaceTransitRouterRouteTableAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReplaceTransitRouterRouteTableAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReplaceTransitRouterRouteTableAssociationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a network instance connection with another route table of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ReplaceTransitRouterRouteTableAssociationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ReplaceTransitRouterRouteTableAssociationResponse
        /// </returns>
        public async Task<ReplaceTransitRouterRouteTableAssociationResponse> ReplaceTransitRouterRouteTableAssociationWithOptionsAsync(ReplaceTransitRouterRouteTableAssociationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReplaceTransitRouterRouteTableAssociation",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReplaceTransitRouterRouteTableAssociationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a network instance connection with another route table of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ReplaceTransitRouterRouteTableAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// ReplaceTransitRouterRouteTableAssociationResponse
        /// </returns>
        public ReplaceTransitRouterRouteTableAssociationResponse ReplaceTransitRouterRouteTableAssociation(ReplaceTransitRouterRouteTableAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReplaceTransitRouterRouteTableAssociationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a network instance connection with another route table of a transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ReplaceTransitRouterRouteTableAssociationRequest
        /// </param>
        /// 
        /// <returns>
        /// ReplaceTransitRouterRouteTableAssociationResponse
        /// </returns>
        public async Task<ReplaceTransitRouterRouteTableAssociationResponse> ReplaceTransitRouterRouteTableAssociationAsync(ReplaceTransitRouterRouteTableAssociationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReplaceTransitRouterRouteTableAssociationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects an on-premises network to a cloud service.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Cloud services refer to Alibaba Cloud services that use the 100.64.0.0/10 CIDR block to provide services. These cloud services include Object Storage Service (OSS), Simple Log Service (SLS), and Data Transmission Service (DTS). If your on-premises network needs to access a cloud service, you must attach the virtual border router (VBR) or Cloud Connect Network (CCN) instance that is connected to your on-premises network to a Cloud Enterprise Network (CEN) instance. In addition, you must attach a virtual private cloud (VPC) that is deployed in the same region as the cloud service to the CEN instance. This way, your on-premises network can connect to the VPC that is deployed in the same region as the cloud service and access the cloud service through the VPC.</para>
        /// <list type="bullet">
        /// <item><description>This operation is supported only by Basic Edition transit routers. An on-premises network associated with a VBR can use CEN to access only a cloud service that is deployed in the same region.
        /// For example, if cloud services are deployed in the China (Beijing) region, only on-premises networks connected to VBRs in the China (Beijing) region can access the cloud services.</description></item>
        /// <item><description><b>ResolveAndRouteServiceInCen</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeRouteServicesInCen</b> to query the status of a cloud service.<list type="bullet">
        /// <item><description>If the cloud service is in the <b>Creating</b> state, the connection to the cloud service is being created. In this case, you can query the cloud service but cannot perform other operations.</description></item>
        /// <item><description>If the cloud service is in the <b>Active</b> state, the connection to the cloud service is created.</description></item>
        /// <item><description>If the cloud service is in the <b>Failed</b> state, the connection to the cloud service failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call this operation, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>The VBR or CCN instance to which your on-premises network is connected is attached to a CEN instance.</description></item>
        /// <item><description>A VPC that is deployed in the same region as the cloud service is attached to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ResolveAndRouteServiceInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ResolveAndRouteServiceInCenResponse
        /// </returns>
        public ResolveAndRouteServiceInCenResponse ResolveAndRouteServiceInCenWithOptions(ResolveAndRouteServiceInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionIds))
            {
                query["AccessRegionIds"] = request.AccessRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResolveAndRouteServiceInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResolveAndRouteServiceInCenResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects an on-premises network to a cloud service.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Cloud services refer to Alibaba Cloud services that use the 100.64.0.0/10 CIDR block to provide services. These cloud services include Object Storage Service (OSS), Simple Log Service (SLS), and Data Transmission Service (DTS). If your on-premises network needs to access a cloud service, you must attach the virtual border router (VBR) or Cloud Connect Network (CCN) instance that is connected to your on-premises network to a Cloud Enterprise Network (CEN) instance. In addition, you must attach a virtual private cloud (VPC) that is deployed in the same region as the cloud service to the CEN instance. This way, your on-premises network can connect to the VPC that is deployed in the same region as the cloud service and access the cloud service through the VPC.</para>
        /// <list type="bullet">
        /// <item><description>This operation is supported only by Basic Edition transit routers. An on-premises network associated with a VBR can use CEN to access only a cloud service that is deployed in the same region.
        /// For example, if cloud services are deployed in the China (Beijing) region, only on-premises networks connected to VBRs in the China (Beijing) region can access the cloud services.</description></item>
        /// <item><description><b>ResolveAndRouteServiceInCen</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeRouteServicesInCen</b> to query the status of a cloud service.<list type="bullet">
        /// <item><description>If the cloud service is in the <b>Creating</b> state, the connection to the cloud service is being created. In this case, you can query the cloud service but cannot perform other operations.</description></item>
        /// <item><description>If the cloud service is in the <b>Active</b> state, the connection to the cloud service is created.</description></item>
        /// <item><description>If the cloud service is in the <b>Failed</b> state, the connection to the cloud service failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call this operation, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>The VBR or CCN instance to which your on-premises network is connected is attached to a CEN instance.</description></item>
        /// <item><description>A VPC that is deployed in the same region as the cloud service is attached to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ResolveAndRouteServiceInCenRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ResolveAndRouteServiceInCenResponse
        /// </returns>
        public async Task<ResolveAndRouteServiceInCenResponse> ResolveAndRouteServiceInCenWithOptionsAsync(ResolveAndRouteServiceInCenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionIds))
            {
                query["AccessRegionIds"] = request.AccessRegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                query["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResolveAndRouteServiceInCen",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResolveAndRouteServiceInCenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects an on-premises network to a cloud service.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Cloud services refer to Alibaba Cloud services that use the 100.64.0.0/10 CIDR block to provide services. These cloud services include Object Storage Service (OSS), Simple Log Service (SLS), and Data Transmission Service (DTS). If your on-premises network needs to access a cloud service, you must attach the virtual border router (VBR) or Cloud Connect Network (CCN) instance that is connected to your on-premises network to a Cloud Enterprise Network (CEN) instance. In addition, you must attach a virtual private cloud (VPC) that is deployed in the same region as the cloud service to the CEN instance. This way, your on-premises network can connect to the VPC that is deployed in the same region as the cloud service and access the cloud service through the VPC.</para>
        /// <list type="bullet">
        /// <item><description>This operation is supported only by Basic Edition transit routers. An on-premises network associated with a VBR can use CEN to access only a cloud service that is deployed in the same region.
        /// For example, if cloud services are deployed in the China (Beijing) region, only on-premises networks connected to VBRs in the China (Beijing) region can access the cloud services.</description></item>
        /// <item><description><b>ResolveAndRouteServiceInCen</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeRouteServicesInCen</b> to query the status of a cloud service.<list type="bullet">
        /// <item><description>If the cloud service is in the <b>Creating</b> state, the connection to the cloud service is being created. In this case, you can query the cloud service but cannot perform other operations.</description></item>
        /// <item><description>If the cloud service is in the <b>Active</b> state, the connection to the cloud service is created.</description></item>
        /// <item><description>If the cloud service is in the <b>Failed</b> state, the connection to the cloud service failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call this operation, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>The VBR or CCN instance to which your on-premises network is connected is attached to a CEN instance.</description></item>
        /// <item><description>A VPC that is deployed in the same region as the cloud service is attached to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ResolveAndRouteServiceInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// ResolveAndRouteServiceInCenResponse
        /// </returns>
        public ResolveAndRouteServiceInCenResponse ResolveAndRouteServiceInCen(ResolveAndRouteServiceInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResolveAndRouteServiceInCenWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Connects an on-premises network to a cloud service.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Cloud services refer to Alibaba Cloud services that use the 100.64.0.0/10 CIDR block to provide services. These cloud services include Object Storage Service (OSS), Simple Log Service (SLS), and Data Transmission Service (DTS). If your on-premises network needs to access a cloud service, you must attach the virtual border router (VBR) or Cloud Connect Network (CCN) instance that is connected to your on-premises network to a Cloud Enterprise Network (CEN) instance. In addition, you must attach a virtual private cloud (VPC) that is deployed in the same region as the cloud service to the CEN instance. This way, your on-premises network can connect to the VPC that is deployed in the same region as the cloud service and access the cloud service through the VPC.</para>
        /// <list type="bullet">
        /// <item><description>This operation is supported only by Basic Edition transit routers. An on-premises network associated with a VBR can use CEN to access only a cloud service that is deployed in the same region.
        /// For example, if cloud services are deployed in the China (Beijing) region, only on-premises networks connected to VBRs in the China (Beijing) region can access the cloud services.</description></item>
        /// <item><description><b>ResolveAndRouteServiceInCen</b> is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call <b>DescribeRouteServicesInCen</b> to query the status of a cloud service.<list type="bullet">
        /// <item><description>If the cloud service is in the <b>Creating</b> state, the connection to the cloud service is being created. In this case, you can query the cloud service but cannot perform other operations.</description></item>
        /// <item><description>If the cloud service is in the <b>Active</b> state, the connection to the cloud service is created.</description></item>
        /// <item><description>If the cloud service is in the <b>Failed</b> state, the connection to the cloud service failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call this operation, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>The VBR or CCN instance to which your on-premises network is connected is attached to a CEN instance.</description></item>
        /// <item><description>A VPC that is deployed in the same region as the cloud service is attached to the CEN instance. For more information, see <a href="https://help.aliyun.com/document_detail/65902.html">AttachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ResolveAndRouteServiceInCenRequest
        /// </param>
        /// 
        /// <returns>
        /// ResolveAndRouteServiceInCenResponse
        /// </returns>
        public async Task<ResolveAndRouteServiceInCenResponse> ResolveAndRouteServiceInCenAsync(ResolveAndRouteServiceInCenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResolveAndRouteServiceInCenWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes the permissions that a transit router has on network instances that belong to another Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>RevokeInstanceFromTransitRouter</c> can be used to revoke permissions on virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs) that belong to another Alibaba Cloud account.
        /// To revoke permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, call the <a href="https://help.aliyun.com/document_detail/126142.html">RevokeInstanceFromCbn</a> operation.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call <c>RevokeInstanceFromTransitRouter</c>, you must detach the network instances from the transit router.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach VPCs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach VBRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach IPsec-VPN connections from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach ECRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterEcrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach network instances from Basic Edition transit routers, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RevokeInstanceFromTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RevokeInstanceFromTransitRouterResponse
        /// </returns>
        public RevokeInstanceFromTransitRouterResponse RevokeInstanceFromTransitRouterWithOptions(RevokeInstanceFromTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceType))
            {
                query["InstanceType"] = request.InstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RevokeInstanceFromTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RevokeInstanceFromTransitRouterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes the permissions that a transit router has on network instances that belong to another Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>RevokeInstanceFromTransitRouter</c> can be used to revoke permissions on virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs) that belong to another Alibaba Cloud account.
        /// To revoke permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, call the <a href="https://help.aliyun.com/document_detail/126142.html">RevokeInstanceFromCbn</a> operation.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call <c>RevokeInstanceFromTransitRouter</c>, you must detach the network instances from the transit router.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach VPCs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach VBRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach IPsec-VPN connections from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach ECRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterEcrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach network instances from Basic Edition transit routers, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RevokeInstanceFromTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RevokeInstanceFromTransitRouterResponse
        /// </returns>
        public async Task<RevokeInstanceFromTransitRouterResponse> RevokeInstanceFromTransitRouterWithOptionsAsync(RevokeInstanceFromTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenOwnerId))
            {
                query["CenOwnerId"] = request.CenOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceType))
            {
                query["InstanceType"] = request.InstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RevokeInstanceFromTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RevokeInstanceFromTransitRouterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes the permissions that a transit router has on network instances that belong to another Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>RevokeInstanceFromTransitRouter</c> can be used to revoke permissions on virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs) that belong to another Alibaba Cloud account.
        /// To revoke permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, call the <a href="https://help.aliyun.com/document_detail/126142.html">RevokeInstanceFromCbn</a> operation.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call <c>RevokeInstanceFromTransitRouter</c>, you must detach the network instances from the transit router.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach VPCs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach VBRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach IPsec-VPN connections from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach ECRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterEcrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach network instances from Basic Edition transit routers, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RevokeInstanceFromTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// RevokeInstanceFromTransitRouterResponse
        /// </returns>
        public RevokeInstanceFromTransitRouterResponse RevokeInstanceFromTransitRouter(RevokeInstanceFromTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RevokeInstanceFromTransitRouterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes the permissions that a transit router has on network instances that belong to another Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><c>RevokeInstanceFromTransitRouter</c> can be used to revoke permissions on virtual private clouds (VPCs), virtual border routers (VBRs), IPsec-VPN connections, and Express Connect Router (ECRs) that belong to another Alibaba Cloud account.
        /// To revoke permissions on Cloud Connect Network (CCN) instances that belong to another Alibaba Cloud account, call the <a href="https://help.aliyun.com/document_detail/126142.html">RevokeInstanceFromCbn</a> operation.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>Before you call <c>RevokeInstanceFromTransitRouter</c>, you must detach the network instances from the transit router.</para>
        /// <list type="bullet">
        /// <item><description>For more information about how to detach VPCs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261220.html">DeleteTransitRouterVpcAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach VBRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/261223.html">DeleteTransitRouterVbrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach IPsec-VPN connections from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterVpnAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach ECRs from Enterprise Edition transit routers, see <a href="https://help.aliyun.com/document_detail/443992.html">DeleteTransitRouterEcrAttachment</a>.</description></item>
        /// <item><description>For more information about how to detach network instances from Basic Edition transit routers, see <a href="https://help.aliyun.com/document_detail/65915.html">DetachCenChildInstance</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RevokeInstanceFromTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// RevokeInstanceFromTransitRouterResponse
        /// </returns>
        public async Task<RevokeInstanceFromTransitRouterResponse> RevokeInstanceFromTransitRouterAsync(RevokeInstanceFromTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RevokeInstanceFromTransitRouterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures PrivateZone.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Alibaba Cloud DNS PrivateZone (PrivateZone) is an Alibaba Cloud private domain name resolution and management service based on Virtual Private Cloud (VPC). After you attach virtual border routers (VBRs) and Cloud Connect Network (CCN) instances to a Cloud Enterprise Network (CEN) instance, you can enable the on-premises networks connected to the VBRs and CCN instances to access PrivateZone through the CEN instance. </para>
        /// <h4>Usage notes</h4>
        /// <list type="bullet">
        /// <item><description>The on-premises networks connected to VBRs or CCN instances must be deployed in the same region as the PrivateZone service. For example, if the PrivateZone service is deployed in the China (Beijing) region, only on-premises networks connected to VBRs or CCN instances in the China (Beijing) region can access the PrivateZone service. </description></item>
        /// <item><description><b>RoutePrivateZoneInCenToVpc</b> is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>DescribeCenPrivateZoneRoutes</b> to query the status of PrivateZone. <list type="bullet">
        /// <item><description>If PrivateZone is in the <b>Creating</b> state, access to PrivateZone is being configured. In this case, you can query PrivateZone configurations but cannot perform other operations. </description></item>
        /// <item><description>If PrivateZone is in the <b>Active</b> state, access to PrivateZone is enabled. </description></item>
        /// <item><description>If PrivateZone is in the <b>Failed</b> state, configurations of access to PrivateZone failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you call <b>RoutePrivateZoneInCenToVpc</b>, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>PrivateZone is deployed. For more information, see <a href="https://help.aliyun.com/document_detail/64627.html">PrivateZone quick start</a>.</description></item>
        /// <item><description>The following network instances are attached to the same CEN instance: the VPC that is associated with the PrivateZone service, and the VBR and CCN instance that want to access the PrivateZone service. For more information, see <a href="https://help.aliyun.com/document_detail/468684.html">AttachCenChildInstance</a>. </description></item>
        /// <item><description>If your on-premises network uses a CCN instance to connect to Alibaba Cloud and the account that owns the CCN instance is different from the account that owns the VPC or CEN instance, you must grant the CCN instance required permissions. For more information, see <a href="https://help.aliyun.com/document_detail/181654.html">Grant permissions to CCN</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RoutePrivateZoneInCenToVpcRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RoutePrivateZoneInCenToVpcResponse
        /// </returns>
        public RoutePrivateZoneInCenToVpcResponse RoutePrivateZoneInCenToVpcWithOptions(RoutePrivateZoneInCenToVpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RoutePrivateZoneInCenToVpc",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RoutePrivateZoneInCenToVpcResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures PrivateZone.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Alibaba Cloud DNS PrivateZone (PrivateZone) is an Alibaba Cloud private domain name resolution and management service based on Virtual Private Cloud (VPC). After you attach virtual border routers (VBRs) and Cloud Connect Network (CCN) instances to a Cloud Enterprise Network (CEN) instance, you can enable the on-premises networks connected to the VBRs and CCN instances to access PrivateZone through the CEN instance. </para>
        /// <h4>Usage notes</h4>
        /// <list type="bullet">
        /// <item><description>The on-premises networks connected to VBRs or CCN instances must be deployed in the same region as the PrivateZone service. For example, if the PrivateZone service is deployed in the China (Beijing) region, only on-premises networks connected to VBRs or CCN instances in the China (Beijing) region can access the PrivateZone service. </description></item>
        /// <item><description><b>RoutePrivateZoneInCenToVpc</b> is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>DescribeCenPrivateZoneRoutes</b> to query the status of PrivateZone. <list type="bullet">
        /// <item><description>If PrivateZone is in the <b>Creating</b> state, access to PrivateZone is being configured. In this case, you can query PrivateZone configurations but cannot perform other operations. </description></item>
        /// <item><description>If PrivateZone is in the <b>Active</b> state, access to PrivateZone is enabled. </description></item>
        /// <item><description>If PrivateZone is in the <b>Failed</b> state, configurations of access to PrivateZone failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you call <b>RoutePrivateZoneInCenToVpc</b>, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>PrivateZone is deployed. For more information, see <a href="https://help.aliyun.com/document_detail/64627.html">PrivateZone quick start</a>.</description></item>
        /// <item><description>The following network instances are attached to the same CEN instance: the VPC that is associated with the PrivateZone service, and the VBR and CCN instance that want to access the PrivateZone service. For more information, see <a href="https://help.aliyun.com/document_detail/468684.html">AttachCenChildInstance</a>. </description></item>
        /// <item><description>If your on-premises network uses a CCN instance to connect to Alibaba Cloud and the account that owns the CCN instance is different from the account that owns the VPC or CEN instance, you must grant the CCN instance required permissions. For more information, see <a href="https://help.aliyun.com/document_detail/181654.html">Grant permissions to CCN</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RoutePrivateZoneInCenToVpcRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RoutePrivateZoneInCenToVpcResponse
        /// </returns>
        public async Task<RoutePrivateZoneInCenToVpcResponse> RoutePrivateZoneInCenToVpcWithOptionsAsync(RoutePrivateZoneInCenToVpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostRegionId))
            {
                query["HostRegionId"] = request.HostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostVpcId))
            {
                query["HostVpcId"] = request.HostVpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RoutePrivateZoneInCenToVpc",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RoutePrivateZoneInCenToVpcResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures PrivateZone.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Alibaba Cloud DNS PrivateZone (PrivateZone) is an Alibaba Cloud private domain name resolution and management service based on Virtual Private Cloud (VPC). After you attach virtual border routers (VBRs) and Cloud Connect Network (CCN) instances to a Cloud Enterprise Network (CEN) instance, you can enable the on-premises networks connected to the VBRs and CCN instances to access PrivateZone through the CEN instance. </para>
        /// <h4>Usage notes</h4>
        /// <list type="bullet">
        /// <item><description>The on-premises networks connected to VBRs or CCN instances must be deployed in the same region as the PrivateZone service. For example, if the PrivateZone service is deployed in the China (Beijing) region, only on-premises networks connected to VBRs or CCN instances in the China (Beijing) region can access the PrivateZone service. </description></item>
        /// <item><description><b>RoutePrivateZoneInCenToVpc</b> is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>DescribeCenPrivateZoneRoutes</b> to query the status of PrivateZone. <list type="bullet">
        /// <item><description>If PrivateZone is in the <b>Creating</b> state, access to PrivateZone is being configured. In this case, you can query PrivateZone configurations but cannot perform other operations. </description></item>
        /// <item><description>If PrivateZone is in the <b>Active</b> state, access to PrivateZone is enabled. </description></item>
        /// <item><description>If PrivateZone is in the <b>Failed</b> state, configurations of access to PrivateZone failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you call <b>RoutePrivateZoneInCenToVpc</b>, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>PrivateZone is deployed. For more information, see <a href="https://help.aliyun.com/document_detail/64627.html">PrivateZone quick start</a>.</description></item>
        /// <item><description>The following network instances are attached to the same CEN instance: the VPC that is associated with the PrivateZone service, and the VBR and CCN instance that want to access the PrivateZone service. For more information, see <a href="https://help.aliyun.com/document_detail/468684.html">AttachCenChildInstance</a>. </description></item>
        /// <item><description>If your on-premises network uses a CCN instance to connect to Alibaba Cloud and the account that owns the CCN instance is different from the account that owns the VPC or CEN instance, you must grant the CCN instance required permissions. For more information, see <a href="https://help.aliyun.com/document_detail/181654.html">Grant permissions to CCN</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RoutePrivateZoneInCenToVpcRequest
        /// </param>
        /// 
        /// <returns>
        /// RoutePrivateZoneInCenToVpcResponse
        /// </returns>
        public RoutePrivateZoneInCenToVpcResponse RoutePrivateZoneInCenToVpc(RoutePrivateZoneInCenToVpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RoutePrivateZoneInCenToVpcWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures PrivateZone.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Alibaba Cloud DNS PrivateZone (PrivateZone) is an Alibaba Cloud private domain name resolution and management service based on Virtual Private Cloud (VPC). After you attach virtual border routers (VBRs) and Cloud Connect Network (CCN) instances to a Cloud Enterprise Network (CEN) instance, you can enable the on-premises networks connected to the VBRs and CCN instances to access PrivateZone through the CEN instance. </para>
        /// <h4>Usage notes</h4>
        /// <list type="bullet">
        /// <item><description>The on-premises networks connected to VBRs or CCN instances must be deployed in the same region as the PrivateZone service. For example, if the PrivateZone service is deployed in the China (Beijing) region, only on-premises networks connected to VBRs or CCN instances in the China (Beijing) region can access the PrivateZone service. </description></item>
        /// <item><description><b>RoutePrivateZoneInCenToVpc</b> is an asynchronous operation. After you send a request, the <b>request ID</b> is returned but the operation is still being performed in the system background. You can call <b>DescribeCenPrivateZoneRoutes</b> to query the status of PrivateZone. <list type="bullet">
        /// <item><description>If PrivateZone is in the <b>Creating</b> state, access to PrivateZone is being configured. In this case, you can query PrivateZone configurations but cannot perform other operations. </description></item>
        /// <item><description>If PrivateZone is in the <b>Active</b> state, access to PrivateZone is enabled. </description></item>
        /// <item><description>If PrivateZone is in the <b>Failed</b> state, configurations of access to PrivateZone failed.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// <h4>Prerequisites</h4>
        /// <para>Before you call <b>RoutePrivateZoneInCenToVpc</b>, make sure that the following conditions are met:</para>
        /// <list type="bullet">
        /// <item><description>PrivateZone is deployed. For more information, see <a href="https://help.aliyun.com/document_detail/64627.html">PrivateZone quick start</a>.</description></item>
        /// <item><description>The following network instances are attached to the same CEN instance: the VPC that is associated with the PrivateZone service, and the VBR and CCN instance that want to access the PrivateZone service. For more information, see <a href="https://help.aliyun.com/document_detail/468684.html">AttachCenChildInstance</a>. </description></item>
        /// <item><description>If your on-premises network uses a CCN instance to connect to Alibaba Cloud and the account that owns the CCN instance is different from the account that owns the VPC or CEN instance, you must grant the CCN instance required permissions. For more information, see <a href="https://help.aliyun.com/document_detail/181654.html">Grant permissions to CCN</a>.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// RoutePrivateZoneInCenToVpcRequest
        /// </param>
        /// 
        /// <returns>
        /// RoutePrivateZoneInCenToVpcResponse
        /// </returns>
        public async Task<RoutePrivateZoneInCenToVpcResponse> RoutePrivateZoneInCenToVpcAsync(RoutePrivateZoneInCenToVpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RoutePrivateZoneInCenToVpcWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures, modifies, or deletes the bandwidth of inter-region connections for a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation is used to manage bandwidth of inter-region connections only for Basic Edition transit routers.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The Cloud Enterprise Network (CEN) instance is associated with a bandwidth plan. For more information, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a> and <a href="https://help.aliyun.com/document_detail/65934.html">AssociateCenBandwidthPackage</a>.
        /// You can call the <b>SetCenInterRegionBandwidthLimit</b> operation to configure, change, or remove the bandwidth limit of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>BandwidthLimit</b> to a value other than 0, the bandwidth of the inter-region connection is set to the specified value.</description></item>
        /// <item><description>If you set <b>BandwidthLimit</b> to 0, the bandwidth of the inter-region connection is no longer limited.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <list type="bullet">
        /// <item><description>The bandwidth limit of an inter-region connection cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>The sum of bandwidth limits of all inter-region connections cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>If bandwidth multiplexing is enabled for an inter-region connection, you cannot change the bandwidth of the inter-region connection.</description></item>
        /// <item><description>The <b>SetCenInterRegionBandwidthLimit</b> operation can be used to configure, modify, or delete the bandwidth of inter-region connections only for Basic Edition transit routers.
        /// To configure, modify, or delete the bandwidth of inter-region connections for Enterprise Edition transit routers, call the <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>, <a href="https://help.aliyun.com/document_detail/261229.html">UpdateTransitRouterPeerAttachmentAttribute</a>, or <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a> operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// SetCenInterRegionBandwidthLimitRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetCenInterRegionBandwidthLimitResponse
        /// </returns>
        public SetCenInterRegionBandwidthLimitResponse SetCenInterRegionBandwidthLimitWithOptions(SetCenInterRegionBandwidthLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthLimit))
            {
                query["BandwidthLimit"] = request.BandwidthLimit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalRegionId))
            {
                query["LocalRegionId"] = request.LocalRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OppositeRegionId))
            {
                query["OppositeRegionId"] = request.OppositeRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetCenInterRegionBandwidthLimit",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetCenInterRegionBandwidthLimitResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures, modifies, or deletes the bandwidth of inter-region connections for a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation is used to manage bandwidth of inter-region connections only for Basic Edition transit routers.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The Cloud Enterprise Network (CEN) instance is associated with a bandwidth plan. For more information, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a> and <a href="https://help.aliyun.com/document_detail/65934.html">AssociateCenBandwidthPackage</a>.
        /// You can call the <b>SetCenInterRegionBandwidthLimit</b> operation to configure, change, or remove the bandwidth limit of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>BandwidthLimit</b> to a value other than 0, the bandwidth of the inter-region connection is set to the specified value.</description></item>
        /// <item><description>If you set <b>BandwidthLimit</b> to 0, the bandwidth of the inter-region connection is no longer limited.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <list type="bullet">
        /// <item><description>The bandwidth limit of an inter-region connection cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>The sum of bandwidth limits of all inter-region connections cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>If bandwidth multiplexing is enabled for an inter-region connection, you cannot change the bandwidth of the inter-region connection.</description></item>
        /// <item><description>The <b>SetCenInterRegionBandwidthLimit</b> operation can be used to configure, modify, or delete the bandwidth of inter-region connections only for Basic Edition transit routers.
        /// To configure, modify, or delete the bandwidth of inter-region connections for Enterprise Edition transit routers, call the <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>, <a href="https://help.aliyun.com/document_detail/261229.html">UpdateTransitRouterPeerAttachmentAttribute</a>, or <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a> operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// SetCenInterRegionBandwidthLimitRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetCenInterRegionBandwidthLimitResponse
        /// </returns>
        public async Task<SetCenInterRegionBandwidthLimitResponse> SetCenInterRegionBandwidthLimitWithOptionsAsync(SetCenInterRegionBandwidthLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthLimit))
            {
                query["BandwidthLimit"] = request.BandwidthLimit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalRegionId))
            {
                query["LocalRegionId"] = request.LocalRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OppositeRegionId))
            {
                query["OppositeRegionId"] = request.OppositeRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetCenInterRegionBandwidthLimit",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetCenInterRegionBandwidthLimitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures, modifies, or deletes the bandwidth of inter-region connections for a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation is used to manage bandwidth of inter-region connections only for Basic Edition transit routers.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The Cloud Enterprise Network (CEN) instance is associated with a bandwidth plan. For more information, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a> and <a href="https://help.aliyun.com/document_detail/65934.html">AssociateCenBandwidthPackage</a>.
        /// You can call the <b>SetCenInterRegionBandwidthLimit</b> operation to configure, change, or remove the bandwidth limit of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>BandwidthLimit</b> to a value other than 0, the bandwidth of the inter-region connection is set to the specified value.</description></item>
        /// <item><description>If you set <b>BandwidthLimit</b> to 0, the bandwidth of the inter-region connection is no longer limited.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <list type="bullet">
        /// <item><description>The bandwidth limit of an inter-region connection cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>The sum of bandwidth limits of all inter-region connections cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>If bandwidth multiplexing is enabled for an inter-region connection, you cannot change the bandwidth of the inter-region connection.</description></item>
        /// <item><description>The <b>SetCenInterRegionBandwidthLimit</b> operation can be used to configure, modify, or delete the bandwidth of inter-region connections only for Basic Edition transit routers.
        /// To configure, modify, or delete the bandwidth of inter-region connections for Enterprise Edition transit routers, call the <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>, <a href="https://help.aliyun.com/document_detail/261229.html">UpdateTransitRouterPeerAttachmentAttribute</a>, or <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a> operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// SetCenInterRegionBandwidthLimitRequest
        /// </param>
        /// 
        /// <returns>
        /// SetCenInterRegionBandwidthLimitResponse
        /// </returns>
        public SetCenInterRegionBandwidthLimitResponse SetCenInterRegionBandwidthLimit(SetCenInterRegionBandwidthLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetCenInterRegionBandwidthLimitWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures, modifies, or deletes the bandwidth of inter-region connections for a Basic Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation is used to manage bandwidth of inter-region connections only for Basic Edition transit routers.</para>
        /// <h3><a href="#"></a>Prerequisites</h3>
        /// <para>The Cloud Enterprise Network (CEN) instance is associated with a bandwidth plan. For more information, see <a href="https://help.aliyun.com/document_detail/65919.html">CreateCenBandwidthPackage</a> and <a href="https://help.aliyun.com/document_detail/65934.html">AssociateCenBandwidthPackage</a>.
        /// You can call the <b>SetCenInterRegionBandwidthLimit</b> operation to configure, change, or remove the bandwidth limit of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If you set <b>BandwidthLimit</b> to a value other than 0, the bandwidth of the inter-region connection is set to the specified value.</description></item>
        /// <item><description>If you set <b>BandwidthLimit</b> to 0, the bandwidth of the inter-region connection is no longer limited.</description></item>
        /// </list>
        /// <h3><a href="#"></a>Limits</h3>
        /// <list type="bullet">
        /// <item><description>The bandwidth limit of an inter-region connection cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>The sum of bandwidth limits of all inter-region connections cannot exceed the bandwidth limit of the associated bandwidth plan.</description></item>
        /// <item><description>If bandwidth multiplexing is enabled for an inter-region connection, you cannot change the bandwidth of the inter-region connection.</description></item>
        /// <item><description>The <b>SetCenInterRegionBandwidthLimit</b> operation can be used to configure, modify, or delete the bandwidth of inter-region connections only for Basic Edition transit routers.
        /// To configure, modify, or delete the bandwidth of inter-region connections for Enterprise Edition transit routers, call the <a href="https://help.aliyun.com/document_detail/261363.html">CreateTransitRouterPeerAttachment</a>, <a href="https://help.aliyun.com/document_detail/261229.html">UpdateTransitRouterPeerAttachmentAttribute</a>, or <a href="https://help.aliyun.com/document_detail/261227.html">DeleteTransitRouterPeerAttachment</a> operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// SetCenInterRegionBandwidthLimitRequest
        /// </param>
        /// 
        /// <returns>
        /// SetCenInterRegionBandwidthLimitResponse
        /// </returns>
        public async Task<SetCenInterRegionBandwidthLimitResponse> SetCenInterRegionBandwidthLimitAsync(SetCenInterRegionBandwidthLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetCenInterRegionBandwidthLimitWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates tags and adds them to a resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Each tag consists of a tag key and a tag value. When you add a tag, you must specify the tag key and tag value.</para>
        /// <list type="bullet">
        /// <item><description>If you want to add multiple tags to a Cloud Enterprise Network (CEN) instance, each tag key must be unique.</description></item>
        /// <item><description>You can add at most 20 tags to a CEN instance.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// TagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// TagResourcesResponse
        /// </returns>
        public TagResourcesResponse TagResourcesWithOptions(TagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates tags and adds them to a resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Each tag consists of a tag key and a tag value. When you add a tag, you must specify the tag key and tag value.</para>
        /// <list type="bullet">
        /// <item><description>If you want to add multiple tags to a Cloud Enterprise Network (CEN) instance, each tag key must be unique.</description></item>
        /// <item><description>You can add at most 20 tags to a CEN instance.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// TagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// TagResourcesResponse
        /// </returns>
        public async Task<TagResourcesResponse> TagResourcesWithOptionsAsync(TagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates tags and adds them to a resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Each tag consists of a tag key and a tag value. When you add a tag, you must specify the tag key and tag value.</para>
        /// <list type="bullet">
        /// <item><description>If you want to add multiple tags to a Cloud Enterprise Network (CEN) instance, each tag key must be unique.</description></item>
        /// <item><description>You can add at most 20 tags to a CEN instance.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// TagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// TagResourcesResponse
        /// </returns>
        public TagResourcesResponse TagResources(TagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TagResourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates tags and adds them to a resource.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Each tag consists of a tag key and a tag value. When you add a tag, you must specify the tag key and tag value.</para>
        /// <list type="bullet">
        /// <item><description>If you want to add multiple tags to a Cloud Enterprise Network (CEN) instance, each tag key must be unique.</description></item>
        /// <item><description>You can add at most 20 tags to a CEN instance.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// TagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// TagResourcesResponse
        /// </returns>
        public async Task<TagResourcesResponse> TagResourcesAsync(TagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TagResourcesWithOptionsAsync(request, runtime);
        }

        /// <param name="request">
        /// TempUpgradeCenBandwidthPackageSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// TempUpgradeCenBandwidthPackageSpecResponse
        /// </returns>
        public TempUpgradeCenBandwidthPackageSpecResponse TempUpgradeCenBandwidthPackageSpecWithOptions(TempUpgradeCenBandwidthPackageSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TempUpgradeCenBandwidthPackageSpec",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TempUpgradeCenBandwidthPackageSpecResponse>(CallApi(params_, req, runtime));
        }

        /// <param name="request">
        /// TempUpgradeCenBandwidthPackageSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// TempUpgradeCenBandwidthPackageSpecResponse
        /// </returns>
        public async Task<TempUpgradeCenBandwidthPackageSpecResponse> TempUpgradeCenBandwidthPackageSpecWithOptionsAsync(TempUpgradeCenBandwidthPackageSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TempUpgradeCenBandwidthPackageSpec",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TempUpgradeCenBandwidthPackageSpecResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <param name="request">
        /// TempUpgradeCenBandwidthPackageSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// TempUpgradeCenBandwidthPackageSpecResponse
        /// </returns>
        public TempUpgradeCenBandwidthPackageSpecResponse TempUpgradeCenBandwidthPackageSpec(TempUpgradeCenBandwidthPackageSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TempUpgradeCenBandwidthPackageSpecWithOptions(request, runtime);
        }

        /// <param name="request">
        /// TempUpgradeCenBandwidthPackageSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// TempUpgradeCenBandwidthPackageSpecResponse
        /// </returns>
        public async Task<TempUpgradeCenBandwidthPackageSpecResponse> TempUpgradeCenBandwidthPackageSpecAsync(TempUpgradeCenBandwidthPackageSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TempUpgradeCenBandwidthPackageSpecWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a Cloud Enterprise Network (CEN) from a bandwidth plan. After the disassociation, the bandwidth can be associated with another CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>No inter-region connections are configured in the bandwidth plan. For more information about how to delete inter-region connections, see <a href="https://help.aliyun.com/document_detail/65942.html">SetCenInterRegionBandwidthLimit</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UnassociateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UnassociateCenBandwidthPackageResponse
        /// </returns>
        public UnassociateCenBandwidthPackageResponse UnassociateCenBandwidthPackageWithOptions(UnassociateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnassociateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnassociateCenBandwidthPackageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a Cloud Enterprise Network (CEN) from a bandwidth plan. After the disassociation, the bandwidth can be associated with another CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>No inter-region connections are configured in the bandwidth plan. For more information about how to delete inter-region connections, see <a href="https://help.aliyun.com/document_detail/65942.html">SetCenInterRegionBandwidthLimit</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UnassociateCenBandwidthPackageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UnassociateCenBandwidthPackageResponse
        /// </returns>
        public async Task<UnassociateCenBandwidthPackageResponse> UnassociateCenBandwidthPackageWithOptionsAsync(UnassociateCenBandwidthPackageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnassociateCenBandwidthPackage",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnassociateCenBandwidthPackageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a Cloud Enterprise Network (CEN) from a bandwidth plan. After the disassociation, the bandwidth can be associated with another CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>No inter-region connections are configured in the bandwidth plan. For more information about how to delete inter-region connections, see <a href="https://help.aliyun.com/document_detail/65942.html">SetCenInterRegionBandwidthLimit</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UnassociateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// UnassociateCenBandwidthPackageResponse
        /// </returns>
        public UnassociateCenBandwidthPackageResponse UnassociateCenBandwidthPackage(UnassociateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnassociateCenBandwidthPackageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a Cloud Enterprise Network (CEN) from a bandwidth plan. After the disassociation, the bandwidth can be associated with another CEN instance.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>No inter-region connections are configured in the bandwidth plan. For more information about how to delete inter-region connections, see <a href="https://help.aliyun.com/document_detail/65942.html">SetCenInterRegionBandwidthLimit</a>.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UnassociateCenBandwidthPackageRequest
        /// </param>
        /// 
        /// <returns>
        /// UnassociateCenBandwidthPackageResponse
        /// </returns>
        public async Task<UnassociateCenBandwidthPackageResponse> UnassociateCenBandwidthPackageAsync(UnassociateCenBandwidthPackageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnassociateCenBandwidthPackageWithOptionsAsync(request, runtime);
        }

        /// <param name="request">
        /// UnroutePrivateZoneInCenToVpcRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UnroutePrivateZoneInCenToVpcResponse
        /// </returns>
        public UnroutePrivateZoneInCenToVpcResponse UnroutePrivateZoneInCenToVpcWithOptions(UnroutePrivateZoneInCenToVpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnroutePrivateZoneInCenToVpc",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnroutePrivateZoneInCenToVpcResponse>(CallApi(params_, req, runtime));
        }

        /// <param name="request">
        /// UnroutePrivateZoneInCenToVpcRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UnroutePrivateZoneInCenToVpcResponse
        /// </returns>
        public async Task<UnroutePrivateZoneInCenToVpcResponse> UnroutePrivateZoneInCenToVpcWithOptionsAsync(UnroutePrivateZoneInCenToVpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessRegionId))
            {
                query["AccessRegionId"] = request.AccessRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnroutePrivateZoneInCenToVpc",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnroutePrivateZoneInCenToVpcResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <param name="request">
        /// UnroutePrivateZoneInCenToVpcRequest
        /// </param>
        /// 
        /// <returns>
        /// UnroutePrivateZoneInCenToVpcResponse
        /// </returns>
        public UnroutePrivateZoneInCenToVpcResponse UnroutePrivateZoneInCenToVpc(UnroutePrivateZoneInCenToVpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnroutePrivateZoneInCenToVpcWithOptions(request, runtime);
        }

        /// <param name="request">
        /// UnroutePrivateZoneInCenToVpcRequest
        /// </param>
        /// 
        /// <returns>
        /// UnroutePrivateZoneInCenToVpcResponse
        /// </returns>
        public async Task<UnroutePrivateZoneInCenToVpcResponse> UnroutePrivateZoneInCenToVpcAsync(UnroutePrivateZoneInCenToVpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnroutePrivateZoneInCenToVpcWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the request.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public UntagResourcesResponse UntagResourcesWithOptions(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the request.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public async Task<UntagResourcesResponse> UntagResourcesWithOptionsAsync(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the request.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public UntagResourcesResponse UntagResources(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UntagResourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>The ID of the request.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public async Task<UntagResourcesResponse> UntagResourcesAsync(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UntagResourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosPolicyAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosPolicyAttributeResponse
        /// </returns>
        public UpdateCenInterRegionTrafficQosPolicyAttributeResponse UpdateCenInterRegionTrafficQosPolicyAttributeWithOptions(UpdateCenInterRegionTrafficQosPolicyAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCenInterRegionTrafficQosPolicyAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCenInterRegionTrafficQosPolicyAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosPolicyAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosPolicyAttributeResponse
        /// </returns>
        public async Task<UpdateCenInterRegionTrafficQosPolicyAttributeResponse> UpdateCenInterRegionTrafficQosPolicyAttributeWithOptionsAsync(UpdateCenInterRegionTrafficQosPolicyAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyDescription))
            {
                query["TrafficQosPolicyDescription"] = request.TrafficQosPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyId))
            {
                query["TrafficQosPolicyId"] = request.TrafficQosPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficQosPolicyName))
            {
                query["TrafficQosPolicyName"] = request.TrafficQosPolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCenInterRegionTrafficQosPolicyAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCenInterRegionTrafficQosPolicyAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosPolicyAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosPolicyAttributeResponse
        /// </returns>
        public UpdateCenInterRegionTrafficQosPolicyAttributeResponse UpdateCenInterRegionTrafficQosPolicyAttribute(UpdateCenInterRegionTrafficQosPolicyAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCenInterRegionTrafficQosPolicyAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a quality of service (QoS) policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosPolicyAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosPolicyAttributeResponse
        /// </returns>
        public async Task<UpdateCenInterRegionTrafficQosPolicyAttributeResponse> UpdateCenInterRegionTrafficQosPolicyAttributeAsync(UpdateCenInterRegionTrafficQosPolicyAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCenInterRegionTrafficQosPolicyAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, inter-region bandwidth, and Differentiated Services Code Point (DSCP) value of a quality of service (QoS) queue.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosQueueAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosQueueAttributeResponse
        /// </returns>
        public UpdateCenInterRegionTrafficQosQueueAttributeResponse UpdateCenInterRegionTrafficQosQueueAttributeWithOptions(UpdateCenInterRegionTrafficQosQueueAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dscps))
            {
                query["Dscps"] = request.Dscps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueDescription))
            {
                query["QosQueueDescription"] = request.QosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueId))
            {
                query["QosQueueId"] = request.QosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueName))
            {
                query["QosQueueName"] = request.QosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemainBandwidthPercent))
            {
                query["RemainBandwidthPercent"] = request.RemainBandwidthPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCenInterRegionTrafficQosQueueAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCenInterRegionTrafficQosQueueAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, inter-region bandwidth, and Differentiated Services Code Point (DSCP) value of a quality of service (QoS) queue.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosQueueAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosQueueAttributeResponse
        /// </returns>
        public async Task<UpdateCenInterRegionTrafficQosQueueAttributeResponse> UpdateCenInterRegionTrafficQosQueueAttributeWithOptionsAsync(UpdateCenInterRegionTrafficQosQueueAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dscps))
            {
                query["Dscps"] = request.Dscps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueDescription))
            {
                query["QosQueueDescription"] = request.QosQueueDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueId))
            {
                query["QosQueueId"] = request.QosQueueId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QosQueueName))
            {
                query["QosQueueName"] = request.QosQueueName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemainBandwidthPercent))
            {
                query["RemainBandwidthPercent"] = request.RemainBandwidthPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCenInterRegionTrafficQosQueueAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCenInterRegionTrafficQosQueueAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, inter-region bandwidth, and Differentiated Services Code Point (DSCP) value of a quality of service (QoS) queue.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosQueueAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosQueueAttributeResponse
        /// </returns>
        public UpdateCenInterRegionTrafficQosQueueAttributeResponse UpdateCenInterRegionTrafficQosQueueAttribute(UpdateCenInterRegionTrafficQosQueueAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCenInterRegionTrafficQosQueueAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, inter-region bandwidth, and Differentiated Services Code Point (DSCP) value of a quality of service (QoS) queue.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCenInterRegionTrafficQosQueueAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCenInterRegionTrafficQosQueueAttributeResponse
        /// </returns>
        public async Task<UpdateCenInterRegionTrafficQosQueueAttributeResponse> UpdateCenInterRegionTrafficQosQueueAttributeAsync(UpdateCenInterRegionTrafficQosQueueAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCenInterRegionTrafficQosQueueAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and traffic classification rules of a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTrafficMarkingPolicyAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTrafficMarkingPolicyAttributeResponse
        /// </returns>
        public UpdateTrafficMarkingPolicyAttributeResponse UpdateTrafficMarkingPolicyAttributeWithOptions(UpdateTrafficMarkingPolicyAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddTrafficMatchRules))
            {
                query["AddTrafficMatchRules"] = request.AddTrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteTrafficMatchRules))
            {
                query["DeleteTrafficMatchRules"] = request.DeleteTrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTrafficMarkingPolicyAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTrafficMarkingPolicyAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and traffic classification rules of a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTrafficMarkingPolicyAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTrafficMarkingPolicyAttributeResponse
        /// </returns>
        public async Task<UpdateTrafficMarkingPolicyAttributeResponse> UpdateTrafficMarkingPolicyAttributeWithOptionsAsync(UpdateTrafficMarkingPolicyAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddTrafficMatchRules))
            {
                query["AddTrafficMatchRules"] = request.AddTrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteTrafficMatchRules))
            {
                query["DeleteTrafficMatchRules"] = request.DeleteTrafficMatchRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyDescription))
            {
                query["TrafficMarkingPolicyDescription"] = request.TrafficMarkingPolicyDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyId))
            {
                query["TrafficMarkingPolicyId"] = request.TrafficMarkingPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TrafficMarkingPolicyName))
            {
                query["TrafficMarkingPolicyName"] = request.TrafficMarkingPolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTrafficMarkingPolicyAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTrafficMarkingPolicyAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and traffic classification rules of a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTrafficMarkingPolicyAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTrafficMarkingPolicyAttributeResponse
        /// </returns>
        public UpdateTrafficMarkingPolicyAttributeResponse UpdateTrafficMarkingPolicyAttribute(UpdateTrafficMarkingPolicyAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTrafficMarkingPolicyAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and traffic classification rules of a traffic marking policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTrafficMarkingPolicyAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTrafficMarkingPolicyAttributeResponse
        /// </returns>
        public async Task<UpdateTrafficMarkingPolicyAttributeResponse> UpdateTrafficMarkingPolicyAttributeAsync(UpdateTrafficMarkingPolicyAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTrafficMarkingPolicyAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouter</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouters</b> operation to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Modifying</b> state, the configuration of the transit router is being modified. You can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router is in the <b>Active</b> state, the configuration of the transit router is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterResponse
        /// </returns>
        public UpdateTransitRouterResponse UpdateTransitRouterWithOptions(UpdateTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterDescription))
            {
                query["TransitRouterDescription"] = request.TransitRouterDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouter</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouters</b> operation to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Modifying</b> state, the configuration of the transit router is being modified. You can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router is in the <b>Active</b> state, the configuration of the transit router is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterResponse
        /// </returns>
        public async Task<UpdateTransitRouterResponse> UpdateTransitRouterWithOptionsAsync(UpdateTransitRouterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterDescription))
            {
                query["TransitRouterDescription"] = request.TransitRouterDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterId))
            {
                query["TransitRouterId"] = request.TransitRouterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterName))
            {
                query["TransitRouterName"] = request.TransitRouterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouter",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouter</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouters</b> operation to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Modifying</b> state, the configuration of the transit router is being modified. You can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router is in the <b>Active</b> state, the configuration of the transit router is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterResponse
        /// </returns>
        public UpdateTransitRouterResponse UpdateTransitRouter(UpdateTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouter</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouters</b> operation to query the status of a transit router.</para>
        /// <list type="bullet">
        /// <item><description>If a transit router is in the <b>Modifying</b> state, the configuration of the transit router is being modified. You can query the transit router but cannot perform other operations.</description></item>
        /// <item><description>If a transit router is in the <b>Active</b> state, the configuration of the transit router is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterResponse
        /// </returns>
        public async Task<UpdateTransitRouterResponse> UpdateTransitRouterAsync(UpdateTransitRouterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of an Express Connect Router (ECR) connection on a Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>UpdateTransitRouterEcrAttachmentAttribute is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If an ECR connection is in the Modifying state, the ECR connection is being modified. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If an ECR connection is in the Attached state, the ECR connection is modified.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterEcrAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterEcrAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterEcrAttachmentAttributeResponse UpdateTransitRouterEcrAttachmentAttributeWithOptions(UpdateTransitRouterEcrAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterEcrAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterEcrAttachmentAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of an Express Connect Router (ECR) connection on a Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>UpdateTransitRouterEcrAttachmentAttribute is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If an ECR connection is in the Modifying state, the ECR connection is being modified. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If an ECR connection is in the Attached state, the ECR connection is modified.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterEcrAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterEcrAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterEcrAttachmentAttributeResponse> UpdateTransitRouterEcrAttachmentAttributeWithOptionsAsync(UpdateTransitRouterEcrAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterEcrAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterEcrAttachmentAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of an Express Connect Router (ECR) connection on a Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>UpdateTransitRouterEcrAttachmentAttribute is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If an ECR connection is in the Modifying state, the ECR connection is being modified. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If an ECR connection is in the Attached state, the ECR connection is modified.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterEcrAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterEcrAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterEcrAttachmentAttributeResponse UpdateTransitRouterEcrAttachmentAttribute(UpdateTransitRouterEcrAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterEcrAttachmentAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of an Express Connect Router (ECR) connection on a Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>UpdateTransitRouterEcrAttachmentAttribute is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the ListTransitRouterEcrAttachments operation to query the status of an ECR connection.
        /// If an ECR connection is in the Modifying state, the ECR connection is being modified. In this case, you can query the ECR connection but cannot perform other operations on the ECR connection. If an ECR connection is in the Attached state, the ECR connection is modified.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterEcrAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterEcrAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterEcrAttachmentAttributeResponse> UpdateTransitRouterEcrAttachmentAttributeAsync(UpdateTransitRouterEcrAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterEcrAttachmentAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterPeerAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Modifying</b> state, the inter-region connection is being modified. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection is in the <b>Attached</b> state, the inter-region connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterPeerAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterPeerAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterPeerAttachmentAttributeResponse UpdateTransitRouterPeerAttachmentAttributeWithOptions(UpdateTransitRouterPeerAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultLinkType))
            {
                query["DefaultLinkType"] = request.DefaultLinkType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterPeerAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterPeerAttachmentAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterPeerAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Modifying</b> state, the inter-region connection is being modified. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection is in the <b>Attached</b> state, the inter-region connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterPeerAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterPeerAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterPeerAttachmentAttributeResponse> UpdateTransitRouterPeerAttachmentAttributeWithOptionsAsync(UpdateTransitRouterPeerAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bandwidth))
            {
                query["Bandwidth"] = request.Bandwidth;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BandwidthType))
            {
                query["BandwidthType"] = request.BandwidthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenBandwidthPackageId))
            {
                query["CenBandwidthPackageId"] = request.CenBandwidthPackageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultLinkType))
            {
                query["DefaultLinkType"] = request.DefaultLinkType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterPeerAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterPeerAttachmentAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterPeerAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Modifying</b> state, the inter-region connection is being modified. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection is in the <b>Attached</b> state, the inter-region connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterPeerAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterPeerAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterPeerAttachmentAttributeResponse UpdateTransitRouterPeerAttachmentAttribute(UpdateTransitRouterPeerAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterPeerAttachmentAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies an inter-region connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterPeerAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterPeerAttachments</b> operation to query the status of an inter-region connection.</para>
        /// <list type="bullet">
        /// <item><description>If an inter-region connection is in the <b>Modifying</b> state, the inter-region connection is being modified. You can query the inter-region connection but cannot perform other operations.</description></item>
        /// <item><description>If an inter-region connection is in the <b>Attached</b> state, the inter-region connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterPeerAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterPeerAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterPeerAttachmentAttributeResponse> UpdateTransitRouterPeerAttachmentAttributeAsync(UpdateTransitRouterPeerAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterPeerAttachmentAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route in a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteEntryResponse
        /// </returns>
        public UpdateTransitRouterRouteEntryResponse UpdateTransitRouterRouteEntryWithOptions(UpdateTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDescription))
            {
                query["TransitRouterRouteEntryDescription"] = request.TransitRouterRouteEntryDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryId))
            {
                query["TransitRouterRouteEntryId"] = request.TransitRouterRouteEntryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryName))
            {
                query["TransitRouterRouteEntryName"] = request.TransitRouterRouteEntryName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterRouteEntryResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route in a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteEntryRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<UpdateTransitRouterRouteEntryResponse> UpdateTransitRouterRouteEntryWithOptionsAsync(UpdateTransitRouterRouteEntryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryDescription))
            {
                query["TransitRouterRouteEntryDescription"] = request.TransitRouterRouteEntryDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryId))
            {
                query["TransitRouterRouteEntryId"] = request.TransitRouterRouteEntryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteEntryName))
            {
                query["TransitRouterRouteEntryName"] = request.TransitRouterRouteEntryName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterRouteEntry",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterRouteEntryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route in a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteEntryResponse
        /// </returns>
        public UpdateTransitRouterRouteEntryResponse UpdateTransitRouterRouteEntry(UpdateTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterRouteEntryWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route in a route table of an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteEntryRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteEntryResponse
        /// </returns>
        public async Task<UpdateTransitRouterRouteEntryResponse> UpdateTransitRouterRouteEntryAsync(UpdateTransitRouterRouteEntryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterRouteEntryWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route table of an Enterprise Edition transit router and enables or disables multi-region equal-cost multi-path (ECMP) routing.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteTableResponse
        /// </returns>
        public UpdateTransitRouterRouteTableResponse UpdateTransitRouterRouteTableWithOptions(UpdateTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableDescription))
            {
                query["TransitRouterRouteTableDescription"] = request.TransitRouterRouteTableDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableName))
            {
                query["TransitRouterRouteTableName"] = request.TransitRouterRouteTableName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route table of an Enterprise Edition transit router and enables or disables multi-region equal-cost multi-path (ECMP) routing.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteTableRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteTableResponse
        /// </returns>
        public async Task<UpdateTransitRouterRouteTableResponse> UpdateTransitRouterRouteTableWithOptionsAsync(UpdateTransitRouterRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteTableOptions))
            {
                query["RouteTableOptions"] = request.RouteTableOptions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableDescription))
            {
                query["TransitRouterRouteTableDescription"] = request.TransitRouterRouteTableDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableId))
            {
                query["TransitRouterRouteTableId"] = request.TransitRouterRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterRouteTableName))
            {
                query["TransitRouterRouteTableName"] = request.TransitRouterRouteTableName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterRouteTable",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route table of an Enterprise Edition transit router and enables or disables multi-region equal-cost multi-path (ECMP) routing.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteTableResponse
        /// </returns>
        public UpdateTransitRouterRouteTableResponse UpdateTransitRouterRouteTable(UpdateTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterRouteTableWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a route table of an Enterprise Edition transit router and enables or disables multi-region equal-cost multi-path (ECMP) routing.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterRouteTableRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterRouteTableResponse
        /// </returns>
        public async Task<UpdateTransitRouterRouteTableResponse> UpdateTransitRouterRouteTableAsync(UpdateTransitRouterRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterRouteTableWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and enables or disables automatic route advertisement for a virtual border router (VBR) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVbrAttachmentAttribute</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Modifying</b> state, the VBR connection is being modified. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVbrAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVbrAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVbrAttachmentAttributeResponse UpdateTransitRouterVbrAttachmentAttributeWithOptions(UpdateTransitRouterVbrAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVbrAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVbrAttachmentAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and enables or disables automatic route advertisement for a virtual border router (VBR) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVbrAttachmentAttribute</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Modifying</b> state, the VBR connection is being modified. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVbrAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVbrAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVbrAttachmentAttributeResponse> UpdateTransitRouterVbrAttachmentAttributeWithOptionsAsync(UpdateTransitRouterVbrAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVbrAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVbrAttachmentAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and enables or disables automatic route advertisement for a virtual border router (VBR) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVbrAttachmentAttribute</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Modifying</b> state, the VBR connection is being modified. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVbrAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVbrAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVbrAttachmentAttributeResponse UpdateTransitRouterVbrAttachmentAttribute(UpdateTransitRouterVbrAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterVbrAttachmentAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name, description, and enables or disables automatic route advertisement for a virtual border router (VBR) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVbrAttachmentAttribute</em>* is an asynchronous operation. After a request is sent, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVbrAttachments</b> operation to query the status of a VBR connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VBR connection is in the <b>Modifying</b> state, the VBR connection is being modified. You can query the VBR connection but cannot perform other operations.</description></item>
        /// <item><description>If the VBR connection is in the <b>Attached</b> state, the VBR connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVbrAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVbrAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVbrAttachmentAttributeResponse> UpdateTransitRouterVbrAttachmentAttributeAsync(UpdateTransitRouterVbrAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterVbrAttachmentAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a virtual private cloud (VPC) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVpcAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateTransitRouterVpcAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVpcAttachmentAttributeResponse UpdateTransitRouterVpcAttachmentAttributeWithOptions(UpdateTransitRouterVpcAttachmentAttributeRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateTransitRouterVpcAttachmentAttributeShrinkRequest request = new UpdateTransitRouterVpcAttachmentAttributeShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterVPCAttachmentOptions))
            {
                request.TransitRouterVPCAttachmentOptionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterVPCAttachmentOptions, "TransitRouterVPCAttachmentOptions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterVPCAttachmentOptionsShrink))
            {
                query["TransitRouterVPCAttachmentOptions"] = request.TransitRouterVPCAttachmentOptionsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpcAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpcAttachmentAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a virtual private cloud (VPC) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVpcAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateTransitRouterVpcAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpcAttachmentAttributeResponse> UpdateTransitRouterVpcAttachmentAttributeWithOptionsAsync(UpdateTransitRouterVpcAttachmentAttributeRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateTransitRouterVpcAttachmentAttributeShrinkRequest request = new UpdateTransitRouterVpcAttachmentAttributeShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TransitRouterVPCAttachmentOptions))
            {
                request.TransitRouterVPCAttachmentOptionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TransitRouterVPCAttachmentOptions, "TransitRouterVPCAttachmentOptions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterVPCAttachmentOptionsShrink))
            {
                query["TransitRouterVPCAttachmentOptions"] = request.TransitRouterVPCAttachmentOptionsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpcAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpcAttachmentAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a virtual private cloud (VPC) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVpcAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVpcAttachmentAttributeResponse UpdateTransitRouterVpcAttachmentAttribute(UpdateTransitRouterVpcAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterVpcAttachmentAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the name and description of a virtual private cloud (VPC) connection on an Enterprise Edition transit router.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para><em>UpdateTransitRouterVpcAttachmentAttribute</em>* is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.</para>
        /// <list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpcAttachmentAttributeResponse> UpdateTransitRouterVpcAttachmentAttributeAsync(UpdateTransitRouterVpcAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterVpcAttachmentAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the zones and vSwitches that are associated with a virtual private cloud (VPC) connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you add a zone and a vSwitch for a VPC connection, make sure that the vSwitch has at least one idle IP address. When you modify the zones and vSwitches of a VPC connection, the Enterprise Edition transit router creates an elastic network interface (ENI) in the vSwitch. The ENI occupies one IP address in the vSwitch. The ENI forwards traffic between the VPC and the Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>UpdateTransitRouterVpcAttachmentZones</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentZonesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentZonesResponse
        /// </returns>
        public UpdateTransitRouterVpcAttachmentZonesResponse UpdateTransitRouterVpcAttachmentZonesWithOptions(UpdateTransitRouterVpcAttachmentZonesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddZoneMappings))
            {
                query["AddZoneMappings"] = request.AddZoneMappings;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoveZoneMappings))
            {
                query["RemoveZoneMappings"] = request.RemoveZoneMappings;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpcAttachmentZones",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpcAttachmentZonesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the zones and vSwitches that are associated with a virtual private cloud (VPC) connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you add a zone and a vSwitch for a VPC connection, make sure that the vSwitch has at least one idle IP address. When you modify the zones and vSwitches of a VPC connection, the Enterprise Edition transit router creates an elastic network interface (ENI) in the vSwitch. The ENI occupies one IP address in the vSwitch. The ENI forwards traffic between the VPC and the Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>UpdateTransitRouterVpcAttachmentZones</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentZonesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentZonesResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpcAttachmentZonesResponse> UpdateTransitRouterVpcAttachmentZonesWithOptionsAsync(UpdateTransitRouterVpcAttachmentZonesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddZoneMappings))
            {
                query["AddZoneMappings"] = request.AddZoneMappings;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoveZoneMappings))
            {
                query["RemoveZoneMappings"] = request.RemoveZoneMappings;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpcAttachmentZones",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpcAttachmentZonesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the zones and vSwitches that are associated with a virtual private cloud (VPC) connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you add a zone and a vSwitch for a VPC connection, make sure that the vSwitch has at least one idle IP address. When you modify the zones and vSwitches of a VPC connection, the Enterprise Edition transit router creates an elastic network interface (ENI) in the vSwitch. The ENI occupies one IP address in the vSwitch. The ENI forwards traffic between the VPC and the Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>UpdateTransitRouterVpcAttachmentZones</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentZonesRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentZonesResponse
        /// </returns>
        public UpdateTransitRouterVpcAttachmentZonesResponse UpdateTransitRouterVpcAttachmentZones(UpdateTransitRouterVpcAttachmentZonesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterVpcAttachmentZonesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the zones and vSwitches that are associated with a virtual private cloud (VPC) connection.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  When you add a zone and a vSwitch for a VPC connection, make sure that the vSwitch has at least one idle IP address. When you modify the zones and vSwitches of a VPC connection, the Enterprise Edition transit router creates an elastic network interface (ENI) in the vSwitch. The ENI occupies one IP address in the vSwitch. The ENI forwards traffic between the VPC and the Enterprise Edition transit router.</para>
        /// <list type="bullet">
        /// <item><description><b>UpdateTransitRouterVpcAttachmentZones</b> is an asynchronous operation. After you send a request, the system returns a <b>request ID</b> and runs the task in the background. You can call the <b>ListTransitRouterVpcAttachments</b> operation to query the status of a VPC connection.<list type="bullet">
        /// <item><description>If a VPC connection is in the <b>Modifying</b> state, the VPC connection is being modified. You can query the VPC connection but cannot perform other operations.</description></item>
        /// <item><description>If a VPC connection is in the <b>Attached</b> state, the VPC connection is modified.</description></item>
        /// </list>
        /// </description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpcAttachmentZonesRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpcAttachmentZonesResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpcAttachmentZonesResponse> UpdateTransitRouterVpcAttachmentZonesAsync(UpdateTransitRouterVpcAttachmentZonesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterVpcAttachmentZonesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of a VPN attachment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpnAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpnAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVpnAttachmentAttributeResponse UpdateTransitRouterVpnAttachmentAttributeWithOptions(UpdateTransitRouterVpnAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpnAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpnAttachmentAttributeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of a VPN attachment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpnAttachmentAttributeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpnAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpnAttachmentAttributeResponse> UpdateTransitRouterVpnAttachmentAttributeWithOptionsAsync(UpdateTransitRouterVpnAttachmentAttributeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPublishRouteEnabled))
            {
                query["AutoPublishRouteEnabled"] = request.AutoPublishRouteEnabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientToken))
            {
                query["ClientToken"] = request.ClientToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerAccount))
            {
                query["OwnerAccount"] = request.OwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentDescription))
            {
                query["TransitRouterAttachmentDescription"] = request.TransitRouterAttachmentDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentId))
            {
                query["TransitRouterAttachmentId"] = request.TransitRouterAttachmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransitRouterAttachmentName))
            {
                query["TransitRouterAttachmentName"] = request.TransitRouterAttachmentName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTransitRouterVpnAttachmentAttribute",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTransitRouterVpnAttachmentAttributeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of a VPN attachment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpnAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpnAttachmentAttributeResponse
        /// </returns>
        public UpdateTransitRouterVpnAttachmentAttributeResponse UpdateTransitRouterVpnAttachmentAttribute(UpdateTransitRouterVpnAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTransitRouterVpnAttachmentAttributeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of a VPN attachment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTransitRouterVpnAttachmentAttributeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTransitRouterVpnAttachmentAttributeResponse
        /// </returns>
        public async Task<UpdateTransitRouterVpnAttachmentAttributeResponse> UpdateTransitRouterVpnAttachmentAttributeAsync(UpdateTransitRouterVpnAttachmentAttributeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTransitRouterVpnAttachmentAttributeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Withdraws the routes of a virtual private cloud (VPC) or a virtual border router (VBR) from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// WithdrawPublishedRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// WithdrawPublishedRouteEntriesResponse
        /// </returns>
        public WithdrawPublishedRouteEntriesResponse WithdrawPublishedRouteEntriesWithOptions(WithdrawPublishedRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "WithdrawPublishedRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<WithdrawPublishedRouteEntriesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Withdraws the routes of a virtual private cloud (VPC) or a virtual border router (VBR) from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// WithdrawPublishedRouteEntriesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// WithdrawPublishedRouteEntriesResponse
        /// </returns>
        public async Task<WithdrawPublishedRouteEntriesResponse> WithdrawPublishedRouteEntriesWithOptionsAsync(WithdrawPublishedRouteEntriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CenId))
            {
                query["CenId"] = request.CenId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceId))
            {
                query["ChildInstanceId"] = request.ChildInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRegionId))
            {
                query["ChildInstanceRegionId"] = request.ChildInstanceRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceRouteTableId))
            {
                query["ChildInstanceRouteTableId"] = request.ChildInstanceRouteTableId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChildInstanceType))
            {
                query["ChildInstanceType"] = request.ChildInstanceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationCidrBlock))
            {
                query["DestinationCidrBlock"] = request.DestinationCidrBlock;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerAccount))
            {
                query["ResourceOwnerAccount"] = request.ResourceOwnerAccount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "WithdrawPublishedRouteEntries",
                Version = "2017-09-12",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<WithdrawPublishedRouteEntriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Withdraws the routes of a virtual private cloud (VPC) or a virtual border router (VBR) from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// WithdrawPublishedRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// WithdrawPublishedRouteEntriesResponse
        /// </returns>
        public WithdrawPublishedRouteEntriesResponse WithdrawPublishedRouteEntries(WithdrawPublishedRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return WithdrawPublishedRouteEntriesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Withdraws the routes of a virtual private cloud (VPC) or a virtual border router (VBR) from a Cloud Enterprise Network (CEN) instance.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// WithdrawPublishedRouteEntriesRequest
        /// </param>
        /// 
        /// <returns>
        /// WithdrawPublishedRouteEntriesResponse
        /// </returns>
        public async Task<WithdrawPublishedRouteEntriesResponse> WithdrawPublishedRouteEntriesAsync(WithdrawPublishedRouteEntriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await WithdrawPublishedRouteEntriesWithOptionsAsync(request, runtime);
        }

    }
}
