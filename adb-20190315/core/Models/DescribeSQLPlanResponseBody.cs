// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Adb20190315.Models
{
    public class DescribeSQLPlanResponseBody : TeaModel {
        /// <summary>
        /// <para>The execution information about the SQL statement.</para>
        /// </summary>
        [NameInMap("Detail")]
        [Validation(Required=false)]
        public DescribeSQLPlanResponseBodyDetail Detail { get; set; }
        public class DescribeSQLPlanResponseBodyDetail : TeaModel {
            /// <summary>
            /// <para>The total CPU time consumed by all operators on multithreaded servers when the SQL statement is executed. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>6100</para>
            /// </summary>
            [NameInMap("CPUTime")]
            [Validation(Required=false)]
            public long? CPUTime { get; set; }

            /// <summary>
            /// <para>The IP address of the client that is used to execute the SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>172.16.<em><b>.</b></em></para>
            /// </summary>
            [NameInMap("ClientIP")]
            [Validation(Required=false)]
            public string ClientIP { get; set; }

            /// <summary>
            /// <para>The name of the database on which the SQL statement was executed.</para>
            /// 
            /// <b>Example:</b>
            /// <para>adb_demo</para>
            /// </summary>
            [NameInMap("Database")]
            [Validation(Required=false)]
            public string Database { get; set; }

            /// <summary>
            /// <para>The total number of rows generated by the SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("OutputRows")]
            [Validation(Required=false)]
            public long? OutputRows { get; set; }

            /// <summary>
            /// <para>The total amount of data generated by the SQL statement. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>9</para>
            /// </summary>
            [NameInMap("OutputSize")]
            [Validation(Required=false)]
            public long? OutputSize { get; set; }

            /// <summary>
            /// <para>The maximum memory usage when the SQL statement is executed. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>441802</para>
            /// </summary>
            [NameInMap("PeakMemory")]
            [Validation(Required=false)]
            public long? PeakMemory { get; set; }

            /// <summary>
            /// <para>The amount of time consumed to generate the execution plan of the SQL statement. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>86</para>
            /// </summary>
            [NameInMap("PlanningTime")]
            [Validation(Required=false)]
            public long? PlanningTime { get; set; }

            /// <summary>
            /// <para>The amount of time consumed to queue the SQL statement. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("QueuedTime")]
            [Validation(Required=false)]
            public long? QueuedTime { get; set; }

            /// <summary>
            /// <para>The SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>INSERT OVERWRITE INTO hdfs_import_external\nSELECT *\nFROM adb_hdfs_import_source</para>
            /// </summary>
            [NameInMap("SQL")]
            [Validation(Required=false)]
            public string SQL { get; set; }

            /// <summary>
            /// <para>The execution start time of the SQL statement. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1622102683243</para>
            /// </summary>
            [NameInMap("StartTime")]
            [Validation(Required=false)]
            public string StartTime { get; set; }

            /// <summary>
            /// <para>The final execution state of the SQL statement. Valid values:</para>
            /// <list type="bullet">
            /// <item><description>FINISHED</description></item>
            /// <item><description>FAILED</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>FINISHED</para>
            /// </summary>
            [NameInMap("State")]
            [Validation(Required=false)]
            public string State { get; set; }

            /// <summary>
            /// <para>The total number of stages in the SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>4</para>
            /// </summary>
            [NameInMap("TotalStage")]
            [Validation(Required=false)]
            public long? TotalStage { get; set; }

            /// <summary>
            /// <para>The total number of tasks in the SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>4</para>
            /// </summary>
            [NameInMap("TotalTask")]
            [Validation(Required=false)]
            public long? TotalTask { get; set; }

            /// <summary>
            /// <para>The total amount of time consumed to execute the SQL statement. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2340</para>
            /// </summary>
            [NameInMap("TotalTime")]
            [Validation(Required=false)]
            public long? TotalTime { get; set; }

            /// <summary>
            /// <para>The name of the user who submitted the SQL statement.</para>
            /// 
            /// <b>Example:</b>
            /// <para>test_acc</para>
            /// </summary>
            [NameInMap("User")]
            [Validation(Required=false)]
            public string User { get; set; }

        }

        /// <summary>
        /// <para>The original information about the SQL statement.</para>
        /// 
        /// <b>Example:</b>
        /// <para>{\&quot;queryId\&quot;:\&quot;20210527_160443_10581_hdhzr\&quot;,\&quot;session\&quot;:{\&quot;queryId\&quot;:\&quot;20210527_160443_10581_hdhzr\&quot;,\&quot;hasSharedStage\&quot;:false,\&quot;parentId\&quot;:0}}</para>
        /// </summary>
        [NameInMap("OriginInfo")]
        [Validation(Required=false)]
        public string OriginInfo { get; set; }

        /// <summary>
        /// <para>The request ID.</para>
        /// 
        /// <b>Example:</b>
        /// <para>22D6DEF0-CBC7-4388-A41C-D5FD62******</para>
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// <para>The queried plan in different stages.</para>
        /// </summary>
        [NameInMap("StageList")]
        [Validation(Required=false)]
        public List<DescribeSQLPlanResponseBodyStageList> StageList { get; set; }
        public class DescribeSQLPlanResponseBodyStageList : TeaModel {
            /// <summary>
            /// <para>The average <c>CPU Time</c> value on each compute node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>5984</para>
            /// </summary>
            [NameInMap("CPUTimeAvg")]
            [Validation(Required=false)]
            public long? CPUTimeAvg { get; set; }

            /// <summary>
            /// <para>The maximum <c>CPU Time</c> value on each compute node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>5984</para>
            /// </summary>
            [NameInMap("CPUTimeMax")]
            [Validation(Required=false)]
            public long? CPUTimeMax { get; set; }

            /// <summary>
            /// <para>The minimum <c>CPU Time</c> value on each compute node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>47</para>
            /// </summary>
            [NameInMap("CPUTimeMin")]
            [Validation(Required=false)]
            public long? CPUTimeMin { get; set; }

            /// <summary>
            /// <para>The average amount of input data on each compute node in the stage. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>173</para>
            /// </summary>
            [NameInMap("InputSizeAvg")]
            [Validation(Required=false)]
            public long? InputSizeAvg { get; set; }

            /// <summary>
            /// <para>The maximum amount of input data on each compute node in the stage. Unit: byte.</para>
            /// 
            /// <b>Example:</b>
            /// <para>173</para>
            /// </summary>
            [NameInMap("InputSizeMax")]
            [Validation(Required=false)]
            public long? InputSizeMax { get; set; }

            /// <summary>
            /// <para>The minimum amount of input data on each compute node in the stage. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>173</para>
            /// </summary>
            [NameInMap("InputSizeMin")]
            [Validation(Required=false)]
            public long? InputSizeMin { get; set; }

            /// <summary>
            /// <para>The total CPU time consumed by all operators in the stage, which is equivalent to the total CPU time of the stage. You can use this parameter to determine which parts of the stage consume a large amount of computing resources. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>5984</para>
            /// </summary>
            [NameInMap("OperatorCost")]
            [Validation(Required=false)]
            public long? OperatorCost { get; set; }

            /// <summary>
            /// <para>The maximum memory usage when the SQL statement is executed. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>74208</para>
            /// </summary>
            [NameInMap("PeakMemory")]
            [Validation(Required=false)]
            public long? PeakMemory { get; set; }

            /// <summary>
            /// <para>The average amount of data scanned by a scan operator on each storage node in the stage. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanSizeAvg")]
            [Validation(Required=false)]
            public long? ScanSizeAvg { get; set; }

            /// <summary>
            /// <para>The maximum amount of data scanned by a scan operator on each storage node in the stage. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanSizeMax")]
            [Validation(Required=false)]
            public long? ScanSizeMax { get; set; }

            /// <summary>
            /// <para>The minimum amount of data scanned by a scan operator on each storage node in the stage. Unit: bytes.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanSizeMin")]
            [Validation(Required=false)]
            public long? ScanSizeMin { get; set; }

            /// <summary>
            /// <para>The average amount of time consumed by a scan operator to read data on each storage node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanTimeAvg")]
            [Validation(Required=false)]
            public long? ScanTimeAvg { get; set; }

            /// <summary>
            /// <para>The maximum amount of time consumed by a scan operator to read data on each storage node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanTimeMax")]
            [Validation(Required=false)]
            public long? ScanTimeMax { get; set; }

            /// <summary>
            /// <para>The minimum amount of time consumed by a scan operator to read data on each storage node in the stage. Unit: milliseconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("ScanTimeMin")]
            [Validation(Required=false)]
            public long? ScanTimeMin { get; set; }

            /// <summary>
            /// <para>The stage ID.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("StageId")]
            [Validation(Required=false)]
            public int? StageId { get; set; }

            /// <summary>
            /// <para>The final execution state of the stage. Valid values:</para>
            /// <list type="bullet">
            /// <item><description>FINISHED</description></item>
            /// <item><description>CANCELED</description></item>
            /// <item><description>ABORTED</description></item>
            /// <item><description>FAILED</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>FINISHED</para>
            /// </summary>
            [NameInMap("State")]
            [Validation(Required=false)]
            public string State { get; set; }

        }

    }

}
